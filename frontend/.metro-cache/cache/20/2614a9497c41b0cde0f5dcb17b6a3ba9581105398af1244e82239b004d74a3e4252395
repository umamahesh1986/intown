{"dependencies":[{"name":"./../utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":34,"index":49}}],"key":"8zkpYReudTMTBo5KHceTn65cu2I=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _utilsJs = require(_dependencyMap[0], \"./../utils.js\");\n  var utils = _interopDefault(_utilsJs);\n  // RawAxiosHeaders whose duplicates are ignored by node\n  // c.f. https://nodejs.org/api/http.html#http_message_headers\n  const ignoreDuplicateOf = utils.default.toObjectSet(['age', 'authorization', 'content-length', 'content-type', 'etag', 'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since', 'last-modified', 'location', 'max-forwards', 'proxy-authorization', 'referer', 'retry-after', 'user-agent']);\n\n  /**\n   * Parse headers into an object\n   *\n   * ```\n   * Date: Wed, 27 Aug 2014 08:58:49 GMT\n   * Content-Type: application/json\n   * Connection: keep-alive\n   * Transfer-Encoding: chunked\n   * ```\n   *\n   * @param {String} rawHeaders Headers needing to be parsed\n   *\n   * @returns {Object} Headers parsed into an object\n   */\n  var _default = rawHeaders => {\n    const parsed = {};\n    let key;\n    let val;\n    let i;\n    rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n      i = line.indexOf(':');\n      key = line.substring(0, i).trim().toLowerCase();\n      val = line.substring(i + 1).trim();\n      if (!key || parsed[key] && ignoreDuplicateOf[key]) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        if (parsed[key]) {\n          parsed[key].push(val);\n        } else {\n          parsed[key] = [val];\n        }\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    });\n    return parsed;\n  };\n});","lineCount":62,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,28,0,"Object"],[12,8,28,0],[12,9,28,0,"defineProperty"],[12,23,28,0],[12,24,28,0,"exports"],[12,31,28,0],[13,4,28,0,"enumerable"],[13,14,28,0],[14,4,28,0,"get"],[14,7,28,0],[14,18,28,0,"get"],[14,19,28,0],[15,6,28,0],[15,13,28,0,"_default"],[15,21,28,0],[16,4,28,0],[17,2,28,0],[18,2,3,0],[18,6,3,0,"_utilsJs"],[18,14,3,0],[18,17,3,0,"require"],[18,24,3,0],[18,25,3,0,"_dependencyMap"],[18,39,3,0],[19,2,3,0],[19,6,3,0,"utils"],[19,11,3,0],[19,14,3,0,"_interopDefault"],[19,29,3,0],[19,30,3,0,"_utilsJs"],[19,38,3,0],[20,2,5,0],[21,2,6,0],[22,2,7,0],[22,8,7,6,"ignoreDuplicateOf"],[22,25,7,23],[22,28,7,26,"utils"],[22,33,7,31],[22,34,7,31,"default"],[22,41,7,31],[22,42,7,32,"toObjectSet"],[22,53,7,43],[22,54,7,44],[22,55,8,2],[22,60,8,7],[22,62,8,9],[22,77,8,24],[22,79,8,26],[22,95,8,42],[22,97,8,44],[22,111,8,58],[22,113,8,60],[22,119,8,66],[22,121,9,2],[22,130,9,11],[22,132,9,13],[22,138,9,19],[22,140,9,21],[22,146,9,27],[22,148,9,29],[22,167,9,48],[22,169,9,50],[22,190,9,71],[22,192,10,2],[22,207,10,17],[22,209,10,19],[22,219,10,29],[22,221,10,31],[22,235,10,45],[22,237,10,47],[22,258,10,68],[22,260,11,2],[22,269,11,11],[22,271,11,13],[22,284,11,26],[22,286,11,28],[22,298,11,40],[22,299,12,1],[22,300,12,2],[24,2,14,0],[25,0,15,0],[26,0,16,0],[27,0,17,0],[28,0,18,0],[29,0,19,0],[30,0,20,0],[31,0,21,0],[32,0,22,0],[33,0,23,0],[34,0,24,0],[35,0,25,0],[36,0,26,0],[37,0,27,0],[38,2,28,0],[38,6,28,0,"_default"],[38,14,28,0],[38,17,28,15,"rawHeaders"],[38,27,28,25],[38,31,28,29],[39,4,29,2],[39,10,29,8,"parsed"],[39,16,29,14],[39,19,29,17],[39,20,29,18],[39,21,29,19],[40,4,30,2],[40,8,30,6,"key"],[40,11,30,9],[41,4,31,2],[41,8,31,6,"val"],[41,11,31,9],[42,4,32,2],[42,8,32,6,"i"],[42,9,32,7],[43,4,34,2,"rawHeaders"],[43,14,34,12],[43,18,34,16,"rawHeaders"],[43,28,34,26],[43,29,34,27,"split"],[43,34,34,32],[43,35,34,33],[43,39,34,37],[43,40,34,38],[43,41,34,39,"forEach"],[43,48,34,46],[43,49,34,47],[43,58,34,56,"parser"],[43,64,34,62,"parser"],[43,65,34,63,"line"],[43,69,34,67],[43,71,34,69],[44,6,35,4,"i"],[44,7,35,5],[44,10,35,8,"line"],[44,14,35,12],[44,15,35,13,"indexOf"],[44,22,35,20],[44,23,35,21],[44,26,35,24],[44,27,35,25],[45,6,36,4,"key"],[45,9,36,7],[45,12,36,10,"line"],[45,16,36,14],[45,17,36,15,"substring"],[45,26,36,24],[45,27,36,25],[45,28,36,26],[45,30,36,28,"i"],[45,31,36,29],[45,32,36,30],[45,33,36,31,"trim"],[45,37,36,35],[45,38,36,36],[45,39,36,37],[45,40,36,38,"toLowerCase"],[45,51,36,49],[45,52,36,50],[45,53,36,51],[46,6,37,4,"val"],[46,9,37,7],[46,12,37,10,"line"],[46,16,37,14],[46,17,37,15,"substring"],[46,26,37,24],[46,27,37,25,"i"],[46,28,37,26],[46,31,37,29],[46,32,37,30],[46,33,37,31],[46,34,37,32,"trim"],[46,38,37,36],[46,39,37,37],[46,40,37,38],[47,6,39,4],[47,10,39,8],[47,11,39,9,"key"],[47,14,39,12],[47,18,39,17,"parsed"],[47,24,39,23],[47,25,39,24,"key"],[47,28,39,27],[47,29,39,28],[47,33,39,32,"ignoreDuplicateOf"],[47,50,39,49],[47,51,39,50,"key"],[47,54,39,53],[47,55,39,55],[47,57,39,57],[48,8,40,6],[49,6,41,4],[50,6,43,4],[50,10,43,8,"key"],[50,13,43,11],[50,18,43,16],[50,30,43,28],[50,32,43,30],[51,8,44,6],[51,12,44,10,"parsed"],[51,18,44,16],[51,19,44,17,"key"],[51,22,44,20],[51,23,44,21],[51,25,44,23],[52,10,45,8,"parsed"],[52,16,45,14],[52,17,45,15,"key"],[52,20,45,18],[52,21,45,19],[52,22,45,20,"push"],[52,26,45,24],[52,27,45,25,"val"],[52,30,45,28],[52,31,45,29],[53,8,46,6],[53,9,46,7],[53,15,46,13],[54,10,47,8,"parsed"],[54,16,47,14],[54,17,47,15,"key"],[54,20,47,18],[54,21,47,19],[54,24,47,22],[54,25,47,23,"val"],[54,28,47,26],[54,29,47,27],[55,8,48,6],[56,6,49,4],[56,7,49,5],[56,13,49,11],[57,8,50,6,"parsed"],[57,14,50,12],[57,15,50,13,"key"],[57,18,50,16],[57,19,50,17],[57,22,50,20,"parsed"],[57,28,50,26],[57,29,50,27,"key"],[57,32,50,30],[57,33,50,31],[57,36,50,34,"parsed"],[57,42,50,40],[57,43,50,41,"key"],[57,46,50,44],[57,47,50,45],[57,50,50,48],[57,54,50,52],[57,57,50,55,"val"],[57,60,50,58],[57,63,50,61,"val"],[57,66,50,64],[58,6,51,4],[59,4,52,2],[59,5,52,3],[59,6,52,4],[60,4,54,2],[60,11,54,9,"parsed"],[60,17,54,15],[61,2,55,0],[61,3,55,1],[62,0,55,2],[62,3]],"functionMap":{"names":["<global>","default","parser"],"mappings":"AAA;eC2B;+CCM;GDkB;CDG"},"hasCjsExports":false},"type":"js/module"}]}