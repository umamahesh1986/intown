{"dependencies":[{"name":"util","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":24,"index":24}}],"key":"Bf9PtPW7+veKQMh7B7ds7b1JRAE=","exportNames":["*"],"imports":1}},{"name":"stream","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":25},"end":{"line":2,"column":32,"index":57}}],"key":"zqzemo30Pa+agKo6Jlvuf3baHHA=","exportNames":["*"],"imports":1}},{"name":"../utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":58},"end":{"line":3,"column":32,"index":90}}],"key":"dGswK136diHRCgUa8xpQUn/UMbc=","exportNames":["*"],"imports":1}},{"name":"./readBlob.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":91},"end":{"line":4,"column":37,"index":128}}],"key":"DoTfyulefU1cu3RiyrUi5ZFie6o=","exportNames":["*"],"imports":1}},{"name":"../platform/index.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":129},"end":{"line":5,"column":44,"index":173}}],"key":"T7TU1TBYuangUQrrpmlcbtGpNpE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _util = require(_dependencyMap[0], \"util\");\n  var util = _interopDefault(_util);\n  var _stream = require(_dependencyMap[1], \"stream\");\n  var _utilsJs = require(_dependencyMap[2], \"../utils.js\");\n  var utils = _interopDefault(_utilsJs);\n  var _readBlobJs = require(_dependencyMap[3], \"./readBlob.js\");\n  var readBlob = _interopDefault(_readBlobJs);\n  var _platformIndexJs = require(_dependencyMap[4], \"../platform/index.js\");\n  var platform = _interopDefault(_platformIndexJs);\n  const BOUNDARY_ALPHABET = platform.default.ALPHABET.ALPHA_DIGIT + '-_';\n  const textEncoder = typeof TextEncoder === 'function' ? new TextEncoder() : new util.default.TextEncoder();\n  const CRLF = '\\r\\n';\n  const CRLF_BYTES = textEncoder.encode(CRLF);\n  const CRLF_BYTES_COUNT = 2;\n  class FormDataPart {\n    constructor(name, value) {\n      const {\n        escapeName\n      } = this.constructor;\n      const isStringValue = utils.default.isString(value);\n      let headers = `Content-Disposition: form-data; name=\"${escapeName(name)}\"${!isStringValue && value.name ? `; filename=\"${escapeName(value.name)}\"` : ''}${CRLF}`;\n      if (isStringValue) {\n        value = textEncoder.encode(String(value).replace(/\\r?\\n|\\r\\n?/g, CRLF));\n      } else {\n        headers += `Content-Type: ${value.type || \"application/octet-stream\"}${CRLF}`;\n      }\n      this.headers = textEncoder.encode(headers + CRLF);\n      this.contentLength = isStringValue ? value.byteLength : value.size;\n      this.size = this.headers.byteLength + this.contentLength + CRLF_BYTES_COUNT;\n      this.name = name;\n      this.value = value;\n    }\n    async *encode() {\n      yield this.headers;\n      const {\n        value\n      } = this;\n      if (utils.default.isTypedArray(value)) {\n        yield value;\n      } else {\n        yield* (0, readBlob.default)(value);\n      }\n      yield CRLF_BYTES;\n    }\n    static escapeName(name) {\n      return String(name).replace(/[\\r\\n\"]/g, match => ({\n        '\\r': '%0D',\n        '\\n': '%0A',\n        '\"': '%22'\n      })[match]);\n    }\n  }\n  const formDataToStream = (form, headersHandler, options) => {\n    const {\n      tag = 'form-data-boundary',\n      size = 25,\n      boundary = tag + '-' + platform.default.generateString(size, BOUNDARY_ALPHABET)\n    } = options || {};\n    if (!utils.default.isFormData(form)) {\n      throw TypeError('FormData instance required');\n    }\n    if (boundary.length < 1 || boundary.length > 70) {\n      throw Error('boundary must be 10-70 characters long');\n    }\n    const boundaryBytes = textEncoder.encode('--' + boundary + CRLF);\n    const footerBytes = textEncoder.encode('--' + boundary + '--' + CRLF);\n    let contentLength = footerBytes.byteLength;\n    const parts = Array.from(form.entries()).map(([name, value]) => {\n      const part = new FormDataPart(name, value);\n      contentLength += part.size;\n      return part;\n    });\n    contentLength += boundaryBytes.byteLength * parts.length;\n    contentLength = utils.default.toFiniteNumber(contentLength);\n    const computedHeaders = {\n      'Content-Type': `multipart/form-data; boundary=${boundary}`\n    };\n    if (Number.isFinite(contentLength)) {\n      computedHeaders['Content-Length'] = contentLength;\n    }\n    headersHandler && headersHandler(computedHeaders);\n    return _stream.Readable.from(async function* () {\n      for (const part of parts) {\n        yield boundaryBytes;\n        yield* part.encode();\n      }\n      yield footerBytes;\n    }());\n  };\n  var _default = formDataToStream;\n});","lineCount":108,"map":[[12,2,112,0,"Object"],[12,8,112,0],[12,9,112,0,"defineProperty"],[12,23,112,0],[12,24,112,0,"exports"],[12,31,112,0],[13,4,112,0,"enumerable"],[13,14,112,0],[14,4,112,0,"get"],[14,7,112,0],[14,18,112,0,"get"],[14,19,112,0],[15,6,112,0],[15,13,112,0,"_default"],[15,21,112,0],[16,4,112,0],[17,2,112,0],[18,2,1,0],[18,6,1,0,"_util"],[18,11,1,0],[18,14,1,0,"require"],[18,21,1,0],[18,22,1,0,"_dependencyMap"],[18,36,1,0],[19,2,1,0],[19,6,1,0,"util"],[19,10,1,0],[19,13,1,0,"_interopDefault"],[19,28,1,0],[19,29,1,0,"_util"],[19,34,1,0],[20,2,2,0],[20,6,2,0,"_stream"],[20,13,2,0],[20,16,2,0,"require"],[20,23,2,0],[20,24,2,0,"_dependencyMap"],[20,38,2,0],[21,2,3,0],[21,6,3,0,"_utilsJs"],[21,14,3,0],[21,17,3,0,"require"],[21,24,3,0],[21,25,3,0,"_dependencyMap"],[21,39,3,0],[22,2,3,0],[22,6,3,0,"utils"],[22,11,3,0],[22,14,3,0,"_interopDefault"],[22,29,3,0],[22,30,3,0,"_utilsJs"],[22,38,3,0],[23,2,4,0],[23,6,4,0,"_readBlobJs"],[23,17,4,0],[23,20,4,0,"require"],[23,27,4,0],[23,28,4,0,"_dependencyMap"],[23,42,4,0],[24,2,4,0],[24,6,4,0,"readBlob"],[24,14,4,0],[24,17,4,0,"_interopDefault"],[24,32,4,0],[24,33,4,0,"_readBlobJs"],[24,44,4,0],[25,2,5,0],[25,6,5,0,"_platformIndexJs"],[25,22,5,0],[25,25,5,0,"require"],[25,32,5,0],[25,33,5,0,"_dependencyMap"],[25,47,5,0],[26,2,5,0],[26,6,5,0,"platform"],[26,14,5,0],[26,17,5,0,"_interopDefault"],[26,32,5,0],[26,33,5,0,"_platformIndexJs"],[26,49,5,0],[27,2,7,0],[27,8,7,6,"BOUNDARY_ALPHABET"],[27,25,7,23],[27,28,7,26,"platform"],[27,36,7,34],[27,37,7,34,"default"],[27,44,7,34],[27,45,7,35,"ALPHABET"],[27,53,7,43],[27,54,7,44,"ALPHA_DIGIT"],[27,65,7,55],[27,68,7,58],[27,72,7,62],[28,2,9,0],[28,8,9,6,"textEncoder"],[28,19,9,17],[28,22,9,20],[28,29,9,27,"TextEncoder"],[28,40,9,38],[28,45,9,43],[28,55,9,53],[28,58,9,56],[28,62,9,60,"TextEncoder"],[28,73,9,71],[28,74,9,72],[28,75,9,73],[28,78,9,76],[28,82,9,80,"util"],[28,86,9,84],[28,87,9,84,"default"],[28,94,9,84],[28,95,9,85,"TextEncoder"],[28,106,9,96],[28,107,9,97],[28,108,9,98],[29,2,11,0],[29,8,11,6,"CRLF"],[29,12,11,10],[29,15,11,13],[29,21,11,19],[30,2,12,0],[30,8,12,6,"CRLF_BYTES"],[30,18,12,16],[30,21,12,19,"textEncoder"],[30,32,12,30],[30,33,12,31,"encode"],[30,39,12,37],[30,40,12,38,"CRLF"],[30,44,12,42],[30,45,12,43],[31,2,13,0],[31,8,13,6,"CRLF_BYTES_COUNT"],[31,24,13,22],[31,27,13,25],[31,28,13,26],[32,2,15,0],[32,8,15,6,"FormDataPart"],[32,20,15,18],[32,21,15,19],[33,4,16,2,"constructor"],[33,15,16,13,"constructor"],[33,16,16,14,"name"],[33,20,16,18],[33,22,16,20,"value"],[33,27,16,25],[33,29,16,27],[34,6,17,4],[34,12,17,10],[35,8,17,11,"escapeName"],[36,6,17,21],[36,7,17,22],[36,10,17,25],[36,14,17,29],[36,15,17,30,"constructor"],[36,26,17,41],[37,6,18,4],[37,12,18,10,"isStringValue"],[37,25,18,23],[37,28,18,26,"utils"],[37,33,18,31],[37,34,18,31,"default"],[37,41,18,31],[37,42,18,32,"isString"],[37,50,18,40],[37,51,18,41,"value"],[37,56,18,46],[37,57,18,47],[38,6,20,4],[38,10,20,8,"headers"],[38,17,20,15],[38,20,20,18],[38,61,20,59,"escapeName"],[38,71,20,69],[38,72,20,70,"name"],[38,76,20,74],[38,77,20,75],[38,81,21,6],[38,82,21,7,"isStringValue"],[38,95,21,20],[38,99,21,24,"value"],[38,104,21,29],[38,105,21,30,"name"],[38,109,21,34],[38,112,21,37],[38,127,21,52,"escapeName"],[38,137,21,62],[38,138,21,63,"value"],[38,143,21,68],[38,144,21,69,"name"],[38,148,21,73],[38,149,21,74],[38,152,21,77],[38,155,21,80],[38,157,21,82],[38,160,22,7,"CRLF"],[38,164,22,11],[38,166,22,13],[39,6,24,4],[39,10,24,8,"isStringValue"],[39,23,24,21],[39,25,24,23],[40,8,25,6,"value"],[40,13,25,11],[40,16,25,14,"textEncoder"],[40,27,25,25],[40,28,25,26,"encode"],[40,34,25,32],[40,35,25,33,"String"],[40,41,25,39],[40,42,25,40,"value"],[40,47,25,45],[40,48,25,46],[40,49,25,47,"replace"],[40,56,25,54],[40,57,25,55],[40,71,25,69],[40,73,25,71,"CRLF"],[40,77,25,75],[40,78,25,76],[40,79,25,77],[41,6,26,4],[41,7,26,5],[41,13,26,11],[42,8,27,6,"headers"],[42,15,27,13],[42,19,27,17],[42,36,27,34,"value"],[42,41,27,39],[42,42,27,40,"type"],[42,46,27,44],[42,50,27,48],[42,76,27,74],[42,79,27,77,"CRLF"],[42,83,27,81],[42,85,27,83],[43,6,28,4],[44,6,30,4],[44,10,30,8],[44,11,30,9,"headers"],[44,18,30,16],[44,21,30,19,"textEncoder"],[44,32,30,30],[44,33,30,31,"encode"],[44,39,30,37],[44,40,30,38,"headers"],[44,47,30,45],[44,50,30,48,"CRLF"],[44,54,30,52],[44,55,30,53],[45,6,32,4],[45,10,32,8],[45,11,32,9,"contentLength"],[45,24,32,22],[45,27,32,25,"isStringValue"],[45,40,32,38],[45,43,32,41,"value"],[45,48,32,46],[45,49,32,47,"byteLength"],[45,59,32,57],[45,62,32,60,"value"],[45,67,32,65],[45,68,32,66,"size"],[45,72,32,70],[46,6,34,4],[46,10,34,8],[46,11,34,9,"size"],[46,15,34,13],[46,18,34,16],[46,22,34,20],[46,23,34,21,"headers"],[46,30,34,28],[46,31,34,29,"byteLength"],[46,41,34,39],[46,44,34,42],[46,48,34,46],[46,49,34,47,"contentLength"],[46,62,34,60],[46,65,34,63,"CRLF_BYTES_COUNT"],[46,81,34,79],[47,6,36,4],[47,10,36,8],[47,11,36,9,"name"],[47,15,36,13],[47,18,36,16,"name"],[47,22,36,20],[48,6,37,4],[48,10,37,8],[48,11,37,9,"value"],[48,16,37,14],[48,19,37,17,"value"],[48,24,37,22],[49,4,38,2],[50,4,40,2],[50,11,40,9,"encode"],[50,17,40,15,"encode"],[50,18,40,15],[50,20,40,17],[51,6,41,4],[51,12,41,10],[51,16,41,14],[51,17,41,15,"headers"],[51,24,41,22],[52,6,43,4],[52,12,43,10],[53,8,43,11,"value"],[54,6,43,16],[54,7,43,17],[54,10,43,20],[54,14,43,24],[55,6,45,4],[55,10,45,7,"utils"],[55,15,45,12],[55,16,45,12,"default"],[55,23,45,12],[55,24,45,13,"isTypedArray"],[55,36,45,25],[55,37,45,26,"value"],[55,42,45,31],[55,43,45,32],[55,45,45,34],[56,8,46,6],[56,14,46,12,"value"],[56,19,46,17],[57,6,47,4],[57,7,47,5],[57,13,47,11],[58,8,48,6],[58,15,48,13],[58,19,48,13,"readBlob"],[58,27,48,21],[58,28,48,21,"default"],[58,35,48,21],[58,37,48,22,"value"],[58,42,48,27],[58,43,48,28],[59,6,49,4],[60,6,51,4],[60,12,51,10,"CRLF_BYTES"],[60,22,51,20],[61,4,52,2],[62,4,54,2],[62,11,54,9,"escapeName"],[62,21,54,19,"escapeName"],[62,22,54,20,"name"],[62,26,54,24],[62,28,54,26],[63,6,55,6],[63,13,55,13,"String"],[63,19,55,19],[63,20,55,20,"name"],[63,24,55,24],[63,25,55,25],[63,26,55,26,"replace"],[63,33,55,33],[63,34,55,34],[63,44,55,44],[63,46,55,47,"match"],[63,51,55,52],[63,55,55,58],[64,8,56,8],[64,12,56,12],[64,14,56,15],[64,19,56,20],[65,8,57,8],[65,12,57,12],[65,14,57,15],[65,19,57,20],[66,8,58,8],[66,11,58,11],[66,13,58,14],[67,6,59,6],[67,7,59,7],[67,9,59,8,"match"],[67,14,59,13],[67,15,59,15],[67,16,59,16],[68,4,60,2],[69,2,61,0],[70,2,63,0],[70,8,63,6,"formDataToStream"],[70,24,63,22],[70,27,63,25,"formDataToStream"],[70,28,63,26,"form"],[70,32,63,30],[70,34,63,32,"headersHandler"],[70,48,63,46],[70,50,63,48,"options"],[70,57,63,55],[70,62,63,60],[71,4,64,2],[71,10,64,8],[72,6,65,4,"tag"],[72,9,65,7],[72,12,65,10],[72,32,65,30],[73,6,66,4,"size"],[73,10,66,8],[73,13,66,11],[73,15,66,13],[74,6,67,4,"boundary"],[74,14,67,12],[74,17,67,15,"tag"],[74,20,67,18],[74,23,67,21],[74,26,67,24],[74,29,67,27,"platform"],[74,37,67,35],[74,38,67,35,"default"],[74,45,67,35],[74,46,67,36,"generateString"],[74,60,67,50],[74,61,67,51,"size"],[74,65,67,55],[74,67,67,57,"BOUNDARY_ALPHABET"],[74,84,67,74],[75,4,68,2],[75,5,68,3],[75,8,68,6,"options"],[75,15,68,13],[75,19,68,17],[75,20,68,18],[75,21,68,19],[76,4,70,2],[76,8,70,5],[76,9,70,6,"utils"],[76,14,70,11],[76,15,70,11,"default"],[76,22,70,11],[76,23,70,12,"isFormData"],[76,33,70,22],[76,34,70,23,"form"],[76,38,70,27],[76,39,70,28],[76,41,70,30],[77,6,71,4],[77,12,71,10,"TypeError"],[77,21,71,19],[77,22,71,20],[77,50,71,48],[77,51,71,49],[78,4,72,2],[79,4,74,2],[79,8,74,6,"boundary"],[79,16,74,14],[79,17,74,15,"length"],[79,23,74,21],[79,26,74,24],[79,27,74,25],[79,31,74,29,"boundary"],[79,39,74,37],[79,40,74,38,"length"],[79,46,74,44],[79,49,74,47],[79,51,74,49],[79,53,74,51],[80,6,75,4],[80,12,75,10,"Error"],[80,17,75,15],[80,18,75,16],[80,58,75,56],[80,59,75,57],[81,4,76,2],[82,4,78,2],[82,10,78,8,"boundaryBytes"],[82,23,78,21],[82,26,78,24,"textEncoder"],[82,37,78,35],[82,38,78,36,"encode"],[82,44,78,42],[82,45,78,43],[82,49,78,47],[82,52,78,50,"boundary"],[82,60,78,58],[82,63,78,61,"CRLF"],[82,67,78,65],[82,68,78,66],[83,4,79,2],[83,10,79,8,"footerBytes"],[83,21,79,19],[83,24,79,22,"textEncoder"],[83,35,79,33],[83,36,79,34,"encode"],[83,42,79,40],[83,43,79,41],[83,47,79,45],[83,50,79,48,"boundary"],[83,58,79,56],[83,61,79,59],[83,65,79,63],[83,68,79,66,"CRLF"],[83,72,79,70],[83,73,79,71],[84,4,80,2],[84,8,80,6,"contentLength"],[84,21,80,19],[84,24,80,22,"footerBytes"],[84,35,80,33],[84,36,80,34,"byteLength"],[84,46,80,44],[85,4,82,2],[85,10,82,8,"parts"],[85,15,82,13],[85,18,82,16,"Array"],[85,23,82,21],[85,24,82,22,"from"],[85,28,82,26],[85,29,82,27,"form"],[85,33,82,31],[85,34,82,32,"entries"],[85,41,82,39],[85,42,82,40],[85,43,82,41],[85,44,82,42],[85,45,82,43,"map"],[85,48,82,46],[85,49,82,47],[85,50,82,48],[85,51,82,49,"name"],[85,55,82,53],[85,57,82,55,"value"],[85,62,82,60],[85,63,82,61],[85,68,82,66],[86,6,83,4],[86,12,83,10,"part"],[86,16,83,14],[86,19,83,17],[86,23,83,21,"FormDataPart"],[86,35,83,33],[86,36,83,34,"name"],[86,40,83,38],[86,42,83,40,"value"],[86,47,83,45],[86,48,83,46],[87,6,84,4,"contentLength"],[87,19,84,17],[87,23,84,21,"part"],[87,27,84,25],[87,28,84,26,"size"],[87,32,84,30],[88,6,85,4],[88,13,85,11,"part"],[88,17,85,15],[89,4,86,2],[89,5,86,3],[89,6,86,4],[90,4,88,2,"contentLength"],[90,17,88,15],[90,21,88,19,"boundaryBytes"],[90,34,88,32],[90,35,88,33,"byteLength"],[90,45,88,43],[90,48,88,46,"parts"],[90,53,88,51],[90,54,88,52,"length"],[90,60,88,58],[91,4,90,2,"contentLength"],[91,17,90,15],[91,20,90,18,"utils"],[91,25,90,23],[91,26,90,23,"default"],[91,33,90,23],[91,34,90,24,"toFiniteNumber"],[91,48,90,38],[91,49,90,39,"contentLength"],[91,62,90,52],[91,63,90,53],[92,4,92,2],[92,10,92,8,"computedHeaders"],[92,25,92,23],[92,28,92,26],[93,6,93,4],[93,20,93,18],[93,22,93,20],[93,55,93,53,"boundary"],[93,63,93,61],[94,4,94,2],[94,5,94,3],[95,4,96,2],[95,8,96,6,"Number"],[95,14,96,12],[95,15,96,13,"isFinite"],[95,23,96,21],[95,24,96,22,"contentLength"],[95,37,96,35],[95,38,96,36],[95,40,96,38],[96,6,97,4,"computedHeaders"],[96,21,97,19],[96,22,97,20],[96,38,97,36],[96,39,97,37],[96,42,97,40,"contentLength"],[96,55,97,53],[97,4,98,2],[98,4,100,2,"headersHandler"],[98,18,100,16],[98,22,100,20,"headersHandler"],[98,36,100,34],[98,37,100,35,"computedHeaders"],[98,52,100,50],[98,53,100,51],[99,4,102,2],[99,11,102,9,"Readable"],[99,18,102,17],[99,19,102,17,"Readable"],[99,27,102,17],[99,28,102,18,"from"],[99,32,102,22],[99,33,102,24],[99,52,102,43],[100,6,103,4],[100,11,103,8],[100,17,103,14,"part"],[100,21,103,18],[100,25,103,22,"parts"],[100,30,103,27],[100,32,103,29],[101,8,104,6],[101,14,104,12,"boundaryBytes"],[101,27,104,25],[102,8,105,6],[102,15,105,13,"part"],[102,19,105,17],[102,20,105,18,"encode"],[102,26,105,24],[102,27,105,25],[102,28,105,26],[103,6,106,4],[104,6,108,4],[104,12,108,10,"footerBytes"],[104,23,108,21],[105,4,109,2],[105,5,109,3],[105,6,109,5],[105,7,109,6],[105,8,109,7],[106,2,110,0],[106,3,110,1],[107,2,112,0],[107,6,112,0,"_default"],[107,14,112,0],[107,17,112,15,"formDataToStream"],[107,33,112,31],[108,0,112,32],[108,3]],"functionMap":{"names":["<global>","FormDataPart","FormDataPart#constructor","FormDataPart#encode","FormDataPart.escapeName","String.replace$argument_1","formDataToStream","Array.from.map$argument_0","<anonymous>"],"mappings":"AAA;ACc;ECC;GDsB;EEE;GFY;EGE;8CCC;eDI;GHC;CDC;yBME;+CCmB;GDI;wBEgB;GFO;CNC"},"hasCjsExports":false},"type":"js/module"}]}