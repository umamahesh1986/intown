{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"expo","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":41,"index":41}}],"key":"PWvtvXU7MaET6Yd1Gn8oQOXJQ8A=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":42},"end":{"line":2,"column":67,"index":109}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./ExpoLocation","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":110},"end":{"line":3,"column":42,"index":152}}],"key":"n9eQB3huKj/lRnIsgaXRKPJKjaY=","exportNames":["*"],"imports":1}},{"name":"./Location.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":153},"end":{"line":4,"column":53,"index":206}}],"key":"QoIrjHWCWA2K0AZhEI/d0eITBhA=","exportNames":["*"],"imports":1}},{"name":"./LocationSubscribers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":207},"end":{"line":5,"column":104,"index":311}}],"key":"ECD2ecHoQ4d6PxMbJzhCjCmKfZg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.getProviderStatusAsync = getProviderStatusAsync;\n  exports.enableNetworkProviderAsync = enableNetworkProviderAsync;\n  exports.getCurrentPositionAsync = getCurrentPositionAsync;\n  exports.getLastKnownPositionAsync = getLastKnownPositionAsync;\n  exports.watchPositionAsync = watchPositionAsync;\n  exports.getHeadingAsync = getHeadingAsync;\n  exports.watchHeadingAsync = watchHeadingAsync;\n  exports.geocodeAsync = geocodeAsync;\n  exports.reverseGeocodeAsync = reverseGeocodeAsync;\n  exports.getForegroundPermissionsAsync = getForegroundPermissionsAsync;\n  exports.requestForegroundPermissionsAsync = requestForegroundPermissionsAsync;\n  Object.defineProperty(exports, \"useForegroundPermissions\", {\n    enumerable: true,\n    get: function () {\n      return useForegroundPermissions;\n    }\n  });\n  exports.getBackgroundPermissionsAsync = getBackgroundPermissionsAsync;\n  exports.requestBackgroundPermissionsAsync = requestBackgroundPermissionsAsync;\n  Object.defineProperty(exports, \"useBackgroundPermissions\", {\n    enumerable: true,\n    get: function () {\n      return useBackgroundPermissions;\n    }\n  });\n  exports.hasServicesEnabledAsync = hasServicesEnabledAsync;\n  exports.isBackgroundLocationAvailableAsync = isBackgroundLocationAvailableAsync;\n  exports.startLocationUpdatesAsync = startLocationUpdatesAsync;\n  exports.stopLocationUpdatesAsync = stopLocationUpdatesAsync;\n  exports.hasStartedLocationUpdatesAsync = hasStartedLocationUpdatesAsync;\n  exports.startGeofencingAsync = startGeofencingAsync;\n  exports.stopGeofencingAsync = stopGeofencingAsync;\n  exports.hasStartedGeofencingAsync = hasStartedGeofencingAsync;\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _expo = require(_dependencyMap[1], \"expo\");\n  var _expoModulesCore = require(_dependencyMap[2], \"expo-modules-core\");\n  var _ExpoLocation = require(_dependencyMap[3], \"./ExpoLocation\");\n  var ExpoLocation = _interopDefault(_ExpoLocation);\n  var _LocationTypes = require(_dependencyMap[4], \"./Location.types\");\n  var _LocationSubscribers = require(_dependencyMap[5], \"./LocationSubscribers\");\n  // Flag for warning about background services not being available in Expo Go\n  var warnAboutExpoGoDisplayed = false;\n  // @needsAudit\n  /**\n   * Check status of location providers.\n   * @return A promise which fulfills with an object of type [`LocationProviderStatus`](#locationproviderstatus).\n   */\n  function getProviderStatusAsync() {\n    return _getProviderStatusAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Asks the user to turn on high accuracy location mode which enables network provider that uses\n   * Google Play services to improve location accuracy and location-based services.\n   * @return A promise resolving as soon as the user accepts the dialog. Rejects if denied.\n   *\n   * @platform android\n   */\n  function _getProviderStatusAsync() {\n    _getProviderStatusAsync = (0, _asyncToGenerator.default)(function* () {\n      return ExpoLocation.default.getProviderStatusAsync();\n    });\n    return _getProviderStatusAsync.apply(this, arguments);\n  }\n  function enableNetworkProviderAsync() {\n    return _enableNetworkProviderAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Requests for one-time delivery of the user's current location.\n   * Depending on given `accuracy` option it may take some time to resolve,\n   * especially when you're inside a building.\n   * > __Note:__ Calling it causes the location manager to obtain a location fix which may take several\n   * > seconds. Consider using [`getLastKnownPositionAsync`](#locationgetlastknownpositionasyncoptions)\n   * > if you expect to get a quick response and high accuracy is not required.\n   * @param options\n   * @return A promise which fulfills with an object of type [`LocationObject`](#locationobject).\n   */\n  function _enableNetworkProviderAsync() {\n    _enableNetworkProviderAsync = (0, _asyncToGenerator.default)(function* () {\n      // If network provider is disabled (user's location mode is set to \"Device only\"),\n      // Android's location provider may not give you any results. Use this method in order to ask the user\n      // to change the location mode to \"High accuracy\" which uses Google Play services and enables network provider.\n      // `getCurrentPositionAsync` and `watchPositionAsync` are doing it automatically anyway.\n      if (_expoModulesCore.Platform.OS === 'android') {\n        return ExpoLocation.default.enableNetworkProviderAsync();\n      }\n    });\n    return _enableNetworkProviderAsync.apply(this, arguments);\n  }\n  function getCurrentPositionAsync() {\n    return _getCurrentPositionAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Gets the last known position of the device or `null` if it's not available or doesn't match given\n   * requirements such as maximum age or required accuracy.\n   * It's considered to be faster than `getCurrentPositionAsync` as it doesn't request for the current\n   * location, but keep in mind the returned location may not be up-to-date.\n   * @param options\n   * @return A promise which fulfills with an object of type [`LocationObject`](#locationobject) or\n   * `null` if it's not available or doesn't match given requirements such as maximum age or required\n   * accuracy.\n   */\n  function _getCurrentPositionAsync() {\n    _getCurrentPositionAsync = (0, _asyncToGenerator.default)(function* () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return ExpoLocation.default.getCurrentPositionAsync(options);\n    });\n    return _getCurrentPositionAsync.apply(this, arguments);\n  }\n  function getLastKnownPositionAsync() {\n    return _getLastKnownPositionAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Subscribe to location updates from the device. Updates will only occur while the application is in\n   * the foreground. To get location updates while in background you'll need to use\n   * [`startLocationUpdatesAsync`](#locationstartlocationupdatesasynctaskname-options).\n   * @param options\n   * @param callback This function is called on each location update. It receives an object of type\n   * [`LocationObject`](#locationobject) as the first argument.\n   * @param errorHandler This function is called when an error occurs. It receives a string with the\n   * error message as the first argument.\n   * @return A promise which fulfills with a [`LocationSubscription`](#locationsubscription) object.\n   */\n  function _getLastKnownPositionAsync() {\n    _getLastKnownPositionAsync = (0, _asyncToGenerator.default)(function* () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return ExpoLocation.default.getLastKnownPositionAsync(options);\n    });\n    return _getLastKnownPositionAsync.apply(this, arguments);\n  }\n  function watchPositionAsync(_x, _x2, _x3) {\n    return _watchPositionAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Gets the current heading information from the device. To simplify, it calls `watchHeadingAsync`\n   * and waits for a couple of updates, and then returns the one that is accurate enough.\n   * @return A promise which fulfills with an object of type [`LocationHeadingObject`](#locationheadingobject).\n   */\n  function _watchPositionAsync() {\n    _watchPositionAsync = (0, _asyncToGenerator.default)(function* (options, callback, errorHandler) {\n      var watchId = _LocationSubscribers.LocationSubscriber.registerCallback(callback);\n      errorHandler && _LocationSubscribers.LocationErrorSubscriber.registerCallbackForId(watchId, errorHandler);\n      yield ExpoLocation.default.watchPositionImplAsync(watchId, options);\n      return {\n        remove() {\n          _LocationSubscribers.LocationSubscriber.unregisterCallback(watchId);\n          errorHandler && _LocationSubscribers.LocationErrorSubscriber.unregisterCallback(watchId);\n        }\n      };\n    });\n    return _watchPositionAsync.apply(this, arguments);\n  }\n  function getHeadingAsync() {\n    return _getHeadingAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Subscribe to compass updates from the device.\n   *\n   * @param callback This function is called on each compass update. It receives an object of type\n   * [LocationHeadingObject](#locationheadingobject) as the first argument.\n   * @param errorHandler This function is called when an error occurs. It receives a string with the\n   * error message as the first argument.\n   * @return A promise which fulfills with a [`LocationSubscription`](#locationsubscription) object.\n   *\n   * @platform android\n   * @platform ios\n   */\n  function _getHeadingAsync() {\n    _getHeadingAsync = (0, _asyncToGenerator.default)(function* () {\n      return new Promise(/*#__PURE__*/function () {\n        var _ref = (0, _asyncToGenerator.default)(function* (resolve, reject) {\n          var tries = 0;\n          var subscriber = undefined;\n          try {\n            subscriber = yield watchHeadingAsync(heading => {\n              if (heading.accuracy > 1 || tries > 5) {\n                subscriber?.remove();\n                resolve(heading);\n              } else {\n                tries += 1;\n              }\n            }, reason => {\n              subscriber?.remove();\n              reject(reason);\n            });\n          } catch (e) {\n            reject(e);\n          }\n        });\n        return function (_x12, _x13) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    });\n    return _getHeadingAsync.apply(this, arguments);\n  }\n  function watchHeadingAsync(_x4, _x5) {\n    return _watchHeadingAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Geocode an address string to latitude-longitude location.\n   *\n   * On Android, you must request location permissions with [`requestForegroundPermissionsAsync`](#locationrequestforegroundpermissionsasync)\n   * before geocoding can be used.\n   *\n   * > **Note**: Geocoding is resource consuming and has to be used reasonably. Creating too many\n   * > requests at a time can result in an error, so they have to be managed properly.\n   * > It's also discouraged to use geocoding while the app is in the background and its results won't\n   * > be shown to the user immediately.\n   *\n   * @param address A string representing address, eg. `\"Baker Street London\"`.\n   * @return A promise which fulfills with an array (in most cases its size is 1) of [`LocationGeocodedLocation`](#locationgeocodedlocation)\n   * objects.\n   *\n   * @platform android\n   * @platform ios\n   */\n  function _watchHeadingAsync() {\n    _watchHeadingAsync = (0, _asyncToGenerator.default)(function* (callback, errorHandler) {\n      var watchId = _LocationSubscribers.HeadingSubscriber.registerCallback(callback);\n      errorHandler && _LocationSubscribers.LocationErrorSubscriber.registerCallbackForId(watchId, errorHandler);\n      yield ExpoLocation.default.watchDeviceHeading(watchId);\n      return {\n        remove() {\n          _LocationSubscribers.HeadingSubscriber.unregisterCallback(watchId);\n          errorHandler && _LocationSubscribers.LocationErrorSubscriber.unregisterCallback(watchId);\n        }\n      };\n    });\n    return _watchHeadingAsync.apply(this, arguments);\n  }\n  function geocodeAsync(_x6) {\n    return _geocodeAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Reverse geocode a location to postal address.\n   *\n   * On Android, you must request location permissions with [`requestForegroundPermissionsAsync`](#locationrequestforegroundpermissionsasync)\n   * before geocoding can be used.\n   *\n   * > **Note**: Geocoding is resource consuming and has to be used reasonably. Creating too many\n   * > requests at a time can result in an error, so they have to be managed properly.\n   * > It's also discouraged to use geocoding while the app is in the background and its results won't\n   * > be shown to the user immediately.\n   *\n   * @param location An object representing a location.\n   * @return A promise which fulfills with an array (in most cases its size is 1) of [`LocationGeocodedAddress`](#locationgeocodedaddress) objects.\n   *\n   * @platform android\n   * @platform ios\n   */\n  function _geocodeAsync() {\n    _geocodeAsync = (0, _asyncToGenerator.default)(function* (address) {\n      if (typeof address !== 'string') {\n        throw new TypeError(`Address to geocode must be a string. Got ${address} instead.`);\n      }\n      if (_expoModulesCore.Platform.OS === 'web') {\n        if (__DEV__) {\n          console.warn('The Geocoding API has been removed in SDK 49, use Place Autocomplete service instead' + '(https://developers.google.com/maps/documentation/places/web-service/autocomplete)');\n        }\n        return [];\n      }\n      return yield ExpoLocation.default.geocodeAsync(address);\n    });\n    return _geocodeAsync.apply(this, arguments);\n  }\n  function reverseGeocodeAsync(_x7) {\n    return _reverseGeocodeAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Checks user's permissions for accessing location while the app is in the foreground.\n   * @return A promise that fulfills with an object of type [`LocationPermissionResponse`](#locationpermissionresponse).\n   */\n  function _reverseGeocodeAsync() {\n    _reverseGeocodeAsync = (0, _asyncToGenerator.default)(function* (location) {\n      if (typeof location.latitude !== 'number' || typeof location.longitude !== 'number') {\n        throw new TypeError('Location to reverse-geocode must be an object with number properties `latitude` and `longitude`.');\n      }\n      if (_expoModulesCore.Platform.OS === 'web') {\n        if (__DEV__) {\n          console.warn('The Geocoding API has been removed in SDK 49, use Place Autocomplete service instead' + '(https://developers.google.com/maps/documentation/places/web-service/autocomplete)');\n        }\n        return [];\n      }\n      return yield ExpoLocation.default.reverseGeocodeAsync(location);\n    });\n    return _reverseGeocodeAsync.apply(this, arguments);\n  }\n  function getForegroundPermissionsAsync() {\n    return _getForegroundPermissionsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Asks the user to grant permissions for location while the app is in the foreground.\n   * @return A promise that fulfills with an object of type [`LocationPermissionResponse`](#locationpermissionresponse).\n   */\n  function _getForegroundPermissionsAsync() {\n    _getForegroundPermissionsAsync = (0, _asyncToGenerator.default)(function* () {\n      return yield ExpoLocation.default.getForegroundPermissionsAsync();\n    });\n    return _getForegroundPermissionsAsync.apply(this, arguments);\n  }\n  function requestForegroundPermissionsAsync() {\n    return _requestForegroundPermissionsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Check or request permissions for the foreground location.\n   * This uses both `requestForegroundPermissionsAsync` and `getForegroundPermissionsAsync` to interact with the permissions.\n   *\n   * @example\n   * ```ts\n   * const [status, requestPermission] = Location.useForegroundPermissions();\n   * ```\n   */\n  function _requestForegroundPermissionsAsync() {\n    _requestForegroundPermissionsAsync = (0, _asyncToGenerator.default)(function* () {\n      return yield ExpoLocation.default.requestForegroundPermissionsAsync();\n    });\n    return _requestForegroundPermissionsAsync.apply(this, arguments);\n  }\n  var useForegroundPermissions = (0, _expoModulesCore.createPermissionHook)({\n    getMethod: getForegroundPermissionsAsync,\n    requestMethod: requestForegroundPermissionsAsync\n  });\n  // @needsAudit\n  /**\n   * Checks user's permissions for accessing location while the app is in the background.\n   * @return A promise that fulfills with an object of type [`PermissionResponse`](#permissionresponse).\n   */\n  function getBackgroundPermissionsAsync() {\n    return _getBackgroundPermissionsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Asks the user to grant permissions for location while the app is in the background.\n   * On __Android 11 or higher__: this method will open the system settings page - before that happens\n   * you should explain to the user why your application needs background location permission.\n   * For example, you can use `Modal` component from `react-native` to do that.\n   * > __Note__: Foreground permissions should be granted before asking for the background permissions\n   * (your app can't obtain background permission without foreground permission).\n   * @return A promise that fulfills with an object of type [`PermissionResponse`](#permissionresponse).\n   */\n  function _getBackgroundPermissionsAsync() {\n    _getBackgroundPermissionsAsync = (0, _asyncToGenerator.default)(function* () {\n      return yield ExpoLocation.default.getBackgroundPermissionsAsync();\n    });\n    return _getBackgroundPermissionsAsync.apply(this, arguments);\n  }\n  function requestBackgroundPermissionsAsync() {\n    return _requestBackgroundPermissionsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Check or request permissions for the background location.\n   * This uses both `requestBackgroundPermissionsAsync` and `getBackgroundPermissionsAsync` to\n   * interact with the permissions.\n   *\n   * @example\n   * ```ts\n   * const [status, requestPermission] = Location.useBackgroundPermissions();\n   * ```\n   */\n  function _requestBackgroundPermissionsAsync() {\n    _requestBackgroundPermissionsAsync = (0, _asyncToGenerator.default)(function* () {\n      return yield ExpoLocation.default.requestBackgroundPermissionsAsync();\n    });\n    return _requestBackgroundPermissionsAsync.apply(this, arguments);\n  }\n  var useBackgroundPermissions = (0, _expoModulesCore.createPermissionHook)({\n    getMethod: getBackgroundPermissionsAsync,\n    requestMethod: requestBackgroundPermissionsAsync\n  });\n  // --- Location service\n  // @needsAudit\n  /**\n   * Checks whether location services are enabled by the user.\n   * @return A promise which fulfills to `true` if location services are enabled on the device,\n   * or `false` if not.\n   */\n  function hasServicesEnabledAsync() {\n    return _hasServicesEnabledAsync.apply(this, arguments);\n  } // --- Background location updates\n  function _hasServicesEnabledAsync() {\n    _hasServicesEnabledAsync = (0, _asyncToGenerator.default)(function* () {\n      return yield ExpoLocation.default.hasServicesEnabledAsync();\n    });\n    return _hasServicesEnabledAsync.apply(this, arguments);\n  }\n  function _validate(taskName) {\n    if (!taskName || typeof taskName !== 'string') {\n      throw new Error(`\\`taskName\\` must be a non-empty string. Got ${taskName} instead.`);\n    }\n    if ((0, _expo.isRunningInExpoGo)()) {\n      if (!warnAboutExpoGoDisplayed) {\n        var message = 'Background location is limited in Expo Go:\\n' + 'On Android, it is not available at all.\\n' + 'On iOS, it works when running in the Simulator.\\n' + 'You can use this API, and all others, in a development build. Learn more: https://expo.fyi/dev-client.';\n        console.warn(message);\n        warnAboutExpoGoDisplayed = true;\n      }\n    }\n  }\n  // @docsMissing\n  function isBackgroundLocationAvailableAsync() {\n    return _isBackgroundLocationAvailableAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Registers for receiving location updates that can also come when the app is in the background.\n   *\n   * # Task parameters\n   *\n   * Background location task will be receiving following data:\n   * - `locations` - An array of the new locations.\n   *\n   * @example\n   * ```ts\n   * import * as TaskManager from 'expo-task-manager';\n   *\n   * TaskManager.defineTask(YOUR_TASK_NAME, ({ data: { locations }, error }) => {\n   *  if (error) {\n   *    // check `error.message` for more details.\n   *    return;\n   *  }\n   *  console.log('Received new locations', locations);\n   * });\n   * ```\n   *\n   * @param taskName Name of the task receiving location updates.\n   * @param options An object of options passed to the location manager.\n   *\n   * @return A promise resolving once the task with location updates is registered.\n   */\n  function _isBackgroundLocationAvailableAsync() {\n    _isBackgroundLocationAvailableAsync = (0, _asyncToGenerator.default)(function* () {\n      var providerStatus = yield getProviderStatusAsync();\n      return providerStatus.backgroundModeEnabled;\n    });\n    return _isBackgroundLocationAvailableAsync.apply(this, arguments);\n  }\n  function startLocationUpdatesAsync(_x8) {\n    return _startLocationUpdatesAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Stops location updates for specified task.\n   * @param taskName Name of the background location task to stop.\n   * @return A promise resolving as soon as the task is unregistered.\n   */\n  function _startLocationUpdatesAsync() {\n    _startLocationUpdatesAsync = (0, _asyncToGenerator.default)(function* (taskName) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        accuracy: _LocationTypes.LocationAccuracy.Balanced\n      };\n      _validate(taskName);\n      yield ExpoLocation.default.startLocationUpdatesAsync(taskName, options);\n    });\n    return _startLocationUpdatesAsync.apply(this, arguments);\n  }\n  function stopLocationUpdatesAsync(_x9) {\n    return _stopLocationUpdatesAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * @param taskName Name of the location task to check.\n   * @return A promise which fulfills with boolean value indicating whether the location task is\n   * started or not.\n   */\n  function _stopLocationUpdatesAsync() {\n    _stopLocationUpdatesAsync = (0, _asyncToGenerator.default)(function* (taskName) {\n      _validate(taskName);\n      yield ExpoLocation.default.stopLocationUpdatesAsync(taskName);\n    });\n    return _stopLocationUpdatesAsync.apply(this, arguments);\n  }\n  function hasStartedLocationUpdatesAsync(_x0) {\n    return _hasStartedLocationUpdatesAsync.apply(this, arguments);\n  } // --- Geofencing\n  function _hasStartedLocationUpdatesAsync() {\n    _hasStartedLocationUpdatesAsync = (0, _asyncToGenerator.default)(function* (taskName) {\n      _validate(taskName);\n      return ExpoLocation.default.hasStartedLocationUpdatesAsync(taskName);\n    });\n    return _hasStartedLocationUpdatesAsync.apply(this, arguments);\n  }\n  function _validateRegions(regions) {\n    if (!regions || regions.length === 0) {\n      throw new Error('Regions array cannot be empty. Use `stopGeofencingAsync` if you want to stop geofencing all regions');\n    }\n    for (var region of regions) {\n      if (typeof region.latitude !== 'number') {\n        throw new TypeError(`Region's latitude must be a number. Got '${region.latitude}' instead.`);\n      }\n      if (typeof region.longitude !== 'number') {\n        throw new TypeError(`Region's longitude must be a number. Got '${region.longitude}' instead.`);\n      }\n      if (typeof region.radius !== 'number') {\n        throw new TypeError(`Region's radius must be a number. Got '${region.radius}' instead.`);\n      }\n    }\n  }\n  // @needsAudit\n  /**\n   * Starts geofencing for given regions. When the new event comes, the task with specified name will\n   * be called with the region that the device enter to or exit from.\n   * If you want to add or remove regions from already running geofencing task, you can just call\n   * `startGeofencingAsync` again with the new array of regions.\n   *\n   * # Task parameters\n   *\n   * Geofencing task will be receiving following data:\n   *  - `eventType` - Indicates the reason for calling the task, which can be triggered by entering or exiting the region.\n   *    See [`GeofencingEventType`](#geofencingeventtype).\n   *  - `region` - Object containing details about updated region. See [`LocationRegion`](#locationregion) for more details.\n   *\n   * @param taskName Name of the task that will be called when the device enters or exits from specified regions.\n   * @param regions Array of region objects to be geofenced.\n   *\n   * @return A promise resolving as soon as the task is registered.\n   *\n   * @example\n   * ```ts\n   * import { GeofencingEventType } from 'expo-location';\n   * import * as TaskManager from 'expo-task-manager';\n   *\n   *  TaskManager.defineTask(YOUR_TASK_NAME, ({ data: { eventType, region }, error }) => {\n   *   if (error) {\n   *     // check `error.message` for more details.\n   *     return;\n   *   }\n   *   if (eventType === GeofencingEventType.Enter) {\n   *     console.log(\"You've entered region:\", region);\n   *   } else if (eventType === GeofencingEventType.Exit) {\n   *     console.log(\"You've left region:\", region);\n   *   }\n   * });\n   * ```\n   */\n  function startGeofencingAsync(_x1) {\n    return _startGeofencingAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Stops geofencing for specified task. It unregisters the background task so the app will not be\n   * receiving any updates, especially in the background.\n   * @param taskName Name of the task to unregister.\n   * @return A promise resolving as soon as the task is unregistered.\n   */\n  function _startGeofencingAsync() {\n    _startGeofencingAsync = (0, _asyncToGenerator.default)(function* (taskName) {\n      var regions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      _validate(taskName);\n      _validateRegions(regions);\n      yield ExpoLocation.default.startGeofencingAsync(taskName, {\n        regions\n      });\n    });\n    return _startGeofencingAsync.apply(this, arguments);\n  }\n  function stopGeofencingAsync(_x10) {\n    return _stopGeofencingAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * @param taskName Name of the geofencing task to check.\n   * @return A promise which fulfills with boolean value indicating whether the geofencing task is\n   * started or not.\n   */\n  function _stopGeofencingAsync() {\n    _stopGeofencingAsync = (0, _asyncToGenerator.default)(function* (taskName) {\n      _validate(taskName);\n      yield ExpoLocation.default.stopGeofencingAsync(taskName);\n    });\n    return _stopGeofencingAsync.apply(this, arguments);\n  }\n  function hasStartedGeofencingAsync(_x11) {\n    return _hasStartedGeofencingAsync.apply(this, arguments);\n  }\n  function _hasStartedGeofencingAsync() {\n    _hasStartedGeofencingAsync = (0, _asyncToGenerator.default)(function* (taskName) {\n      _validate(taskName);\n      return ExpoLocation.default.hasStartedGeofencingAsync(taskName);\n    });\n    return _hasStartedGeofencingAsync.apply(this, arguments);\n  }\n});","lineCount":587,"map":[[12,2,13,0,"exports"],[12,9,13,0],[12,10,13,0,"getProviderStatusAsync"],[12,32,13,0],[12,35,13,0,"getProviderStatusAsync"],[12,57,13,0],[13,2,24,0,"exports"],[13,9,24,0],[13,10,24,0,"enableNetworkProviderAsync"],[13,36,24,0],[13,39,24,0,"enableNetworkProviderAsync"],[13,65,24,0],[14,2,44,0,"exports"],[14,9,44,0],[14,10,44,0,"getCurrentPositionAsync"],[14,33,44,0],[14,36,44,0,"getCurrentPositionAsync"],[14,59,44,0],[15,2,58,0,"exports"],[15,9,58,0],[15,10,58,0,"getLastKnownPositionAsync"],[15,35,58,0],[15,38,58,0,"getLastKnownPositionAsync"],[15,63,58,0],[16,2,73,0,"exports"],[16,9,73,0],[16,10,73,0,"watchPositionAsync"],[16,28,73,0],[16,31,73,0,"watchPositionAsync"],[16,49,73,0],[17,2,90,0,"exports"],[17,9,90,0],[17,10,90,0,"getHeadingAsync"],[17,25,90,0],[17,28,90,0,"getHeadingAsync"],[17,43,90,0],[18,2,126,0,"exports"],[18,9,126,0],[18,10,126,0,"watchHeadingAsync"],[18,27,126,0],[18,30,126,0,"watchHeadingAsync"],[18,47,126,0],[19,2,156,0,"exports"],[19,9,156,0],[19,10,156,0,"geocodeAsync"],[19,22,156,0],[19,25,156,0,"geocodeAsync"],[19,37,156,0],[20,2,187,0,"exports"],[20,9,187,0],[20,10,187,0,"reverseGeocodeAsync"],[20,29,187,0],[20,32,187,0,"reverseGeocodeAsync"],[20,51,187,0],[21,2,205,0,"exports"],[21,9,205,0],[21,10,205,0,"getForegroundPermissionsAsync"],[21,39,205,0],[21,42,205,0,"getForegroundPermissionsAsync"],[21,71,205,0],[22,2,213,0,"exports"],[22,9,213,0],[22,10,213,0,"requestForegroundPermissionsAsync"],[22,43,213,0],[22,46,213,0,"requestForegroundPermissionsAsync"],[22,79,213,0],[23,2,226,0,"Object"],[23,8,226,0],[23,9,226,0,"defineProperty"],[23,23,226,0],[23,24,226,0,"exports"],[23,31,226,0],[24,4,226,0,"enumerable"],[24,14,226,0],[25,4,226,0,"get"],[25,7,226,0],[25,18,226,0,"get"],[25,19,226,0],[26,6,226,0],[26,13,226,0,"useForegroundPermissions"],[26,37,226,0],[27,4,226,0],[28,2,226,0],[29,2,235,0,"exports"],[29,9,235,0],[29,10,235,0,"getBackgroundPermissionsAsync"],[29,39,235,0],[29,42,235,0,"getBackgroundPermissionsAsync"],[29,71,235,0],[30,2,248,0,"exports"],[30,9,248,0],[30,10,248,0,"requestBackgroundPermissionsAsync"],[30,43,248,0],[30,46,248,0,"requestBackgroundPermissionsAsync"],[30,79,248,0],[31,2,262,0,"Object"],[31,8,262,0],[31,9,262,0,"defineProperty"],[31,23,262,0],[31,24,262,0,"exports"],[31,31,262,0],[32,4,262,0,"enumerable"],[32,14,262,0],[33,4,262,0,"get"],[33,7,262,0],[33,18,262,0,"get"],[33,19,262,0],[34,6,262,0],[34,13,262,0,"useBackgroundPermissions"],[34,37,262,0],[35,4,262,0],[36,2,262,0],[37,2,273,0,"exports"],[37,9,273,0],[37,10,273,0,"hasServicesEnabledAsync"],[37,33,273,0],[37,36,273,0,"hasServicesEnabledAsync"],[37,59,273,0],[38,2,293,0,"exports"],[38,9,293,0],[38,10,293,0,"isBackgroundLocationAvailableAsync"],[38,44,293,0],[38,47,293,0,"isBackgroundLocationAvailableAsync"],[38,81,293,0],[39,2,324,0,"exports"],[39,9,324,0],[39,10,324,0,"startLocationUpdatesAsync"],[39,35,324,0],[39,38,324,0,"startLocationUpdatesAsync"],[39,63,324,0],[40,2,334,0,"exports"],[40,9,334,0],[40,10,334,0,"stopLocationUpdatesAsync"],[40,34,334,0],[40,37,334,0,"stopLocationUpdatesAsync"],[40,61,334,0],[41,2,344,0,"exports"],[41,9,344,0],[41,10,344,0,"hasStartedLocationUpdatesAsync"],[41,40,344,0],[41,43,344,0,"hasStartedLocationUpdatesAsync"],[41,73,344,0],[42,2,402,0,"exports"],[42,9,402,0],[42,10,402,0,"startGeofencingAsync"],[42,30,402,0],[42,33,402,0,"startGeofencingAsync"],[42,53,402,0],[43,2,414,0,"exports"],[43,9,414,0],[43,10,414,0,"stopGeofencingAsync"],[43,29,414,0],[43,32,414,0,"stopGeofencingAsync"],[43,51,414,0],[44,2,424,0,"exports"],[44,9,424,0],[44,10,424,0,"hasStartedGeofencingAsync"],[44,35,424,0],[44,38,424,0,"hasStartedGeofencingAsync"],[44,63,424,0],[45,2,427,1],[45,6,427,1,"_babelRuntimeHelpersAsyncToGenerator"],[45,42,427,1],[45,45,427,1,"require"],[45,52,427,1],[45,53,427,1,"_dependencyMap"],[45,67,427,1],[46,2,427,1],[46,6,427,1,"_asyncToGenerator"],[46,23,427,1],[46,26,427,1,"_interopDefault"],[46,41,427,1],[46,42,427,1,"_babelRuntimeHelpersAsyncToGenerator"],[46,78,427,1],[47,2,1,0],[47,6,1,0,"_expo"],[47,11,1,0],[47,14,1,0,"require"],[47,21,1,0],[47,22,1,0,"_dependencyMap"],[47,36,1,0],[48,2,2,0],[48,6,2,0,"_expoModulesCore"],[48,22,2,0],[48,25,2,0,"require"],[48,32,2,0],[48,33,2,0,"_dependencyMap"],[48,47,2,0],[49,2,3,0],[49,6,3,0,"_ExpoLocation"],[49,19,3,0],[49,22,3,0,"require"],[49,29,3,0],[49,30,3,0,"_dependencyMap"],[49,44,3,0],[50,2,3,0],[50,6,3,0,"ExpoLocation"],[50,18,3,0],[50,21,3,0,"_interopDefault"],[50,36,3,0],[50,37,3,0,"_ExpoLocation"],[50,50,3,0],[51,2,4,0],[51,6,4,0,"_LocationTypes"],[51,20,4,0],[51,23,4,0,"require"],[51,30,4,0],[51,31,4,0,"_dependencyMap"],[51,45,4,0],[52,2,5,0],[52,6,5,0,"_LocationSubscribers"],[52,26,5,0],[52,29,5,0,"require"],[52,36,5,0],[52,37,5,0,"_dependencyMap"],[52,51,5,0],[53,2,6,0],[54,2,7,0],[54,6,7,4,"warnAboutExpoGoDisplayed"],[54,30,7,28],[54,33,7,31],[54,38,7,36],[55,2,8,0],[56,2,9,0],[57,0,10,0],[58,0,11,0],[59,0,12,0],[60,2,9,0],[60,11,13,22,"getProviderStatusAsync"],[60,33,13,44,"getProviderStatusAsync"],[60,34,13,44],[61,4,13,44],[61,11,13,44,"_getProviderStatusAsync"],[61,34,13,44],[61,35,13,44,"apply"],[61,40,13,44],[61,47,13,44,"arguments"],[61,56,13,44],[62,2,13,44],[62,4,16,0],[63,2,17,0],[64,0,18,0],[65,0,19,0],[66,0,20,0],[67,0,21,0],[68,0,22,0],[69,0,23,0],[70,2,17,0],[70,11,17,0,"_getProviderStatusAsync"],[70,35,17,0],[71,4,17,0,"_getProviderStatusAsync"],[71,27,17,0],[71,34,17,0,"_asyncToGenerator"],[71,51,17,0],[71,52,17,0,"default"],[71,59,17,0],[71,61,13,7],[71,74,13,47],[72,6,14,4],[72,13,14,11,"ExpoLocation"],[72,25,14,23],[72,26,14,23,"default"],[72,33,14,23],[72,34,14,24,"getProviderStatusAsync"],[72,56,14,46],[72,57,14,47],[72,58,14,48],[73,4,15,0],[73,5,15,1],[74,4,15,1],[74,11,15,1,"_getProviderStatusAsync"],[74,34,15,1],[74,35,15,1,"apply"],[74,40,15,1],[74,47,15,1,"arguments"],[74,56,15,1],[75,2,15,1],[76,2,15,1],[76,11,24,22,"enableNetworkProviderAsync"],[76,37,24,48,"enableNetworkProviderAsync"],[76,38,24,48],[77,4,24,48],[77,11,24,48,"_enableNetworkProviderAsync"],[77,38,24,48],[77,39,24,48,"apply"],[77,44,24,48],[77,51,24,48,"arguments"],[77,60,24,48],[78,2,24,48],[78,4,33,0],[79,2,34,0],[80,0,35,0],[81,0,36,0],[82,0,37,0],[83,0,38,0],[84,0,39,0],[85,0,40,0],[86,0,41,0],[87,0,42,0],[88,0,43,0],[89,2,34,0],[89,11,34,0,"_enableNetworkProviderAsync"],[89,39,34,0],[90,4,34,0,"_enableNetworkProviderAsync"],[90,31,34,0],[90,38,34,0,"_asyncToGenerator"],[90,55,34,0],[90,56,34,0,"default"],[90,63,34,0],[90,65,24,7],[90,78,24,51],[91,6,25,4],[92,6,26,4],[93,6,27,4],[94,6,28,4],[95,6,29,4],[95,10,29,8,"Platform"],[95,26,29,16],[95,27,29,16,"Platform"],[95,35,29,16],[95,36,29,17,"OS"],[95,38,29,19],[95,43,29,24],[95,52,29,33],[95,54,29,35],[96,8,30,8],[96,15,30,15,"ExpoLocation"],[96,27,30,27],[96,28,30,27,"default"],[96,35,30,27],[96,36,30,28,"enableNetworkProviderAsync"],[96,62,30,54],[96,63,30,55],[96,64,30,56],[97,6,31,4],[98,4,32,0],[98,5,32,1],[99,4,32,1],[99,11,32,1,"_enableNetworkProviderAsync"],[99,38,32,1],[99,39,32,1,"apply"],[99,44,32,1],[99,51,32,1,"arguments"],[99,60,32,1],[100,2,32,1],[101,2,32,1],[101,11,44,22,"getCurrentPositionAsync"],[101,34,44,45,"getCurrentPositionAsync"],[101,35,44,45],[102,4,44,45],[102,11,44,45,"_getCurrentPositionAsync"],[102,35,44,45],[102,36,44,45,"apply"],[102,41,44,45],[102,48,44,45,"arguments"],[102,57,44,45],[103,2,44,45],[103,4,47,0],[104,2,48,0],[105,0,49,0],[106,0,50,0],[107,0,51,0],[108,0,52,0],[109,0,53,0],[110,0,54,0],[111,0,55,0],[112,0,56,0],[113,0,57,0],[114,2,48,0],[114,11,48,0,"_getCurrentPositionAsync"],[114,36,48,0],[115,4,48,0,"_getCurrentPositionAsync"],[115,28,48,0],[115,35,48,0,"_asyncToGenerator"],[115,52,48,0],[115,53,48,0,"default"],[115,60,48,0],[115,62,44,7],[115,75,44,60],[116,6,44,60],[116,10,44,46,"options"],[116,17,44,53],[116,20,44,53,"arguments"],[116,29,44,53],[116,30,44,53,"length"],[116,36,44,53],[116,44,44,53,"arguments"],[116,53,44,53],[116,61,44,53,"undefined"],[116,70,44,53],[116,73,44,53,"arguments"],[116,82,44,53],[116,88,44,56],[116,89,44,57],[116,90,44,58],[117,6,45,4],[117,13,45,11,"ExpoLocation"],[117,25,45,23],[117,26,45,23,"default"],[117,33,45,23],[117,34,45,24,"getCurrentPositionAsync"],[117,57,45,47],[117,58,45,48,"options"],[117,65,45,55],[117,66,45,56],[118,4,46,0],[118,5,46,1],[119,4,46,1],[119,11,46,1,"_getCurrentPositionAsync"],[119,35,46,1],[119,36,46,1,"apply"],[119,41,46,1],[119,48,46,1,"arguments"],[119,57,46,1],[120,2,46,1],[121,2,46,1],[121,11,58,22,"getLastKnownPositionAsync"],[121,36,58,47,"getLastKnownPositionAsync"],[121,37,58,47],[122,4,58,47],[122,11,58,47,"_getLastKnownPositionAsync"],[122,37,58,47],[122,38,58,47,"apply"],[122,43,58,47],[122,50,58,47,"arguments"],[122,59,58,47],[123,2,58,47],[123,4,61,0],[124,2,62,0],[125,0,63,0],[126,0,64,0],[127,0,65,0],[128,0,66,0],[129,0,67,0],[130,0,68,0],[131,0,69,0],[132,0,70,0],[133,0,71,0],[134,0,72,0],[135,2,62,0],[135,11,62,0,"_getLastKnownPositionAsync"],[135,38,62,0],[136,4,62,0,"_getLastKnownPositionAsync"],[136,30,62,0],[136,37,62,0,"_asyncToGenerator"],[136,54,62,0],[136,55,62,0,"default"],[136,62,62,0],[136,64,58,7],[136,77,58,62],[137,6,58,62],[137,10,58,48,"options"],[137,17,58,55],[137,20,58,55,"arguments"],[137,29,58,55],[137,30,58,55,"length"],[137,36,58,55],[137,44,58,55,"arguments"],[137,53,58,55],[137,61,58,55,"undefined"],[137,70,58,55],[137,73,58,55,"arguments"],[137,82,58,55],[137,88,58,58],[137,89,58,59],[137,90,58,60],[138,6,59,4],[138,13,59,11,"ExpoLocation"],[138,25,59,23],[138,26,59,23,"default"],[138,33,59,23],[138,34,59,24,"getLastKnownPositionAsync"],[138,59,59,49],[138,60,59,50,"options"],[138,67,59,57],[138,68,59,58],[139,4,60,0],[139,5,60,1],[140,4,60,1],[140,11,60,1,"_getLastKnownPositionAsync"],[140,37,60,1],[140,38,60,1,"apply"],[140,43,60,1],[140,50,60,1,"arguments"],[140,59,60,1],[141,2,60,1],[142,2,60,1],[142,11,73,22,"watchPositionAsync"],[142,29,73,40,"watchPositionAsync"],[142,30,73,40,"_x"],[142,32,73,40],[142,34,73,40,"_x2"],[142,37,73,40],[142,39,73,40,"_x3"],[142,42,73,40],[143,4,73,40],[143,11,73,40,"_watchPositionAsync"],[143,30,73,40],[143,31,73,40,"apply"],[143,36,73,40],[143,43,73,40,"arguments"],[143,52,73,40],[144,2,73,40],[144,4,84,0],[145,2,85,0],[146,0,86,0],[147,0,87,0],[148,0,88,0],[149,0,89,0],[150,2,85,0],[150,11,85,0,"_watchPositionAsync"],[150,31,85,0],[151,4,85,0,"_watchPositionAsync"],[151,23,85,0],[151,30,85,0,"_asyncToGenerator"],[151,47,85,0],[151,48,85,0,"default"],[151,55,85,0],[151,57,73,7],[151,68,73,41,"options"],[151,75,73,48],[151,77,73,50,"callback"],[151,85,73,58],[151,87,73,60,"errorHandler"],[151,99,73,72],[151,101,73,74],[152,6,74,4],[152,10,74,10,"watchId"],[152,17,74,17],[152,20,74,20,"LocationSubscriber"],[152,40,74,38],[152,41,74,38,"LocationSubscriber"],[152,59,74,38],[152,60,74,39,"registerCallback"],[152,76,74,55],[152,77,74,56,"callback"],[152,85,74,64],[152,86,74,65],[153,6,75,4,"errorHandler"],[153,18,75,16],[153,22,75,20,"LocationErrorSubscriber"],[153,42,75,43],[153,43,75,43,"LocationErrorSubscriber"],[153,66,75,43],[153,67,75,44,"registerCallbackForId"],[153,88,75,65],[153,89,75,66,"watchId"],[153,96,75,73],[153,98,75,75,"errorHandler"],[153,110,75,87],[153,111,75,88],[154,6,76,4],[154,12,76,10,"ExpoLocation"],[154,24,76,22],[154,25,76,22,"default"],[154,32,76,22],[154,33,76,23,"watchPositionImplAsync"],[154,55,76,45],[154,56,76,46,"watchId"],[154,63,76,53],[154,65,76,55,"options"],[154,72,76,62],[154,73,76,63],[155,6,77,4],[155,13,77,11],[156,8,78,8,"remove"],[156,14,78,14,"remove"],[156,15,78,14],[156,17,78,17],[157,10,79,12,"LocationSubscriber"],[157,30,79,30],[157,31,79,30,"LocationSubscriber"],[157,49,79,30],[157,50,79,31,"unregisterCallback"],[157,68,79,49],[157,69,79,50,"watchId"],[157,76,79,57],[157,77,79,58],[158,10,80,12,"errorHandler"],[158,22,80,24],[158,26,80,28,"LocationErrorSubscriber"],[158,46,80,51],[158,47,80,51,"LocationErrorSubscriber"],[158,70,80,51],[158,71,80,52,"unregisterCallback"],[158,89,80,70],[158,90,80,71,"watchId"],[158,97,80,78],[158,98,80,79],[159,8,81,8],[160,6,82,4],[160,7,82,5],[161,4,83,0],[161,5,83,1],[162,4,83,1],[162,11,83,1,"_watchPositionAsync"],[162,30,83,1],[162,31,83,1,"apply"],[162,36,83,1],[162,43,83,1,"arguments"],[162,52,83,1],[163,2,83,1],[164,2,83,1],[164,11,90,22,"getHeadingAsync"],[164,26,90,37,"getHeadingAsync"],[164,27,90,37],[165,4,90,37],[165,11,90,37,"_getHeadingAsync"],[165,27,90,37],[165,28,90,37,"apply"],[165,33,90,37],[165,40,90,37,"arguments"],[165,49,90,37],[166,2,90,37],[166,4,113,0],[167,2,114,0],[168,0,115,0],[169,0,116,0],[170,0,117,0],[171,0,118,0],[172,0,119,0],[173,0,120,0],[174,0,121,0],[175,0,122,0],[176,0,123,0],[177,0,124,0],[178,0,125,0],[179,2,114,0],[179,11,114,0,"_getHeadingAsync"],[179,28,114,0],[180,4,114,0,"_getHeadingAsync"],[180,20,114,0],[180,27,114,0,"_asyncToGenerator"],[180,44,114,0],[180,45,114,0,"default"],[180,52,114,0],[180,54,90,7],[180,67,90,40],[181,6,91,4],[181,13,91,11],[181,17,91,15,"Promise"],[181,24,91,22],[182,8,91,22],[182,12,91,22,"_ref"],[182,16,91,22],[182,23,91,22,"_asyncToGenerator"],[182,40,91,22],[182,41,91,22,"default"],[182,48,91,22],[182,50,91,23],[182,61,91,30,"resolve"],[182,68,91,37],[182,70,91,39,"reject"],[182,76,91,45],[182,78,91,50],[183,10,92,8],[183,14,92,12,"tries"],[183,19,92,17],[183,22,92,20],[183,23,92,21],[184,10,93,8],[184,14,93,12,"subscriber"],[184,24,93,22],[184,27,93,25,"undefined"],[184,36,93,34],[185,10,94,8],[185,14,94,12],[186,12,95,12,"subscriber"],[186,22,95,22],[186,31,95,31,"watchHeadingAsync"],[186,48,95,48],[186,49,95,50,"heading"],[186,56,95,57],[186,60,95,62],[187,14,96,16],[187,18,96,20,"heading"],[187,25,96,27],[187,26,96,28,"accuracy"],[187,34,96,36],[187,37,96,39],[187,38,96,40],[187,42,96,44,"tries"],[187,47,96,49],[187,50,96,52],[187,51,96,53],[187,53,96,55],[188,16,97,20,"subscriber"],[188,26,97,30],[188,28,97,32,"remove"],[188,34,97,38],[188,35,97,39],[188,36,97,40],[189,16,98,20,"resolve"],[189,23,98,27],[189,24,98,28,"heading"],[189,31,98,35],[189,32,98,36],[190,14,99,16],[190,15,99,17],[190,21,100,21],[191,16,101,20,"tries"],[191,21,101,25],[191,25,101,29],[191,26,101,30],[192,14,102,16],[193,12,103,12],[193,13,103,13],[193,15,103,16,"reason"],[193,21,103,22],[193,25,103,27],[194,14,104,16,"subscriber"],[194,24,104,26],[194,26,104,28,"remove"],[194,32,104,34],[194,33,104,35],[194,34,104,36],[195,14,105,16,"reject"],[195,20,105,22],[195,21,105,23,"reason"],[195,27,105,29],[195,28,105,30],[196,12,106,12],[196,13,106,13],[196,14,106,14],[197,10,107,8],[197,11,107,9],[197,12,108,8],[197,19,108,15,"e"],[197,20,108,16],[197,22,108,18],[198,12,109,12,"reject"],[198,18,109,18],[198,19,109,19,"e"],[198,20,109,20],[198,21,109,21],[199,10,110,8],[200,8,111,4],[200,9,111,5],[201,8,111,5],[201,25,111,5,"_x12"],[201,29,111,5],[201,31,111,5,"_x13"],[201,35,111,5],[202,10,111,5],[202,17,111,5,"_ref"],[202,21,111,5],[202,22,111,5,"apply"],[202,27,111,5],[202,34,111,5,"arguments"],[202,43,111,5],[203,8,111,5],[204,6,111,5],[204,10,111,6],[205,4,112,0],[205,5,112,1],[206,4,112,1],[206,11,112,1,"_getHeadingAsync"],[206,27,112,1],[206,28,112,1,"apply"],[206,33,112,1],[206,40,112,1,"arguments"],[206,49,112,1],[207,2,112,1],[208,2,112,1],[208,11,126,22,"watchHeadingAsync"],[208,28,126,39,"watchHeadingAsync"],[208,29,126,39,"_x4"],[208,32,126,39],[208,34,126,39,"_x5"],[208,37,126,39],[209,4,126,39],[209,11,126,39,"_watchHeadingAsync"],[209,29,126,39],[209,30,126,39,"apply"],[209,35,126,39],[209,42,126,39,"arguments"],[209,51,126,39],[210,2,126,39],[210,4,137,0],[211,2,138,0],[212,0,139,0],[213,0,140,0],[214,0,141,0],[215,0,142,0],[216,0,143,0],[217,0,144,0],[218,0,145,0],[219,0,146,0],[220,0,147,0],[221,0,148,0],[222,0,149,0],[223,0,150,0],[224,0,151,0],[225,0,152,0],[226,0,153,0],[227,0,154,0],[228,0,155,0],[229,2,138,0],[229,11,138,0,"_watchHeadingAsync"],[229,30,138,0],[230,4,138,0,"_watchHeadingAsync"],[230,22,138,0],[230,29,138,0,"_asyncToGenerator"],[230,46,138,0],[230,47,138,0,"default"],[230,54,138,0],[230,56,126,7],[230,67,126,40,"callback"],[230,75,126,48],[230,77,126,50,"errorHandler"],[230,89,126,62],[230,91,126,64],[231,6,127,4],[231,10,127,10,"watchId"],[231,17,127,17],[231,20,127,20,"HeadingSubscriber"],[231,40,127,37],[231,41,127,37,"HeadingSubscriber"],[231,58,127,37],[231,59,127,38,"registerCallback"],[231,75,127,54],[231,76,127,55,"callback"],[231,84,127,63],[231,85,127,64],[232,6,128,4,"errorHandler"],[232,18,128,16],[232,22,128,20,"LocationErrorSubscriber"],[232,42,128,43],[232,43,128,43,"LocationErrorSubscriber"],[232,66,128,43],[232,67,128,44,"registerCallbackForId"],[232,88,128,65],[232,89,128,66,"watchId"],[232,96,128,73],[232,98,128,75,"errorHandler"],[232,110,128,87],[232,111,128,88],[233,6,129,4],[233,12,129,10,"ExpoLocation"],[233,24,129,22],[233,25,129,22,"default"],[233,32,129,22],[233,33,129,23,"watchDeviceHeading"],[233,51,129,41],[233,52,129,42,"watchId"],[233,59,129,49],[233,60,129,50],[234,6,130,4],[234,13,130,11],[235,8,131,8,"remove"],[235,14,131,14,"remove"],[235,15,131,14],[235,17,131,17],[236,10,132,12,"HeadingSubscriber"],[236,30,132,29],[236,31,132,29,"HeadingSubscriber"],[236,48,132,29],[236,49,132,30,"unregisterCallback"],[236,67,132,48],[236,68,132,49,"watchId"],[236,75,132,56],[236,76,132,57],[237,10,133,12,"errorHandler"],[237,22,133,24],[237,26,133,28,"LocationErrorSubscriber"],[237,46,133,51],[237,47,133,51,"LocationErrorSubscriber"],[237,70,133,51],[237,71,133,52,"unregisterCallback"],[237,89,133,70],[237,90,133,71,"watchId"],[237,97,133,78],[237,98,133,79],[238,8,134,8],[239,6,135,4],[239,7,135,5],[240,4,136,0],[240,5,136,1],[241,4,136,1],[241,11,136,1,"_watchHeadingAsync"],[241,29,136,1],[241,30,136,1,"apply"],[241,35,136,1],[241,42,136,1,"arguments"],[241,51,136,1],[242,2,136,1],[243,2,136,1],[243,11,156,22,"geocodeAsync"],[243,23,156,34,"geocodeAsync"],[243,24,156,34,"_x6"],[243,27,156,34],[244,4,156,34],[244,11,156,34,"_geocodeAsync"],[244,24,156,34],[244,25,156,34,"apply"],[244,30,156,34],[244,37,156,34,"arguments"],[244,46,156,34],[245,2,156,34],[245,4,169,0],[246,2,170,0],[247,0,171,0],[248,0,172,0],[249,0,173,0],[250,0,174,0],[251,0,175,0],[252,0,176,0],[253,0,177,0],[254,0,178,0],[255,0,179,0],[256,0,180,0],[257,0,181,0],[258,0,182,0],[259,0,183,0],[260,0,184,0],[261,0,185,0],[262,0,186,0],[263,2,170,0],[263,11,170,0,"_geocodeAsync"],[263,25,170,0],[264,4,170,0,"_geocodeAsync"],[264,17,170,0],[264,24,170,0,"_asyncToGenerator"],[264,41,170,0],[264,42,170,0,"default"],[264,49,170,0],[264,51,156,7],[264,62,156,35,"address"],[264,69,156,42],[264,71,156,44],[265,6,157,4],[265,10,157,8],[265,17,157,15,"address"],[265,24,157,22],[265,29,157,27],[265,37,157,35],[265,39,157,37],[266,8,158,8],[266,14,158,14],[266,18,158,18,"TypeError"],[266,27,158,27],[266,28,158,28],[266,72,158,72,"address"],[266,79,158,79],[266,90,158,90],[266,91,158,91],[267,6,159,4],[268,6,160,4],[268,10,160,8,"Platform"],[268,26,160,16],[268,27,160,16,"Platform"],[268,35,160,16],[268,36,160,17,"OS"],[268,38,160,19],[268,43,160,24],[268,48,160,29],[268,50,160,31],[269,8,161,8],[269,12,161,12,"__DEV__"],[269,19,161,19],[269,21,161,21],[270,10,162,12,"console"],[270,17,162,19],[270,18,162,20,"warn"],[270,22,162,24],[270,23,162,25],[270,109,162,111],[270,112,163,16],[270,196,163,100],[270,197,163,101],[271,8,164,8],[272,8,165,8],[272,15,165,15],[272,17,165,17],[273,6,166,4],[274,6,167,4],[274,19,167,17,"ExpoLocation"],[274,31,167,29],[274,32,167,29,"default"],[274,39,167,29],[274,40,167,30,"geocodeAsync"],[274,52,167,42],[274,53,167,43,"address"],[274,60,167,50],[274,61,167,51],[275,4,168,0],[275,5,168,1],[276,4,168,1],[276,11,168,1,"_geocodeAsync"],[276,24,168,1],[276,25,168,1,"apply"],[276,30,168,1],[276,37,168,1,"arguments"],[276,46,168,1],[277,2,168,1],[278,2,168,1],[278,11,187,22,"reverseGeocodeAsync"],[278,30,187,41,"reverseGeocodeAsync"],[278,31,187,41,"_x7"],[278,34,187,41],[279,4,187,41],[279,11,187,41,"_reverseGeocodeAsync"],[279,31,187,41],[279,32,187,41,"apply"],[279,37,187,41],[279,44,187,41,"arguments"],[279,53,187,41],[280,2,187,41],[280,4,200,0],[281,2,201,0],[282,0,202,0],[283,0,203,0],[284,0,204,0],[285,2,201,0],[285,11,201,0,"_reverseGeocodeAsync"],[285,32,201,0],[286,4,201,0,"_reverseGeocodeAsync"],[286,24,201,0],[286,31,201,0,"_asyncToGenerator"],[286,48,201,0],[286,49,201,0,"default"],[286,56,201,0],[286,58,187,7],[286,69,187,42,"location"],[286,77,187,50],[286,79,187,52],[287,6,188,4],[287,10,188,8],[287,17,188,15,"location"],[287,25,188,23],[287,26,188,24,"latitude"],[287,34,188,32],[287,39,188,37],[287,47,188,45],[287,51,188,49],[287,58,188,56,"location"],[287,66,188,64],[287,67,188,65,"longitude"],[287,76,188,74],[287,81,188,79],[287,89,188,87],[287,91,188,89],[288,8,189,8],[288,14,189,14],[288,18,189,18,"TypeError"],[288,27,189,27],[288,28,189,28],[288,126,189,126],[288,127,189,127],[289,6,190,4],[290,6,191,4],[290,10,191,8,"Platform"],[290,26,191,16],[290,27,191,16,"Platform"],[290,35,191,16],[290,36,191,17,"OS"],[290,38,191,19],[290,43,191,24],[290,48,191,29],[290,50,191,31],[291,8,192,8],[291,12,192,12,"__DEV__"],[291,19,192,19],[291,21,192,21],[292,10,193,12,"console"],[292,17,193,19],[292,18,193,20,"warn"],[292,22,193,24],[292,23,193,25],[292,109,193,111],[292,112,194,16],[292,196,194,100],[292,197,194,101],[293,8,195,8],[294,8,196,8],[294,15,196,15],[294,17,196,17],[295,6,197,4],[296,6,198,4],[296,19,198,17,"ExpoLocation"],[296,31,198,29],[296,32,198,29,"default"],[296,39,198,29],[296,40,198,30,"reverseGeocodeAsync"],[296,59,198,49],[296,60,198,50,"location"],[296,68,198,58],[296,69,198,59],[297,4,199,0],[297,5,199,1],[298,4,199,1],[298,11,199,1,"_reverseGeocodeAsync"],[298,31,199,1],[298,32,199,1,"apply"],[298,37,199,1],[298,44,199,1,"arguments"],[298,53,199,1],[299,2,199,1],[300,2,199,1],[300,11,205,22,"getForegroundPermissionsAsync"],[300,40,205,51,"getForegroundPermissionsAsync"],[300,41,205,51],[301,4,205,51],[301,11,205,51,"_getForegroundPermissionsAsync"],[301,41,205,51],[301,42,205,51,"apply"],[301,47,205,51],[301,54,205,51,"arguments"],[301,63,205,51],[302,2,205,51],[302,4,208,0],[303,2,209,0],[304,0,210,0],[305,0,211,0],[306,0,212,0],[307,2,209,0],[307,11,209,0,"_getForegroundPermissionsAsync"],[307,42,209,0],[308,4,209,0,"_getForegroundPermissionsAsync"],[308,34,209,0],[308,41,209,0,"_asyncToGenerator"],[308,58,209,0],[308,59,209,0,"default"],[308,66,209,0],[308,68,205,7],[308,81,205,54],[309,6,206,4],[309,19,206,17,"ExpoLocation"],[309,31,206,29],[309,32,206,29,"default"],[309,39,206,29],[309,40,206,30,"getForegroundPermissionsAsync"],[309,69,206,59],[309,70,206,60],[309,71,206,61],[310,4,207,0],[310,5,207,1],[311,4,207,1],[311,11,207,1,"_getForegroundPermissionsAsync"],[311,41,207,1],[311,42,207,1,"apply"],[311,47,207,1],[311,54,207,1,"arguments"],[311,63,207,1],[312,2,207,1],[313,2,207,1],[313,11,213,22,"requestForegroundPermissionsAsync"],[313,44,213,55,"requestForegroundPermissionsAsync"],[313,45,213,55],[314,4,213,55],[314,11,213,55,"_requestForegroundPermissionsAsync"],[314,45,213,55],[314,46,213,55,"apply"],[314,51,213,55],[314,58,213,55,"arguments"],[314,67,213,55],[315,2,213,55],[315,4,216,0],[316,2,217,0],[317,0,218,0],[318,0,219,0],[319,0,220,0],[320,0,221,0],[321,0,222,0],[322,0,223,0],[323,0,224,0],[324,0,225,0],[325,2,217,0],[325,11,217,0,"_requestForegroundPermissionsAsync"],[325,46,217,0],[326,4,217,0,"_requestForegroundPermissionsAsync"],[326,38,217,0],[326,45,217,0,"_asyncToGenerator"],[326,62,217,0],[326,63,217,0,"default"],[326,70,217,0],[326,72,213,7],[326,85,213,58],[327,6,214,4],[327,19,214,17,"ExpoLocation"],[327,31,214,29],[327,32,214,29,"default"],[327,39,214,29],[327,40,214,30,"requestForegroundPermissionsAsync"],[327,73,214,63],[327,74,214,64],[327,75,214,65],[328,4,215,0],[328,5,215,1],[329,4,215,1],[329,11,215,1,"_requestForegroundPermissionsAsync"],[329,45,215,1],[329,46,215,1,"apply"],[329,51,215,1],[329,58,215,1,"arguments"],[329,67,215,1],[330,2,215,1],[331,2,226,7],[331,6,226,13,"useForegroundPermissions"],[331,30,226,37],[331,33,226,40],[331,37,226,40,"createPermissionHook"],[331,53,226,60],[331,54,226,60,"createPermissionHook"],[331,74,226,60],[331,76,226,61],[332,4,227,4,"getMethod"],[332,13,227,13],[332,15,227,15,"getForegroundPermissionsAsync"],[332,44,227,44],[333,4,228,4,"requestMethod"],[333,17,228,17],[333,19,228,19,"requestForegroundPermissionsAsync"],[334,2,229,0],[334,3,229,1],[334,4,229,2],[335,2,230,0],[336,2,231,0],[337,0,232,0],[338,0,233,0],[339,0,234,0],[340,2,231,0],[340,11,235,22,"getBackgroundPermissionsAsync"],[340,40,235,51,"getBackgroundPermissionsAsync"],[340,41,235,51],[341,4,235,51],[341,11,235,51,"_getBackgroundPermissionsAsync"],[341,41,235,51],[341,42,235,51,"apply"],[341,47,235,51],[341,54,235,51,"arguments"],[341,63,235,51],[342,2,235,51],[342,4,238,0],[343,2,239,0],[344,0,240,0],[345,0,241,0],[346,0,242,0],[347,0,243,0],[348,0,244,0],[349,0,245,0],[350,0,246,0],[351,0,247,0],[352,2,239,0],[352,11,239,0,"_getBackgroundPermissionsAsync"],[352,42,239,0],[353,4,239,0,"_getBackgroundPermissionsAsync"],[353,34,239,0],[353,41,239,0,"_asyncToGenerator"],[353,58,239,0],[353,59,239,0,"default"],[353,66,239,0],[353,68,235,7],[353,81,235,54],[354,6,236,4],[354,19,236,17,"ExpoLocation"],[354,31,236,29],[354,32,236,29,"default"],[354,39,236,29],[354,40,236,30,"getBackgroundPermissionsAsync"],[354,69,236,59],[354,70,236,60],[354,71,236,61],[355,4,237,0],[355,5,237,1],[356,4,237,1],[356,11,237,1,"_getBackgroundPermissionsAsync"],[356,41,237,1],[356,42,237,1,"apply"],[356,47,237,1],[356,54,237,1,"arguments"],[356,63,237,1],[357,2,237,1],[358,2,237,1],[358,11,248,22,"requestBackgroundPermissionsAsync"],[358,44,248,55,"requestBackgroundPermissionsAsync"],[358,45,248,55],[359,4,248,55],[359,11,248,55,"_requestBackgroundPermissionsAsync"],[359,45,248,55],[359,46,248,55,"apply"],[359,51,248,55],[359,58,248,55,"arguments"],[359,67,248,55],[360,2,248,55],[360,4,251,0],[361,2,252,0],[362,0,253,0],[363,0,254,0],[364,0,255,0],[365,0,256,0],[366,0,257,0],[367,0,258,0],[368,0,259,0],[369,0,260,0],[370,0,261,0],[371,2,252,0],[371,11,252,0,"_requestBackgroundPermissionsAsync"],[371,46,252,0],[372,4,252,0,"_requestBackgroundPermissionsAsync"],[372,38,252,0],[372,45,252,0,"_asyncToGenerator"],[372,62,252,0],[372,63,252,0,"default"],[372,70,252,0],[372,72,248,7],[372,85,248,58],[373,6,249,4],[373,19,249,17,"ExpoLocation"],[373,31,249,29],[373,32,249,29,"default"],[373,39,249,29],[373,40,249,30,"requestBackgroundPermissionsAsync"],[373,73,249,63],[373,74,249,64],[373,75,249,65],[374,4,250,0],[374,5,250,1],[375,4,250,1],[375,11,250,1,"_requestBackgroundPermissionsAsync"],[375,45,250,1],[375,46,250,1,"apply"],[375,51,250,1],[375,58,250,1,"arguments"],[375,67,250,1],[376,2,250,1],[377,2,262,7],[377,6,262,13,"useBackgroundPermissions"],[377,30,262,37],[377,33,262,40],[377,37,262,40,"createPermissionHook"],[377,53,262,60],[377,54,262,60,"createPermissionHook"],[377,74,262,60],[377,76,262,61],[378,4,263,4,"getMethod"],[378,13,263,13],[378,15,263,15,"getBackgroundPermissionsAsync"],[378,44,263,44],[379,4,264,4,"requestMethod"],[379,17,264,17],[379,19,264,19,"requestBackgroundPermissionsAsync"],[380,2,265,0],[380,3,265,1],[380,4,265,2],[381,2,266,0],[382,2,267,0],[383,2,268,0],[384,0,269,0],[385,0,270,0],[386,0,271,0],[387,0,272,0],[388,2,268,0],[388,11,273,22,"hasServicesEnabledAsync"],[388,34,273,45,"hasServicesEnabledAsync"],[388,35,273,45],[389,4,273,45],[389,11,273,45,"_hasServicesEnabledAsync"],[389,35,273,45],[389,36,273,45,"apply"],[389,41,273,45],[389,48,273,45,"arguments"],[389,57,273,45],[390,2,273,45],[390,4,276,0],[391,2,276,0],[391,11,276,0,"_hasServicesEnabledAsync"],[391,36,276,0],[392,4,276,0,"_hasServicesEnabledAsync"],[392,28,276,0],[392,35,276,0,"_asyncToGenerator"],[392,52,276,0],[392,53,276,0,"default"],[392,60,276,0],[392,62,273,7],[392,75,273,48],[393,6,274,4],[393,19,274,17,"ExpoLocation"],[393,31,274,29],[393,32,274,29,"default"],[393,39,274,29],[393,40,274,30,"hasServicesEnabledAsync"],[393,63,274,53],[393,64,274,54],[393,65,274,55],[394,4,275,0],[394,5,275,1],[395,4,275,1],[395,11,275,1,"_hasServicesEnabledAsync"],[395,35,275,1],[395,36,275,1,"apply"],[395,41,275,1],[395,48,275,1,"arguments"],[395,57,275,1],[396,2,275,1],[397,2,277,0],[397,11,277,9,"_validate"],[397,20,277,18,"_validate"],[397,21,277,19,"taskName"],[397,29,277,27],[397,31,277,29],[398,4,278,4],[398,8,278,8],[398,9,278,9,"taskName"],[398,17,278,17],[398,21,278,21],[398,28,278,28,"taskName"],[398,36,278,36],[398,41,278,41],[398,49,278,49],[398,51,278,51],[399,6,279,8],[399,12,279,14],[399,16,279,18,"Error"],[399,21,279,23],[399,22,279,24],[399,70,279,72,"taskName"],[399,78,279,80],[399,89,279,91],[399,90,279,92],[400,4,280,4],[401,4,281,4],[401,8,281,8],[401,12,281,8,"isRunningInExpoGo"],[401,17,281,25],[401,18,281,25,"isRunningInExpoGo"],[401,35,281,25],[401,37,281,26],[401,38,281,27],[401,40,281,29],[402,6,282,8],[402,10,282,12],[402,11,282,13,"warnAboutExpoGoDisplayed"],[402,35,282,37],[402,37,282,39],[403,8,283,12],[403,12,283,18,"message"],[403,19,283,25],[403,22,283,28],[403,68,283,74],[403,71,284,16],[403,114,284,59],[403,117,285,16],[403,168,285,67],[403,171,286,16],[403,275,286,120],[404,8,287,12,"console"],[404,15,287,19],[404,16,287,20,"warn"],[404,20,287,24],[404,21,287,25,"message"],[404,28,287,32],[404,29,287,33],[405,8,288,12,"warnAboutExpoGoDisplayed"],[405,32,288,36],[405,35,288,39],[405,39,288,43],[406,6,289,8],[407,4,290,4],[408,2,291,0],[409,2,292,0],[410,2,292,0],[410,11,293,22,"isBackgroundLocationAvailableAsync"],[410,45,293,56,"isBackgroundLocationAvailableAsync"],[410,46,293,56],[411,4,293,56],[411,11,293,56,"_isBackgroundLocationAvailableAsync"],[411,46,293,56],[411,47,293,56,"apply"],[411,52,293,56],[411,59,293,56,"arguments"],[411,68,293,56],[412,2,293,56],[412,4,297,0],[413,2,298,0],[414,0,299,0],[415,0,300,0],[416,0,301,0],[417,0,302,0],[418,0,303,0],[419,0,304,0],[420,0,305,0],[421,0,306,0],[422,0,307,0],[423,0,308,0],[424,0,309,0],[425,0,310,0],[426,0,311,0],[427,0,312,0],[428,0,313,0],[429,0,314,0],[430,0,315,0],[431,0,316,0],[432,0,317,0],[433,0,318,0],[434,0,319,0],[435,0,320,0],[436,0,321,0],[437,0,322,0],[438,0,323,0],[439,2,298,0],[439,11,298,0,"_isBackgroundLocationAvailableAsync"],[439,47,298,0],[440,4,298,0,"_isBackgroundLocationAvailableAsync"],[440,39,298,0],[440,46,298,0,"_asyncToGenerator"],[440,63,298,0],[440,64,298,0,"default"],[440,71,298,0],[440,73,293,7],[440,86,293,59],[441,6,294,4],[441,10,294,10,"providerStatus"],[441,24,294,24],[441,33,294,33,"getProviderStatusAsync"],[441,55,294,55],[441,56,294,56],[441,57,294,57],[442,6,295,4],[442,13,295,11,"providerStatus"],[442,27,295,25],[442,28,295,26,"backgroundModeEnabled"],[442,49,295,47],[443,4,296,0],[443,5,296,1],[444,4,296,1],[444,11,296,1,"_isBackgroundLocationAvailableAsync"],[444,46,296,1],[444,47,296,1,"apply"],[444,52,296,1],[444,59,296,1,"arguments"],[444,68,296,1],[445,2,296,1],[446,2,296,1],[446,11,324,22,"startLocationUpdatesAsync"],[446,36,324,47,"startLocationUpdatesAsync"],[446,37,324,47,"_x8"],[446,40,324,47],[447,4,324,47],[447,11,324,47,"_startLocationUpdatesAsync"],[447,37,324,47],[447,38,324,47,"apply"],[447,43,324,47],[447,50,324,47,"arguments"],[447,59,324,47],[448,2,324,47],[448,4,328,0],[449,2,329,0],[450,0,330,0],[451,0,331,0],[452,0,332,0],[453,0,333,0],[454,2,329,0],[454,11,329,0,"_startLocationUpdatesAsync"],[454,38,329,0],[455,4,329,0,"_startLocationUpdatesAsync"],[455,30,329,0],[455,37,329,0,"_asyncToGenerator"],[455,54,329,0],[455,55,329,0,"default"],[455,62,329,0],[455,64,324,7],[455,75,324,48,"taskName"],[455,83,324,56],[455,85,324,109],[456,6,324,109],[456,10,324,58,"options"],[456,17,324,65],[456,20,324,65,"arguments"],[456,29,324,65],[456,30,324,65,"length"],[456,36,324,65],[456,44,324,65,"arguments"],[456,53,324,65],[456,61,324,65,"undefined"],[456,70,324,65],[456,73,324,65,"arguments"],[456,82,324,65],[456,88,324,68],[457,8,324,70,"accuracy"],[457,16,324,78],[457,18,324,80,"LocationAccuracy"],[457,32,324,96],[457,33,324,96,"LocationAccuracy"],[457,49,324,96],[457,50,324,97,"Balanced"],[458,6,324,106],[458,7,324,107],[459,6,325,4,"_validate"],[459,15,325,13],[459,16,325,14,"taskName"],[459,24,325,22],[459,25,325,23],[460,6,326,4],[460,12,326,10,"ExpoLocation"],[460,24,326,22],[460,25,326,22,"default"],[460,32,326,22],[460,33,326,23,"startLocationUpdatesAsync"],[460,58,326,48],[460,59,326,49,"taskName"],[460,67,326,57],[460,69,326,59,"options"],[460,76,326,66],[460,77,326,67],[461,4,327,0],[461,5,327,1],[462,4,327,1],[462,11,327,1,"_startLocationUpdatesAsync"],[462,37,327,1],[462,38,327,1,"apply"],[462,43,327,1],[462,50,327,1,"arguments"],[462,59,327,1],[463,2,327,1],[464,2,327,1],[464,11,334,22,"stopLocationUpdatesAsync"],[464,35,334,46,"stopLocationUpdatesAsync"],[464,36,334,46,"_x9"],[464,39,334,46],[465,4,334,46],[465,11,334,46,"_stopLocationUpdatesAsync"],[465,36,334,46],[465,37,334,46,"apply"],[465,42,334,46],[465,49,334,46,"arguments"],[465,58,334,46],[466,2,334,46],[466,4,338,0],[467,2,339,0],[468,0,340,0],[469,0,341,0],[470,0,342,0],[471,0,343,0],[472,2,339,0],[472,11,339,0,"_stopLocationUpdatesAsync"],[472,37,339,0],[473,4,339,0,"_stopLocationUpdatesAsync"],[473,29,339,0],[473,36,339,0,"_asyncToGenerator"],[473,53,339,0],[473,54,339,0,"default"],[473,61,339,0],[473,63,334,7],[473,74,334,47,"taskName"],[473,82,334,55],[473,84,334,57],[474,6,335,4,"_validate"],[474,15,335,13],[474,16,335,14,"taskName"],[474,24,335,22],[474,25,335,23],[475,6,336,4],[475,12,336,10,"ExpoLocation"],[475,24,336,22],[475,25,336,22,"default"],[475,32,336,22],[475,33,336,23,"stopLocationUpdatesAsync"],[475,57,336,47],[475,58,336,48,"taskName"],[475,66,336,56],[475,67,336,57],[476,4,337,0],[476,5,337,1],[477,4,337,1],[477,11,337,1,"_stopLocationUpdatesAsync"],[477,36,337,1],[477,37,337,1,"apply"],[477,42,337,1],[477,49,337,1,"arguments"],[477,58,337,1],[478,2,337,1],[479,2,337,1],[479,11,344,22,"hasStartedLocationUpdatesAsync"],[479,41,344,52,"hasStartedLocationUpdatesAsync"],[479,42,344,52,"_x0"],[479,45,344,52],[480,4,344,52],[480,11,344,52,"_hasStartedLocationUpdatesAsync"],[480,42,344,52],[480,43,344,52,"apply"],[480,48,344,52],[480,55,344,52,"arguments"],[480,64,344,52],[481,2,344,52],[481,4,348,0],[482,2,348,0],[482,11,348,0,"_hasStartedLocationUpdatesAsync"],[482,43,348,0],[483,4,348,0,"_hasStartedLocationUpdatesAsync"],[483,35,348,0],[483,42,348,0,"_asyncToGenerator"],[483,59,348,0],[483,60,348,0,"default"],[483,67,348,0],[483,69,344,7],[483,80,344,53,"taskName"],[483,88,344,61],[483,90,344,63],[484,6,345,4,"_validate"],[484,15,345,13],[484,16,345,14,"taskName"],[484,24,345,22],[484,25,345,23],[485,6,346,4],[485,13,346,11,"ExpoLocation"],[485,25,346,23],[485,26,346,23,"default"],[485,33,346,23],[485,34,346,24,"hasStartedLocationUpdatesAsync"],[485,64,346,54],[485,65,346,55,"taskName"],[485,73,346,63],[485,74,346,64],[486,4,347,0],[486,5,347,1],[487,4,347,1],[487,11,347,1,"_hasStartedLocationUpdatesAsync"],[487,42,347,1],[487,43,347,1,"apply"],[487,48,347,1],[487,55,347,1,"arguments"],[487,64,347,1],[488,2,347,1],[489,2,349,0],[489,11,349,9,"_validateRegions"],[489,27,349,25,"_validateRegions"],[489,28,349,26,"regions"],[489,35,349,33],[489,37,349,35],[490,4,350,4],[490,8,350,8],[490,9,350,9,"regions"],[490,16,350,16],[490,20,350,20,"regions"],[490,27,350,27],[490,28,350,28,"length"],[490,34,350,34],[490,39,350,39],[490,40,350,40],[490,42,350,42],[491,6,351,8],[491,12,351,14],[491,16,351,18,"Error"],[491,21,351,23],[491,22,351,24],[491,123,351,125],[491,124,351,126],[492,4,352,4],[493,4,353,4],[493,9,353,9],[493,13,353,15,"region"],[493,19,353,21],[493,23,353,25,"regions"],[493,30,353,32],[493,32,353,34],[494,6,354,8],[494,10,354,12],[494,17,354,19,"region"],[494,23,354,25],[494,24,354,26,"latitude"],[494,32,354,34],[494,37,354,39],[494,45,354,47],[494,47,354,49],[495,8,355,12],[495,14,355,18],[495,18,355,22,"TypeError"],[495,27,355,31],[495,28,355,32],[495,72,355,76,"region"],[495,78,355,82],[495,79,355,83,"latitude"],[495,87,355,91],[495,99,355,103],[495,100,355,104],[496,6,356,8],[497,6,357,8],[497,10,357,12],[497,17,357,19,"region"],[497,23,357,25],[497,24,357,26,"longitude"],[497,33,357,35],[497,38,357,40],[497,46,357,48],[497,48,357,50],[498,8,358,12],[498,14,358,18],[498,18,358,22,"TypeError"],[498,27,358,31],[498,28,358,32],[498,73,358,77,"region"],[498,79,358,83],[498,80,358,84,"longitude"],[498,89,358,93],[498,101,358,105],[498,102,358,106],[499,6,359,8],[500,6,360,8],[500,10,360,12],[500,17,360,19,"region"],[500,23,360,25],[500,24,360,26,"radius"],[500,30,360,32],[500,35,360,37],[500,43,360,45],[500,45,360,47],[501,8,361,12],[501,14,361,18],[501,18,361,22,"TypeError"],[501,27,361,31],[501,28,361,32],[501,70,361,74,"region"],[501,76,361,80],[501,77,361,81,"radius"],[501,83,361,87],[501,95,361,99],[501,96,361,100],[502,6,362,8],[503,4,363,4],[504,2,364,0],[505,2,365,0],[506,2,366,0],[507,0,367,0],[508,0,368,0],[509,0,369,0],[510,0,370,0],[511,0,371,0],[512,0,372,0],[513,0,373,0],[514,0,374,0],[515,0,375,0],[516,0,376,0],[517,0,377,0],[518,0,378,0],[519,0,379,0],[520,0,380,0],[521,0,381,0],[522,0,382,0],[523,0,383,0],[524,0,384,0],[525,0,385,0],[526,0,386,0],[527,0,387,0],[528,0,388,0],[529,0,389,0],[530,0,390,0],[531,0,391,0],[532,0,392,0],[533,0,393,0],[534,0,394,0],[535,0,395,0],[536,0,396,0],[537,0,397,0],[538,0,398,0],[539,0,399,0],[540,0,400,0],[541,0,401,0],[542,2,366,0],[542,11,402,22,"startGeofencingAsync"],[542,31,402,42,"startGeofencingAsync"],[542,32,402,42,"_x1"],[542,35,402,42],[543,4,402,42],[543,11,402,42,"_startGeofencingAsync"],[543,32,402,42],[543,33,402,42,"apply"],[543,38,402,42],[543,45,402,42,"arguments"],[543,54,402,42],[544,2,402,42],[544,4,407,0],[545,2,408,0],[546,0,409,0],[547,0,410,0],[548,0,411,0],[549,0,412,0],[550,0,413,0],[551,2,408,0],[551,11,408,0,"_startGeofencingAsync"],[551,33,408,0],[552,4,408,0,"_startGeofencingAsync"],[552,25,408,0],[552,32,408,0,"_asyncToGenerator"],[552,49,408,0],[552,50,408,0,"default"],[552,57,408,0],[552,59,402,7],[552,70,402,43,"taskName"],[552,78,402,51],[552,80,402,67],[553,6,402,67],[553,10,402,53,"regions"],[553,17,402,60],[553,20,402,60,"arguments"],[553,29,402,60],[553,30,402,60,"length"],[553,36,402,60],[553,44,402,60,"arguments"],[553,53,402,60],[553,61,402,60,"undefined"],[553,70,402,60],[553,73,402,60,"arguments"],[553,82,402,60],[553,88,402,63],[553,90,402,65],[554,6,403,4,"_validate"],[554,15,403,13],[554,16,403,14,"taskName"],[554,24,403,22],[554,25,403,23],[555,6,404,4,"_validateRegions"],[555,22,404,20],[555,23,404,21,"regions"],[555,30,404,28],[555,31,404,29],[556,6,405,4],[556,12,405,10,"ExpoLocation"],[556,24,405,22],[556,25,405,22,"default"],[556,32,405,22],[556,33,405,23,"startGeofencingAsync"],[556,53,405,43],[556,54,405,44,"taskName"],[556,62,405,52],[556,64,405,54],[557,8,405,56,"regions"],[558,6,405,64],[558,7,405,65],[558,8,405,66],[559,4,406,0],[559,5,406,1],[560,4,406,1],[560,11,406,1,"_startGeofencingAsync"],[560,32,406,1],[560,33,406,1,"apply"],[560,38,406,1],[560,45,406,1,"arguments"],[560,54,406,1],[561,2,406,1],[562,2,406,1],[562,11,414,22,"stopGeofencingAsync"],[562,30,414,41,"stopGeofencingAsync"],[562,31,414,41,"_x10"],[562,35,414,41],[563,4,414,41],[563,11,414,41,"_stopGeofencingAsync"],[563,31,414,41],[563,32,414,41,"apply"],[563,37,414,41],[563,44,414,41,"arguments"],[563,53,414,41],[564,2,414,41],[564,4,418,0],[565,2,419,0],[566,0,420,0],[567,0,421,0],[568,0,422,0],[569,0,423,0],[570,2,419,0],[570,11,419,0,"_stopGeofencingAsync"],[570,32,419,0],[571,4,419,0,"_stopGeofencingAsync"],[571,24,419,0],[571,31,419,0,"_asyncToGenerator"],[571,48,419,0],[571,49,419,0,"default"],[571,56,419,0],[571,58,414,7],[571,69,414,42,"taskName"],[571,77,414,50],[571,79,414,52],[572,6,415,4,"_validate"],[572,15,415,13],[572,16,415,14,"taskName"],[572,24,415,22],[572,25,415,23],[573,6,416,4],[573,12,416,10,"ExpoLocation"],[573,24,416,22],[573,25,416,22,"default"],[573,32,416,22],[573,33,416,23,"stopGeofencingAsync"],[573,52,416,42],[573,53,416,43,"taskName"],[573,61,416,51],[573,62,416,52],[574,4,417,0],[574,5,417,1],[575,4,417,1],[575,11,417,1,"_stopGeofencingAsync"],[575,31,417,1],[575,32,417,1,"apply"],[575,37,417,1],[575,44,417,1,"arguments"],[575,53,417,1],[576,2,417,1],[577,2,417,1],[577,11,424,22,"hasStartedGeofencingAsync"],[577,36,424,47,"hasStartedGeofencingAsync"],[577,37,424,47,"_x11"],[577,41,424,47],[578,4,424,47],[578,11,424,47,"_hasStartedGeofencingAsync"],[578,37,424,47],[578,38,424,47,"apply"],[578,43,424,47],[578,50,424,47,"arguments"],[578,59,424,47],[579,2,424,47],[580,2,424,47],[580,11,424,47,"_hasStartedGeofencingAsync"],[580,38,424,47],[581,4,424,47,"_hasStartedGeofencingAsync"],[581,30,424,47],[581,37,424,47,"_asyncToGenerator"],[581,54,424,47],[581,55,424,47,"default"],[581,62,424,47],[581,64,424,7],[581,75,424,48,"taskName"],[581,83,424,56],[581,85,424,58],[582,6,425,4,"_validate"],[582,15,425,13],[582,16,425,14,"taskName"],[582,24,425,22],[582,25,425,23],[583,6,426,4],[583,13,426,11,"ExpoLocation"],[583,25,426,23],[583,26,426,23,"default"],[583,33,426,23],[583,34,426,24,"hasStartedGeofencingAsync"],[583,59,426,49],[583,60,426,50,"taskName"],[583,68,426,58],[583,69,426,59],[584,4,427,0],[584,5,427,1],[585,4,427,1],[585,11,427,1,"_hasStartedGeofencingAsync"],[585,37,427,1],[585,38,427,1,"apply"],[585,43,427,1],[585,50,427,1,"arguments"],[585,59,427,1],[586,2,427,1],[587,0,427,1],[587,3]],"functionMap":{"names":["<global>","getProviderStatusAsync","enableNetworkProviderAsync","getCurrentPositionAsync","getLastKnownPositionAsync","watchPositionAsync","remove","getHeadingAsync","Promise$argument_0","watchHeadingAsync$argument_0","watchHeadingAsync$argument_1","watchHeadingAsync","geocodeAsync","reverseGeocodeAsync","getForegroundPermissionsAsync","requestForegroundPermissionsAsync","getBackgroundPermissionsAsync","requestBackgroundPermissionsAsync","hasServicesEnabledAsync","_validate","isBackgroundLocationAvailableAsync","startLocationUpdatesAsync","stopLocationUpdatesAsync","hasStartedLocationUpdatesAsync","_validateRegions","startGeofencingAsync","stopGeofencingAsync","hasStartedGeofencingAsync"],"mappings":"AAA;OCY;CDE;OES;CFQ;OGY;CHE;OIY;CJE;OKa;QCK;SDG;CLE;OOO;uBCC;iDCI;aDQ,EE;aFG;KDK;CPC;OWc;QLK;SKG;CXE;OYoB;CZY;OamB;CbY;OcM;CdE;OeM;CfE;OgBoB;ChBE;OiBW;CjBE;OkBuB;ClBE;AmBE;CnBc;OoBE;CpBG;OqB4B;CrBG;OsBO;CtBG;OuBO;CvBG;AwBE;CxBe;OyBsC;CzBI;O0BQ;C1BG;O2BO;C3BG"},"hasCjsExports":false},"type":"js/module"}]}