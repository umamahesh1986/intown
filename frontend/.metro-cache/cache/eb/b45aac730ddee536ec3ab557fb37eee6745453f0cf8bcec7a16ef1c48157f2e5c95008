{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":74,"index":74}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./Location.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":75},"end":{"line":2,"column":53,"index":128}}],"key":"QoIrjHWCWA2K0AZhEI/d0eITBhA=","exportNames":["*"],"imports":1}},{"name":"./LocationEventEmitter","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":129},"end":{"line":3,"column":62,"index":191}}],"key":"38XLRnQdDBx35ZID4eB8duhAnLg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  var _LocationTypes = require(_dependencyMap[1], \"./Location.types\");\n  var _LocationEventEmitter = require(_dependencyMap[2], \"./LocationEventEmitter\");\n  class GeocoderError extends Error {\n    constructor() {\n      super('Geocoder service is not available for this device.');\n      this.code = 'E_NO_GEOCODER';\n    }\n  }\n  /**\n   * Converts `GeolocationPosition` to JavaScript object.\n   */\n  function geolocationPositionToJSON(position) {\n    const {\n      coords,\n      timestamp\n    } = position;\n    return {\n      coords: {\n        latitude: coords.latitude,\n        longitude: coords.longitude,\n        altitude: coords.altitude,\n        accuracy: coords.accuracy,\n        altitudeAccuracy: coords.altitudeAccuracy,\n        heading: coords.heading,\n        speed: coords.speed\n      },\n      timestamp\n    };\n  }\n  /**\n   * Checks whether given location didn't exceed given `maxAge` and fits in the required accuracy.\n   */\n  function isLocationValid(location, options) {\n    const maxAge = typeof options.maxAge === 'number' ? options.maxAge : Infinity;\n    const requiredAccuracy = typeof options.requiredAccuracy === 'number' ? options.requiredAccuracy : Infinity;\n    const locationAccuracy = location.coords.accuracy ?? Infinity;\n    return Date.now() - location.timestamp <= maxAge && locationAccuracy <= requiredAccuracy;\n  }\n  /**\n   * Gets the permission details. The implementation is not very good as it's not\n   * possible to query for permission on all browsers, apparently only the\n   * latest versions will support this.\n   */\n  async function getPermissionsAsync(shouldAsk = false) {\n    if (!navigator?.permissions?.query) {\n      throw new _expoModulesCore.UnavailabilityError('expo-location', 'navigator.permissions API is not available');\n    }\n    const permission = await navigator.permissions.query({\n      name: 'geolocation'\n    });\n    if (permission.state === 'granted') {\n      return {\n        status: _expoModulesCore.PermissionStatus.GRANTED,\n        granted: true,\n        canAskAgain: true,\n        expires: 0\n      };\n    }\n    if (permission.state === 'denied') {\n      return {\n        status: _expoModulesCore.PermissionStatus.DENIED,\n        granted: false,\n        canAskAgain: true,\n        expires: 0\n      };\n    }\n    if (shouldAsk) {\n      return new Promise(resolve => {\n        navigator.geolocation.getCurrentPosition(() => {\n          resolve({\n            status: _expoModulesCore.PermissionStatus.GRANTED,\n            granted: true,\n            canAskAgain: true,\n            expires: 0\n          });\n        }, positionError => {\n          if (positionError.code === positionError.PERMISSION_DENIED) {\n            resolve({\n              status: _expoModulesCore.PermissionStatus.DENIED,\n              granted: false,\n              canAskAgain: true,\n              expires: 0\n            });\n            return;\n          }\n          resolve({\n            status: _expoModulesCore.PermissionStatus.GRANTED,\n            granted: false,\n            canAskAgain: true,\n            expires: 0\n          });\n        });\n      });\n    }\n    // The permission state is 'prompt' when the permission has not been requested\n    // yet, tested on Chrome.\n    return {\n      status: _expoModulesCore.PermissionStatus.UNDETERMINED,\n      granted: false,\n      canAskAgain: true,\n      expires: 0\n    };\n  }\n  let lastKnownPosition = null;\n  var _default = {\n    async getProviderStatusAsync() {\n      return {\n        locationServicesEnabled: 'geolocation' in navigator\n      };\n    },\n    async getLastKnownPositionAsync(options = {}) {\n      if (lastKnownPosition && isLocationValid(lastKnownPosition, options)) {\n        return lastKnownPosition;\n      }\n      return null;\n    },\n    async getCurrentPositionAsync(options) {\n      return new Promise((resolve, reject) => {\n        const resolver = position => {\n          lastKnownPosition = geolocationPositionToJSON(position);\n          resolve(lastKnownPosition);\n        };\n        navigator.geolocation.getCurrentPosition(resolver, reject, Object.assign({\n          maximumAge: Infinity,\n          enableHighAccuracy: (options.accuracy ?? 0) > _LocationTypes.LocationAccuracy.Balanced\n        }, options));\n      });\n    },\n    async removeWatchAsync(watchId) {\n      navigator.geolocation.clearWatch(watchId);\n    },\n    async watchDeviceHeading(_headingId) {\n      console.warn('Location.watchDeviceHeading: is not supported on web');\n    },\n    async hasServicesEnabledAsync() {\n      return 'geolocation' in navigator;\n    },\n    async geocodeAsync() {\n      throw new GeocoderError();\n    },\n    async reverseGeocodeAsync() {\n      throw new GeocoderError();\n    },\n    async watchPositionImplAsync(watchId, options) {\n      return new Promise(resolve => {\n        watchId = navigator.geolocation.watchPosition(position => {\n          lastKnownPosition = geolocationPositionToJSON(position);\n          _LocationEventEmitter.LocationEventEmitter.emit('Expo.locationChanged', {\n            watchId,\n            location: lastKnownPosition\n          });\n        }, undefined, options);\n        resolve(watchId);\n      });\n    },\n    async requestForegroundPermissionsAsync() {\n      return getPermissionsAsync(true);\n    },\n    async requestBackgroundPermissionsAsync() {\n      return getPermissionsAsync(true);\n    },\n    async getForegroundPermissionsAsync() {\n      return getPermissionsAsync();\n    },\n    async getBackgroundPermissionsAsync() {\n      return getPermissionsAsync();\n    }\n  };\n});","lineCount":182,"map":[[7,2,102,0,"Object"],[7,8,102,0],[7,9,102,0,"defineProperty"],[7,23,102,0],[7,24,102,0,"exports"],[7,31,102,0],[8,4,102,0,"enumerable"],[8,14,102,0],[9,4,102,0,"get"],[9,7,102,0],[9,18,102,0,"get"],[9,19,102,0],[10,6,102,0],[10,13,102,0,"_default"],[10,21,102,0],[11,4,102,0],[12,2,102,0],[13,2,1,0],[13,6,1,0,"_expoModulesCore"],[13,22,1,0],[13,25,1,0,"require"],[13,32,1,0],[13,33,1,0,"_dependencyMap"],[13,47,1,0],[14,2,2,0],[14,6,2,0,"_LocationTypes"],[14,20,2,0],[14,23,2,0,"require"],[14,30,2,0],[14,31,2,0,"_dependencyMap"],[14,45,2,0],[15,2,3,0],[15,6,3,0,"_LocationEventEmitter"],[15,27,3,0],[15,30,3,0,"require"],[15,37,3,0],[15,38,3,0,"_dependencyMap"],[15,52,3,0],[16,2,4,0],[16,8,4,6,"GeocoderError"],[16,21,4,19],[16,30,4,28,"Error"],[16,35,4,33],[16,36,4,34],[17,4,6,4,"constructor"],[17,15,6,15,"constructor"],[17,16,6,15],[17,18,6,18],[18,6,7,8],[18,11,7,13],[18,12,7,14],[18,64,7,66],[18,65,7,67],[19,6,8,8],[19,10,8,12],[19,11,8,13,"code"],[19,15,8,17],[19,18,8,20],[19,33,8,35],[20,4,9,4],[21,2,10,0],[22,2,11,0],[23,0,12,0],[24,0,13,0],[25,2,14,0],[25,11,14,9,"geolocationPositionToJSON"],[25,36,14,34,"geolocationPositionToJSON"],[25,37,14,35,"position"],[25,45,14,43],[25,47,14,45],[26,4,15,4],[26,10,15,10],[27,6,15,12,"coords"],[27,12,15,18],[28,6,15,20,"timestamp"],[29,4,15,30],[29,5,15,31],[29,8,15,34,"position"],[29,16,15,42],[30,4,16,4],[30,11,16,11],[31,6,17,8,"coords"],[31,12,17,14],[31,14,17,16],[32,8,18,12,"latitude"],[32,16,18,20],[32,18,18,22,"coords"],[32,24,18,28],[32,25,18,29,"latitude"],[32,33,18,37],[33,8,19,12,"longitude"],[33,17,19,21],[33,19,19,23,"coords"],[33,25,19,29],[33,26,19,30,"longitude"],[33,35,19,39],[34,8,20,12,"altitude"],[34,16,20,20],[34,18,20,22,"coords"],[34,24,20,28],[34,25,20,29,"altitude"],[34,33,20,37],[35,8,21,12,"accuracy"],[35,16,21,20],[35,18,21,22,"coords"],[35,24,21,28],[35,25,21,29,"accuracy"],[35,33,21,37],[36,8,22,12,"altitudeAccuracy"],[36,24,22,28],[36,26,22,30,"coords"],[36,32,22,36],[36,33,22,37,"altitudeAccuracy"],[36,49,22,53],[37,8,23,12,"heading"],[37,15,23,19],[37,17,23,21,"coords"],[37,23,23,27],[37,24,23,28,"heading"],[37,31,23,35],[38,8,24,12,"speed"],[38,13,24,17],[38,15,24,19,"coords"],[38,21,24,25],[38,22,24,26,"speed"],[39,6,25,8],[39,7,25,9],[40,6,26,8,"timestamp"],[41,4,27,4],[41,5,27,5],[42,2,28,0],[43,2,29,0],[44,0,30,0],[45,0,31,0],[46,2,32,0],[46,11,32,9,"isLocationValid"],[46,26,32,24,"isLocationValid"],[46,27,32,25,"location"],[46,35,32,33],[46,37,32,35,"options"],[46,44,32,42],[46,46,32,44],[47,4,33,4],[47,10,33,10,"maxAge"],[47,16,33,16],[47,19,33,19],[47,26,33,26,"options"],[47,33,33,33],[47,34,33,34,"maxAge"],[47,40,33,40],[47,45,33,45],[47,53,33,53],[47,56,33,56,"options"],[47,63,33,63],[47,64,33,64,"maxAge"],[47,70,33,70],[47,73,33,73,"Infinity"],[47,81,33,81],[48,4,34,4],[48,10,34,10,"requiredAccuracy"],[48,26,34,26],[48,29,34,29],[48,36,34,36,"options"],[48,43,34,43],[48,44,34,44,"requiredAccuracy"],[48,60,34,60],[48,65,34,65],[48,73,34,73],[48,76,34,76,"options"],[48,83,34,83],[48,84,34,84,"requiredAccuracy"],[48,100,34,100],[48,103,34,103,"Infinity"],[48,111,34,111],[49,4,35,4],[49,10,35,10,"locationAccuracy"],[49,26,35,26],[49,29,35,29,"location"],[49,37,35,37],[49,38,35,38,"coords"],[49,44,35,44],[49,45,35,45,"accuracy"],[49,53,35,53],[49,57,35,57,"Infinity"],[49,65,35,65],[50,4,36,4],[50,11,36,11,"Date"],[50,15,36,15],[50,16,36,16,"now"],[50,19,36,19],[50,20,36,20],[50,21,36,21],[50,24,36,24,"location"],[50,32,36,32],[50,33,36,33,"timestamp"],[50,42,36,42],[50,46,36,46,"maxAge"],[50,52,36,52],[50,56,36,56,"locationAccuracy"],[50,72,36,72],[50,76,36,76,"requiredAccuracy"],[50,92,36,92],[51,2,37,0],[52,2,38,0],[53,0,39,0],[54,0,40,0],[55,0,41,0],[56,0,42,0],[57,2,43,0],[57,17,43,15,"getPermissionsAsync"],[57,36,43,34,"getPermissionsAsync"],[57,37,43,35,"shouldAsk"],[57,46,43,44],[57,49,43,47],[57,54,43,52],[57,56,43,54],[58,4,44,4],[58,8,44,8],[58,9,44,9,"navigator"],[58,18,44,18],[58,20,44,20,"permissions"],[58,31,44,31],[58,33,44,33,"query"],[58,38,44,38],[58,40,44,40],[59,6,45,8],[59,12,45,14],[59,16,45,18,"UnavailabilityError"],[59,32,45,37],[59,33,45,37,"UnavailabilityError"],[59,52,45,37],[59,53,45,38],[59,68,45,53],[59,70,45,55],[59,114,45,99],[59,115,45,100],[60,4,46,4],[61,4,47,4],[61,10,47,10,"permission"],[61,20,47,20],[61,23,47,23],[61,29,47,29,"navigator"],[61,38,47,38],[61,39,47,39,"permissions"],[61,50,47,50],[61,51,47,51,"query"],[61,56,47,56],[61,57,47,57],[62,6,47,59,"name"],[62,10,47,63],[62,12,47,65],[63,4,47,79],[63,5,47,80],[63,6,47,81],[64,4,48,4],[64,8,48,8,"permission"],[64,18,48,18],[64,19,48,19,"state"],[64,24,48,24],[64,29,48,29],[64,38,48,38],[64,40,48,40],[65,6,49,8],[65,13,49,15],[66,8,50,12,"status"],[66,14,50,18],[66,16,50,20,"PermissionStatus"],[66,32,50,36],[66,33,50,36,"PermissionStatus"],[66,49,50,36],[66,50,50,37,"GRANTED"],[66,57,50,44],[67,8,51,12,"granted"],[67,15,51,19],[67,17,51,21],[67,21,51,25],[68,8,52,12,"canAskAgain"],[68,19,52,23],[68,21,52,25],[68,25,52,29],[69,8,53,12,"expires"],[69,15,53,19],[69,17,53,21],[70,6,54,8],[70,7,54,9],[71,4,55,4],[72,4,56,4],[72,8,56,8,"permission"],[72,18,56,18],[72,19,56,19,"state"],[72,24,56,24],[72,29,56,29],[72,37,56,37],[72,39,56,39],[73,6,57,8],[73,13,57,15],[74,8,58,12,"status"],[74,14,58,18],[74,16,58,20,"PermissionStatus"],[74,32,58,36],[74,33,58,36,"PermissionStatus"],[74,49,58,36],[74,50,58,37,"DENIED"],[74,56,58,43],[75,8,59,12,"granted"],[75,15,59,19],[75,17,59,21],[75,22,59,26],[76,8,60,12,"canAskAgain"],[76,19,60,23],[76,21,60,25],[76,25,60,29],[77,8,61,12,"expires"],[77,15,61,19],[77,17,61,21],[78,6,62,8],[78,7,62,9],[79,4,63,4],[80,4,64,4],[80,8,64,8,"shouldAsk"],[80,17,64,17],[80,19,64,19],[81,6,65,8],[81,13,65,15],[81,17,65,19,"Promise"],[81,24,65,26],[81,25,65,28,"resolve"],[81,32,65,35],[81,36,65,40],[82,8,66,12,"navigator"],[82,17,66,21],[82,18,66,22,"geolocation"],[82,29,66,33],[82,30,66,34,"getCurrentPosition"],[82,48,66,52],[82,49,66,53],[82,55,66,59],[83,10,67,16,"resolve"],[83,17,67,23],[83,18,67,24],[84,12,68,20,"status"],[84,18,68,26],[84,20,68,28,"PermissionStatus"],[84,36,68,44],[84,37,68,44,"PermissionStatus"],[84,53,68,44],[84,54,68,45,"GRANTED"],[84,61,68,52],[85,12,69,20,"granted"],[85,19,69,27],[85,21,69,29],[85,25,69,33],[86,12,70,20,"canAskAgain"],[86,23,70,31],[86,25,70,33],[86,29,70,37],[87,12,71,20,"expires"],[87,19,71,27],[87,21,71,29],[88,10,72,16],[88,11,72,17],[88,12,72,18],[89,8,73,12],[89,9,73,13],[89,11,73,16,"positionError"],[89,24,73,29],[89,28,73,34],[90,10,74,16],[90,14,74,20,"positionError"],[90,27,74,33],[90,28,74,34,"code"],[90,32,74,38],[90,37,74,43,"positionError"],[90,50,74,56],[90,51,74,57,"PERMISSION_DENIED"],[90,68,74,74],[90,70,74,76],[91,12,75,20,"resolve"],[91,19,75,27],[91,20,75,28],[92,14,76,24,"status"],[92,20,76,30],[92,22,76,32,"PermissionStatus"],[92,38,76,48],[92,39,76,48,"PermissionStatus"],[92,55,76,48],[92,56,76,49,"DENIED"],[92,62,76,55],[93,14,77,24,"granted"],[93,21,77,31],[93,23,77,33],[93,28,77,38],[94,14,78,24,"canAskAgain"],[94,25,78,35],[94,27,78,37],[94,31,78,41],[95,14,79,24,"expires"],[95,21,79,31],[95,23,79,33],[96,12,80,20],[96,13,80,21],[96,14,80,22],[97,12,81,20],[98,10,82,16],[99,10,83,16,"resolve"],[99,17,83,23],[99,18,83,24],[100,12,84,20,"status"],[100,18,84,26],[100,20,84,28,"PermissionStatus"],[100,36,84,44],[100,37,84,44,"PermissionStatus"],[100,53,84,44],[100,54,84,45,"GRANTED"],[100,61,84,52],[101,12,85,20,"granted"],[101,19,85,27],[101,21,85,29],[101,26,85,34],[102,12,86,20,"canAskAgain"],[102,23,86,31],[102,25,86,33],[102,29,86,37],[103,12,87,20,"expires"],[103,19,87,27],[103,21,87,29],[104,10,88,16],[104,11,88,17],[104,12,88,18],[105,8,89,12],[105,9,89,13],[105,10,89,14],[106,6,90,8],[106,7,90,9],[106,8,90,10],[107,4,91,4],[108,4,92,4],[109,4,93,4],[110,4,94,4],[110,11,94,11],[111,6,95,8,"status"],[111,12,95,14],[111,14,95,16,"PermissionStatus"],[111,30,95,32],[111,31,95,32,"PermissionStatus"],[111,47,95,32],[111,48,95,33,"UNDETERMINED"],[111,60,95,45],[112,6,96,8,"granted"],[112,13,96,15],[112,15,96,17],[112,20,96,22],[113,6,97,8,"canAskAgain"],[113,17,97,19],[113,19,97,21],[113,23,97,25],[114,6,98,8,"expires"],[114,13,98,15],[114,15,98,17],[115,4,99,4],[115,5,99,5],[116,2,100,0],[117,2,101,0],[117,6,101,4,"lastKnownPosition"],[117,23,101,21],[117,26,101,24],[117,30,101,28],[118,2,102,0],[118,6,102,0,"_default"],[118,14,102,0],[118,17,102,15],[119,4,103,4],[119,10,103,10,"getProviderStatusAsync"],[119,32,103,32,"getProviderStatusAsync"],[119,33,103,32],[119,35,103,35],[120,6,104,8],[120,13,104,15],[121,8,105,12,"locationServicesEnabled"],[121,31,105,35],[121,33,105,37],[121,46,105,50],[121,50,105,54,"navigator"],[122,6,106,8],[122,7,106,9],[123,4,107,4],[123,5,107,5],[124,4,108,4],[124,10,108,10,"getLastKnownPositionAsync"],[124,35,108,35,"getLastKnownPositionAsync"],[124,36,108,36,"options"],[124,43,108,43],[124,46,108,46],[124,47,108,47],[124,48,108,48],[124,50,108,50],[125,6,109,8],[125,10,109,12,"lastKnownPosition"],[125,27,109,29],[125,31,109,33,"isLocationValid"],[125,46,109,48],[125,47,109,49,"lastKnownPosition"],[125,64,109,66],[125,66,109,68,"options"],[125,73,109,75],[125,74,109,76],[125,76,109,78],[126,8,110,12],[126,15,110,19,"lastKnownPosition"],[126,32,110,36],[127,6,111,8],[128,6,112,8],[128,13,112,15],[128,17,112,19],[129,4,113,4],[129,5,113,5],[130,4,114,4],[130,10,114,10,"getCurrentPositionAsync"],[130,33,114,33,"getCurrentPositionAsync"],[130,34,114,34,"options"],[130,41,114,41],[130,43,114,43],[131,6,115,8],[131,13,115,15],[131,17,115,19,"Promise"],[131,24,115,26],[131,25,115,27],[131,26,115,28,"resolve"],[131,33,115,35],[131,35,115,37,"reject"],[131,41,115,43],[131,46,115,48],[132,8,116,12],[132,14,116,18,"resolver"],[132,22,116,26],[132,25,116,30,"position"],[132,33,116,38],[132,37,116,43],[133,10,117,16,"lastKnownPosition"],[133,27,117,33],[133,30,117,36,"geolocationPositionToJSON"],[133,55,117,61],[133,56,117,62,"position"],[133,64,117,70],[133,65,117,71],[134,10,118,16,"resolve"],[134,17,118,23],[134,18,118,24,"lastKnownPosition"],[134,35,118,41],[134,36,118,42],[135,8,119,12],[135,9,119,13],[136,8,120,12,"navigator"],[136,17,120,21],[136,18,120,22,"geolocation"],[136,29,120,33],[136,30,120,34,"getCurrentPosition"],[136,48,120,52],[136,49,120,53,"resolver"],[136,57,120,61],[136,59,120,63,"reject"],[136,65,120,69],[136,67,120,69,"Object"],[136,73,120,69],[136,74,120,69,"assign"],[136,80,120,69],[137,10,121,16,"maximumAge"],[137,20,121,26],[137,22,121,28,"Infinity"],[137,30,121,36],[138,10,122,16,"enableHighAccuracy"],[138,28,122,34],[138,30,122,36],[138,31,122,37,"options"],[138,38,122,44],[138,39,122,45,"accuracy"],[138,47,122,53],[138,51,122,57],[138,52,122,58],[138,56,122,62,"LocationAccuracy"],[138,70,122,78],[138,71,122,78,"LocationAccuracy"],[138,87,122,78],[138,88,122,79,"Balanced"],[139,8,122,87],[139,11,123,19,"options"],[139,18,123,26],[139,19,124,13],[139,20,124,14],[140,6,125,8],[140,7,125,9],[140,8,125,10],[141,4,126,4],[141,5,126,5],[142,4,127,4],[142,10,127,10,"removeWatchAsync"],[142,26,127,26,"removeWatchAsync"],[142,27,127,27,"watchId"],[142,34,127,34],[142,36,127,36],[143,6,128,8,"navigator"],[143,15,128,17],[143,16,128,18,"geolocation"],[143,27,128,29],[143,28,128,30,"clearWatch"],[143,38,128,40],[143,39,128,41,"watchId"],[143,46,128,48],[143,47,128,49],[144,4,129,4],[144,5,129,5],[145,4,130,4],[145,10,130,10,"watchDeviceHeading"],[145,28,130,28,"watchDeviceHeading"],[145,29,130,29,"_headingId"],[145,39,130,39],[145,41,130,41],[146,6,131,8,"console"],[146,13,131,15],[146,14,131,16,"warn"],[146,18,131,20],[146,19,131,21],[146,73,131,75],[146,74,131,76],[147,4,132,4],[147,5,132,5],[148,4,133,4],[148,10,133,10,"hasServicesEnabledAsync"],[148,33,133,33,"hasServicesEnabledAsync"],[148,34,133,33],[148,36,133,36],[149,6,134,8],[149,13,134,15],[149,26,134,28],[149,30,134,32,"navigator"],[149,39,134,41],[150,4,135,4],[150,5,135,5],[151,4,136,4],[151,10,136,10,"geocodeAsync"],[151,22,136,22,"geocodeAsync"],[151,23,136,22],[151,25,136,25],[152,6,137,8],[152,12,137,14],[152,16,137,18,"GeocoderError"],[152,29,137,31],[152,30,137,32],[152,31,137,33],[153,4,138,4],[153,5,138,5],[154,4,139,4],[154,10,139,10,"reverseGeocodeAsync"],[154,29,139,29,"reverseGeocodeAsync"],[154,30,139,29],[154,32,139,32],[155,6,140,8],[155,12,140,14],[155,16,140,18,"GeocoderError"],[155,29,140,31],[155,30,140,32],[155,31,140,33],[156,4,141,4],[156,5,141,5],[157,4,142,4],[157,10,142,10,"watchPositionImplAsync"],[157,32,142,32,"watchPositionImplAsync"],[157,33,142,33,"watchId"],[157,40,142,40],[157,42,142,42,"options"],[157,49,142,49],[157,51,142,51],[158,6,143,8],[158,13,143,15],[158,17,143,19,"Promise"],[158,24,143,26],[158,25,143,28,"resolve"],[158,32,143,35],[158,36,143,40],[159,8,144,12,"watchId"],[159,15,144,19],[159,18,144,22,"navigator"],[159,27,144,31],[159,28,144,32,"geolocation"],[159,39,144,43],[159,40,144,44,"watchPosition"],[159,53,144,57],[159,54,144,59,"position"],[159,62,144,67],[159,66,144,72],[160,10,145,16,"lastKnownPosition"],[160,27,145,33],[160,30,145,36,"geolocationPositionToJSON"],[160,55,145,61],[160,56,145,62,"position"],[160,64,145,70],[160,65,145,71],[161,10,146,16,"LocationEventEmitter"],[161,31,146,36],[161,32,146,36,"LocationEventEmitter"],[161,52,146,36],[161,53,146,37,"emit"],[161,57,146,41],[161,58,146,42],[161,80,146,64],[161,82,146,66],[162,12,147,20,"watchId"],[162,19,147,27],[163,12,148,20,"location"],[163,20,148,28],[163,22,148,30,"lastKnownPosition"],[164,10,149,16],[164,11,149,17],[164,12,149,18],[165,8,150,12],[165,9,150,13],[165,11,150,15,"undefined"],[165,20,150,24],[165,22,150,26,"options"],[165,29,150,33],[165,30,150,34],[166,8,151,12,"resolve"],[166,15,151,19],[166,16,151,20,"watchId"],[166,23,151,27],[166,24,151,28],[167,6,152,8],[167,7,152,9],[167,8,152,10],[168,4,153,4],[168,5,153,5],[169,4,154,4],[169,10,154,10,"requestForegroundPermissionsAsync"],[169,43,154,43,"requestForegroundPermissionsAsync"],[169,44,154,43],[169,46,154,46],[170,6,155,8],[170,13,155,15,"getPermissionsAsync"],[170,32,155,34],[170,33,155,35],[170,37,155,39],[170,38,155,40],[171,4,156,4],[171,5,156,5],[172,4,157,4],[172,10,157,10,"requestBackgroundPermissionsAsync"],[172,43,157,43,"requestBackgroundPermissionsAsync"],[172,44,157,43],[172,46,157,46],[173,6,158,8],[173,13,158,15,"getPermissionsAsync"],[173,32,158,34],[173,33,158,35],[173,37,158,39],[173,38,158,40],[174,4,159,4],[174,5,159,5],[175,4,160,4],[175,10,160,10,"getForegroundPermissionsAsync"],[175,39,160,39,"getForegroundPermissionsAsync"],[175,40,160,39],[175,42,160,42],[176,6,161,8],[176,13,161,15,"getPermissionsAsync"],[176,32,161,34],[176,33,161,35],[176,34,161,36],[177,4,162,4],[177,5,162,5],[178,4,163,4],[178,10,163,10,"getBackgroundPermissionsAsync"],[178,39,163,39,"getBackgroundPermissionsAsync"],[178,40,163,39],[178,42,163,42],[179,6,164,8],[179,13,164,15,"getPermissionsAsync"],[179,32,164,34],[179,33,164,35],[179,34,164,36],[180,4,165,4],[181,2,166,0],[181,3,166,1],[182,0,166,2],[182,3]],"functionMap":{"names":["<global>","GeocoderError","GeocoderError#constructor","geolocationPositionToJSON","isLocationValid","getPermissionsAsync","Promise$argument_0","navigator.geolocation.getCurrentPosition$argument_0","navigator.geolocation.getCurrentPosition$argument_1","default.getProviderStatusAsync","default.getLastKnownPositionAsync","default.getCurrentPositionAsync","resolver","default.removeWatchAsync","default.watchDeviceHeading","default.hasServicesEnabledAsync","default.geocodeAsync","default.reverseGeocodeAsync","default.watchPositionImplAsync","navigator.geolocation.watchPosition$argument_0","default.requestForegroundPermissionsAsync","default.requestBackgroundPermissionsAsync","default.getForegroundPermissionsAsync","default.getBackgroundPermissionsAsync"],"mappings":"AAA;ACG;ICE;KDG;CDC;AGI;CHc;AII;CJK;AKM;2BCsB;qDCC;aDO,EE;aFgB;SDC;CLU;ISG;KTI;IUC;KVK;IWC;2BLC;6BMC;aNG;SKM;KXC;IaC;KbE;IcC;KdE;IeC;KfE;IgBC;KhBE;IiBC;KjBE;IkBC;2BZC;0DaC;abM;SYE;KlBC;IoBC;KpBE;IqBC;KrBE;IsBC;KtBE;IuBC;KvBE"},"hasCjsExports":false},"type":"js/module"}]}