{"dependencies":[{"name":"stream","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":28,"index":43}}],"key":"zqzemo30Pa+agKo6Jlvuf3baHHA=","exportNames":["*"],"imports":1}},{"name":"../utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":44},"end":{"line":4,"column":32,"index":76}}],"key":"dGswK136diHRCgUa8xpQUn/UMbc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _stream = require(_dependencyMap[0], \"stream\");\n  var stream = _interopDefault(_stream);\n  var _utilsJs = require(_dependencyMap[1], \"../utils.js\");\n  var utils = _interopDefault(_utilsJs);\n  const kInternals = Symbol('internals');\n  class AxiosTransformStream extends stream.default.Transform {\n    constructor(options) {\n      options = utils.default.toFlatObject(options, {\n        maxRate: 0,\n        chunkSize: 64 * 1024,\n        minChunkSize: 100,\n        timeWindow: 500,\n        ticksRate: 2,\n        samplesCount: 15\n      }, null, (prop, source) => {\n        return !utils.default.isUndefined(source[prop]);\n      });\n      super({\n        readableHighWaterMark: options.chunkSize\n      });\n      const internals = this[kInternals] = {\n        timeWindow: options.timeWindow,\n        chunkSize: options.chunkSize,\n        maxRate: options.maxRate,\n        minChunkSize: options.minChunkSize,\n        bytesSeen: 0,\n        isCaptured: false,\n        notifiedBytesLoaded: 0,\n        ts: Date.now(),\n        bytes: 0,\n        onReadCallback: null\n      };\n      this.on('newListener', event => {\n        if (event === 'progress') {\n          if (!internals.isCaptured) {\n            internals.isCaptured = true;\n          }\n        }\n      });\n    }\n    _read(size) {\n      const internals = this[kInternals];\n      if (internals.onReadCallback) {\n        internals.onReadCallback();\n      }\n      return super._read(size);\n    }\n    _transform(chunk, encoding, callback) {\n      const internals = this[kInternals];\n      const maxRate = internals.maxRate;\n      const readableHighWaterMark = this.readableHighWaterMark;\n      const timeWindow = internals.timeWindow;\n      const divider = 1000 / timeWindow;\n      const bytesThreshold = maxRate / divider;\n      const minChunkSize = internals.minChunkSize !== false ? Math.max(internals.minChunkSize, bytesThreshold * 0.01) : 0;\n      const pushChunk = (_chunk, _callback) => {\n        const bytes = Buffer.byteLength(_chunk);\n        internals.bytesSeen += bytes;\n        internals.bytes += bytes;\n        internals.isCaptured && this.emit('progress', internals.bytesSeen);\n        if (this.push(_chunk)) {\n          process.nextTick(_callback);\n        } else {\n          internals.onReadCallback = () => {\n            internals.onReadCallback = null;\n            process.nextTick(_callback);\n          };\n        }\n      };\n      const transformChunk = (_chunk, _callback) => {\n        const chunkSize = Buffer.byteLength(_chunk);\n        let chunkRemainder = null;\n        let maxChunkSize = readableHighWaterMark;\n        let bytesLeft;\n        let passed = 0;\n        if (maxRate) {\n          const now = Date.now();\n          if (!internals.ts || (passed = now - internals.ts) >= timeWindow) {\n            internals.ts = now;\n            bytesLeft = bytesThreshold - internals.bytes;\n            internals.bytes = bytesLeft < 0 ? -bytesLeft : 0;\n            passed = 0;\n          }\n          bytesLeft = bytesThreshold - internals.bytes;\n        }\n        if (maxRate) {\n          if (bytesLeft <= 0) {\n            // next time window\n            return setTimeout(() => {\n              _callback(null, _chunk);\n            }, timeWindow - passed);\n          }\n          if (bytesLeft < maxChunkSize) {\n            maxChunkSize = bytesLeft;\n          }\n        }\n        if (maxChunkSize && chunkSize > maxChunkSize && chunkSize - maxChunkSize > minChunkSize) {\n          chunkRemainder = _chunk.subarray(maxChunkSize);\n          _chunk = _chunk.subarray(0, maxChunkSize);\n        }\n        pushChunk(_chunk, chunkRemainder ? () => {\n          process.nextTick(_callback, null, chunkRemainder);\n        } : _callback);\n      };\n      transformChunk(chunk, function transformNextChunk(err, _chunk) {\n        if (err) {\n          return callback(err);\n        }\n        if (_chunk) {\n          transformChunk(_chunk, transformNextChunk);\n        } else {\n          callback(null);\n        }\n      });\n    }\n  }\n  var _default = AxiosTransformStream;\n});","lineCount":135,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,143,0,"Object"],[12,8,143,0],[12,9,143,0,"defineProperty"],[12,23,143,0],[12,24,143,0,"exports"],[12,31,143,0],[13,4,143,0,"enumerable"],[13,14,143,0],[14,4,143,0,"get"],[14,7,143,0],[14,18,143,0,"get"],[14,19,143,0],[15,6,143,0],[15,13,143,0,"_default"],[15,21,143,0],[16,4,143,0],[17,2,143,0],[18,2,3,0],[18,6,3,0,"_stream"],[18,13,3,0],[18,16,3,0,"require"],[18,23,3,0],[18,24,3,0,"_dependencyMap"],[18,38,3,0],[19,2,3,0],[19,6,3,0,"stream"],[19,12,3,0],[19,15,3,0,"_interopDefault"],[19,30,3,0],[19,31,3,0,"_stream"],[19,38,3,0],[20,2,4,0],[20,6,4,0,"_utilsJs"],[20,14,4,0],[20,17,4,0,"require"],[20,24,4,0],[20,25,4,0,"_dependencyMap"],[20,39,4,0],[21,2,4,0],[21,6,4,0,"utils"],[21,11,4,0],[21,14,4,0,"_interopDefault"],[21,29,4,0],[21,30,4,0,"_utilsJs"],[21,38,4,0],[22,2,6,0],[22,8,6,6,"kInternals"],[22,18,6,16],[22,21,6,19,"Symbol"],[22,27,6,25],[22,28,6,26],[22,39,6,37],[22,40,6,38],[23,2,8,0],[23,8,8,6,"AxiosTransformStream"],[23,28,8,26],[23,37,8,35,"stream"],[23,43,8,41],[23,44,8,41,"default"],[23,51,8,41],[23,52,8,42,"Transform"],[23,61,8,51],[24,4,9,2,"constructor"],[24,15,9,13,"constructor"],[24,16,9,14,"options"],[24,23,9,21],[24,25,9,23],[25,6,10,4,"options"],[25,13,10,11],[25,16,10,14,"utils"],[25,21,10,19],[25,22,10,19,"default"],[25,29,10,19],[25,30,10,20,"toFlatObject"],[25,42,10,32],[25,43,10,33,"options"],[25,50,10,40],[25,52,10,42],[26,8,11,6,"maxRate"],[26,15,11,13],[26,17,11,15],[26,18,11,16],[27,8,12,6,"chunkSize"],[27,17,12,15],[27,19,12,17],[27,21,12,19],[27,24,12,22],[27,28,12,26],[28,8,13,6,"minChunkSize"],[28,20,13,18],[28,22,13,20],[28,25,13,23],[29,8,14,6,"timeWindow"],[29,18,14,16],[29,20,14,18],[29,23,14,21],[30,8,15,6,"ticksRate"],[30,17,15,15],[30,19,15,17],[30,20,15,18],[31,8,16,6,"samplesCount"],[31,20,16,18],[31,22,16,20],[32,6,17,4],[32,7,17,5],[32,9,17,7],[32,13,17,11],[32,15,17,13],[32,16,17,14,"prop"],[32,20,17,18],[32,22,17,20,"source"],[32,28,17,26],[32,33,17,31],[33,8,18,6],[33,15,18,13],[33,16,18,14,"utils"],[33,21,18,19],[33,22,18,19,"default"],[33,29,18,19],[33,30,18,20,"isUndefined"],[33,41,18,31],[33,42,18,32,"source"],[33,48,18,38],[33,49,18,39,"prop"],[33,53,18,43],[33,54,18,44],[33,55,18,45],[34,6,19,4],[34,7,19,5],[34,8,19,6],[35,6,21,4],[35,11,21,9],[35,12,21,10],[36,8,22,6,"readableHighWaterMark"],[36,29,22,27],[36,31,22,29,"options"],[36,38,22,36],[36,39,22,37,"chunkSize"],[37,6,23,4],[37,7,23,5],[37,8,23,6],[38,6,25,4],[38,12,25,10,"internals"],[38,21,25,19],[38,24,25,22],[38,28,25,26],[38,29,25,27,"kInternals"],[38,39,25,37],[38,40,25,38],[38,43,25,41],[39,8,26,6,"timeWindow"],[39,18,26,16],[39,20,26,18,"options"],[39,27,26,25],[39,28,26,26,"timeWindow"],[39,38,26,36],[40,8,27,6,"chunkSize"],[40,17,27,15],[40,19,27,17,"options"],[40,26,27,24],[40,27,27,25,"chunkSize"],[40,36,27,34],[41,8,28,6,"maxRate"],[41,15,28,13],[41,17,28,15,"options"],[41,24,28,22],[41,25,28,23,"maxRate"],[41,32,28,30],[42,8,29,6,"minChunkSize"],[42,20,29,18],[42,22,29,20,"options"],[42,29,29,27],[42,30,29,28,"minChunkSize"],[42,42,29,40],[43,8,30,6,"bytesSeen"],[43,17,30,15],[43,19,30,17],[43,20,30,18],[44,8,31,6,"isCaptured"],[44,18,31,16],[44,20,31,18],[44,25,31,23],[45,8,32,6,"notifiedBytesLoaded"],[45,27,32,25],[45,29,32,27],[45,30,32,28],[46,8,33,6,"ts"],[46,10,33,8],[46,12,33,10,"Date"],[46,16,33,14],[46,17,33,15,"now"],[46,20,33,18],[46,21,33,19],[46,22,33,20],[47,8,34,6,"bytes"],[47,13,34,11],[47,15,34,13],[47,16,34,14],[48,8,35,6,"onReadCallback"],[48,22,35,20],[48,24,35,22],[49,6,36,4],[49,7,36,5],[50,6,38,4],[50,10,38,8],[50,11,38,9,"on"],[50,13,38,11],[50,14,38,12],[50,27,38,25],[50,29,38,27,"event"],[50,34,38,32],[50,38,38,36],[51,8,39,6],[51,12,39,10,"event"],[51,17,39,15],[51,22,39,20],[51,32,39,30],[51,34,39,32],[52,10,40,8],[52,14,40,12],[52,15,40,13,"internals"],[52,24,40,22],[52,25,40,23,"isCaptured"],[52,35,40,33],[52,37,40,35],[53,12,41,10,"internals"],[53,21,41,19],[53,22,41,20,"isCaptured"],[53,32,41,30],[53,35,41,33],[53,39,41,37],[54,10,42,8],[55,8,43,6],[56,6,44,4],[56,7,44,5],[56,8,44,6],[57,4,45,2],[58,4,47,2,"_read"],[58,9,47,7,"_read"],[58,10,47,8,"size"],[58,14,47,12],[58,16,47,14],[59,6,48,4],[59,12,48,10,"internals"],[59,21,48,19],[59,24,48,22],[59,28,48,26],[59,29,48,27,"kInternals"],[59,39,48,37],[59,40,48,38],[60,6,50,4],[60,10,50,8,"internals"],[60,19,50,17],[60,20,50,18,"onReadCallback"],[60,34,50,32],[60,36,50,34],[61,8,51,6,"internals"],[61,17,51,15],[61,18,51,16,"onReadCallback"],[61,32,51,30],[61,33,51,31],[61,34,51,32],[62,6,52,4],[63,6,54,4],[63,13,54,11],[63,18,54,16],[63,19,54,17,"_read"],[63,24,54,22],[63,25,54,23,"size"],[63,29,54,27],[63,30,54,28],[64,4,55,2],[65,4,57,2,"_transform"],[65,14,57,12,"_transform"],[65,15,57,13,"chunk"],[65,20,57,18],[65,22,57,20,"encoding"],[65,30,57,28],[65,32,57,30,"callback"],[65,40,57,38],[65,42,57,40],[66,6,58,4],[66,12,58,10,"internals"],[66,21,58,19],[66,24,58,22],[66,28,58,26],[66,29,58,27,"kInternals"],[66,39,58,37],[66,40,58,38],[67,6,59,4],[67,12,59,10,"maxRate"],[67,19,59,17],[67,22,59,20,"internals"],[67,31,59,29],[67,32,59,30,"maxRate"],[67,39,59,37],[68,6,61,4],[68,12,61,10,"readableHighWaterMark"],[68,33,61,31],[68,36,61,34],[68,40,61,38],[68,41,61,39,"readableHighWaterMark"],[68,62,61,60],[69,6,63,4],[69,12,63,10,"timeWindow"],[69,22,63,20],[69,25,63,23,"internals"],[69,34,63,32],[69,35,63,33,"timeWindow"],[69,45,63,43],[70,6,65,4],[70,12,65,10,"divider"],[70,19,65,17],[70,22,65,20],[70,26,65,24],[70,29,65,27,"timeWindow"],[70,39,65,37],[71,6,66,4],[71,12,66,10,"bytesThreshold"],[71,26,66,24],[71,29,66,28,"maxRate"],[71,36,66,35],[71,39,66,38,"divider"],[71,46,66,46],[72,6,67,4],[72,12,67,10,"minChunkSize"],[72,24,67,22],[72,27,67,25,"internals"],[72,36,67,34],[72,37,67,35,"minChunkSize"],[72,49,67,47],[72,54,67,52],[72,59,67,57],[72,62,67,60,"Math"],[72,66,67,64],[72,67,67,65,"max"],[72,70,67,68],[72,71,67,69,"internals"],[72,80,67,78],[72,81,67,79,"minChunkSize"],[72,93,67,91],[72,95,67,93,"bytesThreshold"],[72,109,67,107],[72,112,67,110],[72,116,67,114],[72,117,67,115],[72,120,67,118],[72,121,67,119],[73,6,69,4],[73,12,69,10,"pushChunk"],[73,21,69,19],[73,24,69,22,"pushChunk"],[73,25,69,23,"_chunk"],[73,31,69,29],[73,33,69,31,"_callback"],[73,42,69,40],[73,47,69,45],[74,8,70,6],[74,14,70,12,"bytes"],[74,19,70,17],[74,22,70,20,"Buffer"],[74,28,70,26],[74,29,70,27,"byteLength"],[74,39,70,37],[74,40,70,38,"_chunk"],[74,46,70,44],[74,47,70,45],[75,8,71,6,"internals"],[75,17,71,15],[75,18,71,16,"bytesSeen"],[75,27,71,25],[75,31,71,29,"bytes"],[75,36,71,34],[76,8,72,6,"internals"],[76,17,72,15],[76,18,72,16,"bytes"],[76,23,72,21],[76,27,72,25,"bytes"],[76,32,72,30],[77,8,74,6,"internals"],[77,17,74,15],[77,18,74,16,"isCaptured"],[77,28,74,26],[77,32,74,30],[77,36,74,34],[77,37,74,35,"emit"],[77,41,74,39],[77,42,74,40],[77,52,74,50],[77,54,74,52,"internals"],[77,63,74,61],[77,64,74,62,"bytesSeen"],[77,73,74,71],[77,74,74,72],[78,8,76,6],[78,12,76,10],[78,16,76,14],[78,17,76,15,"push"],[78,21,76,19],[78,22,76,20,"_chunk"],[78,28,76,26],[78,29,76,27],[78,31,76,29],[79,10,77,8,"process"],[79,17,77,15],[79,18,77,16,"nextTick"],[79,26,77,24],[79,27,77,25,"_callback"],[79,36,77,34],[79,37,77,35],[80,8,78,6],[80,9,78,7],[80,15,78,13],[81,10,79,8,"internals"],[81,19,79,17],[81,20,79,18,"onReadCallback"],[81,34,79,32],[81,37,79,35],[81,43,79,41],[82,12,80,10,"internals"],[82,21,80,19],[82,22,80,20,"onReadCallback"],[82,36,80,34],[82,39,80,37],[82,43,80,41],[83,12,81,10,"process"],[83,19,81,17],[83,20,81,18,"nextTick"],[83,28,81,26],[83,29,81,27,"_callback"],[83,38,81,36],[83,39,81,37],[84,10,82,8],[84,11,82,9],[85,8,83,6],[86,6,84,4],[86,7,84,5],[87,6,86,4],[87,12,86,10,"transformChunk"],[87,26,86,24],[87,29,86,27,"transformChunk"],[87,30,86,28,"_chunk"],[87,36,86,34],[87,38,86,36,"_callback"],[87,47,86,45],[87,52,86,50],[88,8,87,6],[88,14,87,12,"chunkSize"],[88,23,87,21],[88,26,87,24,"Buffer"],[88,32,87,30],[88,33,87,31,"byteLength"],[88,43,87,41],[88,44,87,42,"_chunk"],[88,50,87,48],[88,51,87,49],[89,8,88,6],[89,12,88,10,"chunkRemainder"],[89,26,88,24],[89,29,88,27],[89,33,88,31],[90,8,89,6],[90,12,89,10,"maxChunkSize"],[90,24,89,22],[90,27,89,25,"readableHighWaterMark"],[90,48,89,46],[91,8,90,6],[91,12,90,10,"bytesLeft"],[91,21,90,19],[92,8,91,6],[92,12,91,10,"passed"],[92,18,91,16],[92,21,91,19],[92,22,91,20],[93,8,93,6],[93,12,93,10,"maxRate"],[93,19,93,17],[93,21,93,19],[94,10,94,8],[94,16,94,14,"now"],[94,19,94,17],[94,22,94,20,"Date"],[94,26,94,24],[94,27,94,25,"now"],[94,30,94,28],[94,31,94,29],[94,32,94,30],[95,10,96,8],[95,14,96,12],[95,15,96,13,"internals"],[95,24,96,22],[95,25,96,23,"ts"],[95,27,96,25],[95,31,96,29],[95,32,96,30,"passed"],[95,38,96,36],[95,41,96,40,"now"],[95,44,96,43],[95,47,96,46,"internals"],[95,56,96,55],[95,57,96,56,"ts"],[95,59,96,59],[95,64,96,64,"timeWindow"],[95,74,96,74],[95,76,96,76],[96,12,97,10,"internals"],[96,21,97,19],[96,22,97,20,"ts"],[96,24,97,22],[96,27,97,25,"now"],[96,30,97,28],[97,12,98,10,"bytesLeft"],[97,21,98,19],[97,24,98,22,"bytesThreshold"],[97,38,98,36],[97,41,98,39,"internals"],[97,50,98,48],[97,51,98,49,"bytes"],[97,56,98,54],[98,12,99,10,"internals"],[98,21,99,19],[98,22,99,20,"bytes"],[98,27,99,25],[98,30,99,28,"bytesLeft"],[98,39,99,37],[98,42,99,40],[98,43,99,41],[98,46,99,44],[98,47,99,45,"bytesLeft"],[98,56,99,54],[98,59,99,57],[98,60,99,58],[99,12,100,10,"passed"],[99,18,100,16],[99,21,100,19],[99,22,100,20],[100,10,101,8],[101,10,103,8,"bytesLeft"],[101,19,103,17],[101,22,103,20,"bytesThreshold"],[101,36,103,34],[101,39,103,37,"internals"],[101,48,103,46],[101,49,103,47,"bytes"],[101,54,103,52],[102,8,104,6],[103,8,106,6],[103,12,106,10,"maxRate"],[103,19,106,17],[103,21,106,19],[104,10,107,8],[104,14,107,12,"bytesLeft"],[104,23,107,21],[104,27,107,25],[104,28,107,26],[104,30,107,28],[105,12,108,10],[106,12,109,10],[106,19,109,17,"setTimeout"],[106,29,109,27],[106,30,109,28],[106,36,109,34],[107,14,110,12,"_callback"],[107,23,110,21],[107,24,110,22],[107,28,110,26],[107,30,110,28,"_chunk"],[107,36,110,34],[107,37,110,35],[108,12,111,10],[108,13,111,11],[108,15,111,13,"timeWindow"],[108,25,111,23],[108,28,111,26,"passed"],[108,34,111,32],[108,35,111,33],[109,10,112,8],[110,10,114,8],[110,14,114,12,"bytesLeft"],[110,23,114,21],[110,26,114,24,"maxChunkSize"],[110,38,114,36],[110,40,114,38],[111,12,115,10,"maxChunkSize"],[111,24,115,22],[111,27,115,25,"bytesLeft"],[111,36,115,34],[112,10,116,8],[113,8,117,6],[114,8,119,6],[114,12,119,10,"maxChunkSize"],[114,24,119,22],[114,28,119,26,"chunkSize"],[114,37,119,35],[114,40,119,38,"maxChunkSize"],[114,52,119,50],[114,56,119,55,"chunkSize"],[114,65,119,64],[114,68,119,67,"maxChunkSize"],[114,80,119,79],[114,83,119,83,"minChunkSize"],[114,95,119,95],[114,97,119,97],[115,10,120,8,"chunkRemainder"],[115,24,120,22],[115,27,120,25,"_chunk"],[115,33,120,31],[115,34,120,32,"subarray"],[115,42,120,40],[115,43,120,41,"maxChunkSize"],[115,55,120,53],[115,56,120,54],[116,10,121,8,"_chunk"],[116,16,121,14],[116,19,121,17,"_chunk"],[116,25,121,23],[116,26,121,24,"subarray"],[116,34,121,32],[116,35,121,33],[116,36,121,34],[116,38,121,36,"maxChunkSize"],[116,50,121,48],[116,51,121,49],[117,8,122,6],[118,8,124,6,"pushChunk"],[118,17,124,15],[118,18,124,16,"_chunk"],[118,24,124,22],[118,26,124,24,"chunkRemainder"],[118,40,124,38],[118,43,124,41],[118,49,124,47],[119,10,125,8,"process"],[119,17,125,15],[119,18,125,16,"nextTick"],[119,26,125,24],[119,27,125,25,"_callback"],[119,36,125,34],[119,38,125,36],[119,42,125,40],[119,44,125,42,"chunkRemainder"],[119,58,125,56],[119,59,125,57],[120,8,126,6],[120,9,126,7],[120,12,126,10,"_callback"],[120,21,126,19],[120,22,126,20],[121,6,127,4],[121,7,127,5],[122,6,129,4,"transformChunk"],[122,20,129,18],[122,21,129,19,"chunk"],[122,26,129,24],[122,28,129,26],[122,37,129,35,"transformNextChunk"],[122,55,129,53,"transformNextChunk"],[122,56,129,54,"err"],[122,59,129,57],[122,61,129,59,"_chunk"],[122,67,129,65],[122,69,129,67],[123,8,130,6],[123,12,130,10,"err"],[123,15,130,13],[123,17,130,15],[124,10,131,8],[124,17,131,15,"callback"],[124,25,131,23],[124,26,131,24,"err"],[124,29,131,27],[124,30,131,28],[125,8,132,6],[126,8,134,6],[126,12,134,10,"_chunk"],[126,18,134,16],[126,20,134,18],[127,10,135,8,"transformChunk"],[127,24,135,22],[127,25,135,23,"_chunk"],[127,31,135,29],[127,33,135,31,"transformNextChunk"],[127,51,135,49],[127,52,135,50],[128,8,136,6],[128,9,136,7],[128,15,136,13],[129,10,137,8,"callback"],[129,18,137,16],[129,19,137,17],[129,23,137,21],[129,24,137,22],[130,8,138,6],[131,6,139,4],[131,7,139,5],[131,8,139,6],[132,4,140,2],[133,2,141,0],[134,2,143,0],[134,6,143,0,"_default"],[134,14,143,0],[134,17,143,15,"AxiosTransformStream"],[134,37,143,35],[135,0,143,36],[135,3]],"functionMap":{"names":["<global>","AxiosTransformStream","constructor","utils.toFlatObject$argument_3","on$argument_1","_read","_transform","pushChunk","internals.onReadCallback","transformChunk","setTimeout$argument_0","<anonymous>","transformNextChunk"],"mappings":"AAA;ACO;ECC;aCQ;KDE;2BEmB;KFM;GDC;EIE;GJQ;EKE;sBCY;mCCU;SDG;KDE;2BGE;4BCuB;WDE;yCEa;OFE;KHC;0BME;KNU;GLC;CDC"},"hasCjsExports":false},"type":"js/module"}]}