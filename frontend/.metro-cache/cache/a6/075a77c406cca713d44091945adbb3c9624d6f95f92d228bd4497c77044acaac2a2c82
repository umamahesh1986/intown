{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":31,"index":46}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-is","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":47},"end":{"line":4,"column":46,"index":93}}],"key":"nMRUu046PLZz3vjxw7Fgw3UH3xY=","exportNames":["*"],"imports":1}},{"name":"./useRoute.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":94},"end":{"line":5,"column":41,"index":135}}],"key":"099N+Zv4K9pUFNBPk2MtNNMStD8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":30,"column":0,"index":808},"end":{"line":30,"column":48,"index":856}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  const _excluded = [\"screen\", \"if\"],\n    _excluded2 = [\"screens\", \"groups\"],\n    _excluded3 = [\"if\"];\n  /**\n   * Flatten a type to remove all type alias names, unions etc.\n   * This will show a plain object when hovering over the type.\n   */\n  /**\n   * keyof T doesn't work for union types. We can use distributive conditional types instead.\n   * https://www.typescriptlang.org/docs/handbook/2/conditional-types.html#distributive-conditional-types\n   */\n  /**\n   * We get a union type when using keyof, but we want an intersection instead.\n   * https://stackoverflow.com/a/50375286/1665026\n   */\n  /**\n   * Props for a screen component which is rendered by a static navigator.\n   * Takes the route params as a generic argument.\n   */\n  /**\n   * Infer the param list from the static navigation config.\n   */\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  exports.createComponentForStaticNavigation = createComponentForStaticNavigation;\n  exports.createPathConfigForStaticNavigation = createPathConfigForStaticNavigation;\n  var _babelRuntimeHelpersObjectWithoutPropertiesLoose = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\n  var _objectWithoutPropertiesLoose = _interopDefault(_babelRuntimeHelpersObjectWithoutPropertiesLoose);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopNamespace(_react);\n  var _reactIs = require(_dependencyMap[2], \"react-is\");\n  var _useRouteJs = require(_dependencyMap[3], \"./useRoute.js\");\n  var _reactJsxRuntime = require(_dependencyMap[4], \"react/jsx-runtime\");\n  const MemoizedScreen = /*#__PURE__*/React.memo(({\n    component\n  }) => {\n    const route = (0, _useRouteJs.useRoute)();\n    const children = /*#__PURE__*/React.createElement(component, {\n      route\n    });\n    return children;\n  });\n  MemoizedScreen.displayName = 'Memo(Screen)';\n  const getItemsFromScreens = (Screen, screens) => {\n    return Object.entries(screens).map(([name, item]) => {\n      let component;\n      let props = {};\n      let useIf;\n      let isNavigator = false;\n      if ('screen' in item) {\n        const {\n            screen,\n            if: _if\n          } = item,\n          rest = (0, _objectWithoutPropertiesLoose.default)(item, _excluded);\n        useIf = _if;\n        props = rest;\n        if ((0, _reactIs.isValidElementType)(screen)) {\n          component = screen;\n        } else if ('config' in screen) {\n          isNavigator = true;\n          component = createComponentForStaticNavigation(screen, `${name}Navigator`);\n        }\n      } else if ((0, _reactIs.isValidElementType)(item)) {\n        component = item;\n      } else if ('config' in item) {\n        isNavigator = true;\n        component = createComponentForStaticNavigation(item, `${name}Navigator`);\n      }\n      if (component == null) {\n        throw new Error(`Couldn't find a 'screen' property for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`);\n      }\n      const element = isNavigator ? (/*#__PURE__*/React.createElement(component, {})) : /*#__PURE__*/(0, _reactJsxRuntime.jsx)(MemoizedScreen, {\n        component: component\n      });\n      return () => {\n        const shouldRender = useIf == null || useIf();\n        if (!shouldRender) {\n          return null;\n        }\n        return /*#__PURE__*/(0, _reactJsxRuntime.jsx)(Screen, Object.assign({\n          name: name\n        }, props, {\n          children: () => element\n        }), name);\n      };\n    });\n  };\n\n  /**\n   * Create a component that renders a navigator based on the static configuration.\n   *\n   * @param tree Static navigation config.\n   * @param displayName Name of the component to be displayed in React DevTools.\n   * @returns A component which renders the navigator.\n   */\n  function createComponentForStaticNavigation(tree, displayName) {\n    const {\n      Navigator,\n      Group,\n      Screen,\n      config\n    } = tree;\n    const {\n        screens,\n        groups\n      } = config,\n      rest = (0, _objectWithoutPropertiesLoose.default)(config, _excluded2);\n    if (screens == null && groups == null) {\n      throw new Error(\"Couldn't find a 'screens' or 'groups' property. Make sure to define your screens under a 'screens' property in the configuration.\");\n    }\n    const items = [];\n\n    // Loop through the config to find screens and groups\n    // So we add the screens and groups in the same order as they are defined\n    for (const key in config) {\n      if (key === 'screens' && screens) {\n        items.push(...getItemsFromScreens(Screen, screens));\n      }\n      if (key === 'groups' && groups) {\n        items.push(...Object.entries(groups).map(([key, _ref]) => {\n          let {\n              if: useIf\n            } = _ref,\n            group = (0, _objectWithoutPropertiesLoose.default)(_ref, _excluded3);\n          const groupItems = getItemsFromScreens(Screen, group.screens);\n          return () => {\n            // Call unconditionally since screen configs may contain `useIf` hooks\n            const children = groupItems.map(item => item());\n            const shouldRender = useIf == null || useIf();\n            if (!shouldRender) {\n              return null;\n            }\n            return /*#__PURE__*/(0, _reactJsxRuntime.jsx)(Group, Object.assign({\n              navigationKey: key\n            }, group, {\n              children: children\n            }), key);\n          };\n        }));\n      }\n    }\n    const NavigatorComponent = () => {\n      const children = items.map(item => item());\n      return /*#__PURE__*/(0, _reactJsxRuntime.jsx)(Navigator, Object.assign({}, rest, {\n        children: children\n      }));\n    };\n    NavigatorComponent.displayName = displayName;\n    return NavigatorComponent;\n  }\n  /**\n   * Create a path config object from a static navigation config for deep linking.\n   *\n   * @param tree Static navigation config.\n   * @param options Additional options from `linking.config`.\n   * @param auto Whether to automatically generate paths for leaf screens.\n   * @returns Path config object to use in linking config.\n   *\n   * @example\n   * ```js\n   * const config = {\n   *   screens: {\n   *     Home: {\n   *       screens: createPathConfigForStaticNavigation(HomeTabs),\n   *     },\n   *   },\n   * };\n   * ```\n   */\n  function createPathConfigForStaticNavigation(tree, options, auto) {\n    let initialScreenHasPath = false;\n    let initialScreenConfig;\n    const createPathConfigForTree = (t, o, skipInitialDetection) => {\n      const createPathConfigForScreens = (screens, initialRouteName) => {\n        return Object.fromEntries(Object.entries(screens)\n        // Re-order to move the initial route to the front\n        // This way we can detect the initial route correctly\n        .sort(([a], [b]) => {\n          if (a === initialRouteName) {\n            return -1;\n          }\n          if (b === initialRouteName) {\n            return 1;\n          }\n          return 0;\n        }).map(([key, item]) => {\n          const screenConfig = {};\n          if ('linking' in item) {\n            if (typeof item.linking === 'string') {\n              screenConfig.path = item.linking;\n            } else {\n              Object.assign(screenConfig, item.linking);\n            }\n            if (typeof screenConfig.path === 'string') {\n              screenConfig.path = screenConfig.path.replace(/^\\//, '') // Remove extra leading slash\n              .replace(/\\/$/, ''); // Remove extra trailing slash\n            }\n          }\n          let screens;\n          const skipInitialDetectionInChild = skipInitialDetection || screenConfig.path != null && screenConfig.path !== '';\n          if ('config' in item) {\n            screens = createPathConfigForTree(item, undefined, skipInitialDetectionInChild);\n          } else if ('screen' in item && 'config' in item.screen && (item.screen.config.screens || item.screen.config.groups)) {\n            screens = createPathConfigForTree(item.screen, undefined, skipInitialDetectionInChild);\n          }\n          if (screens) {\n            screenConfig.screens = screens;\n          }\n          if (auto && !screenConfig.screens &&\n          // Skip generating path for screens that specify linking config as `undefined` or `null` explicitly\n          !('linking' in item && item.linking == null)) {\n            if (screenConfig.path != null) {\n              if (!skipInitialDetection) {\n                if (key === initialRouteName && screenConfig.path != null) {\n                  initialScreenHasPath = true;\n                } else if (screenConfig.path === '') {\n                  // We encounter a leaf screen with empty path,\n                  // Clear the initial screen config as it's not needed anymore\n                  initialScreenConfig = undefined;\n                }\n              }\n            } else {\n              if (!skipInitialDetection && initialScreenConfig == null) {\n                initialScreenConfig = screenConfig;\n              }\n              screenConfig.path = key.replace(/([A-Z]+)/g, '-$1').replace(/^-/, '').toLowerCase();\n            }\n          }\n          return [key, screenConfig];\n        }).filter(([, screen]) => Object.keys(screen).length > 0));\n      };\n      const screens = {};\n\n      // Loop through the config to find screens and groups\n      // So we add the screens and groups in the same order as they are defined\n      for (const key in t.config) {\n        if (key === 'screens' && t.config.screens) {\n          Object.assign(screens, createPathConfigForScreens(t.config.screens, o?.initialRouteName ?? t.config.initialRouteName));\n        }\n        if (key === 'groups' && t.config.groups) {\n          Object.entries(t.config.groups).forEach(([, group]) => {\n            Object.assign(screens, createPathConfigForScreens(group.screens, o?.initialRouteName ?? t.config.initialRouteName));\n          });\n        }\n      }\n      if (Object.keys(screens).length === 0) {\n        return undefined;\n      }\n      return screens;\n    };\n    const screens = createPathConfigForTree(tree, options, false);\n    if (auto && initialScreenConfig && !initialScreenHasPath) {\n      initialScreenConfig.path = '';\n    }\n    return screens;\n  }\n});","lineCount":282,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,8,1,13,"_excluded"],[4,17,1,13],[5,4,1,13,"_excluded2"],[5,14,1,13],[6,4,1,13,"_excluded3"],[6,14,1,13],[7,2,7,0],[8,0,8,0],[9,0,9,0],[10,0,10,0],[11,2,12,0],[12,0,13,0],[13,0,14,0],[14,0,15,0],[15,2,17,0],[16,0,18,0],[17,0,19,0],[18,0,20,0],[19,2,22,0],[20,0,23,0],[21,0,24,0],[22,0,25,0],[23,2,27,0],[24,0,28,0],[25,0,29,0],[26,2,27,0,"Object"],[26,8,27,0],[26,9,27,0,"defineProperty"],[26,23,27,0],[26,24,27,0,"exports"],[26,31,27,0],[27,4,27,0,"value"],[27,9,27,0],[28,2,27,0],[29,2,27,0],[29,11,27,0,"_interopDefault"],[29,27,27,0,"e"],[29,28,27,0],[30,4,27,0],[30,11,27,0,"e"],[30,12,27,0],[30,16,27,0,"e"],[30,17,27,0],[30,18,27,0,"__esModule"],[30,28,27,0],[30,31,27,0,"e"],[30,32,27,0],[31,6,27,0,"default"],[31,13,27,0],[31,15,27,0,"e"],[32,4,27,0],[33,2,27,0],[34,2,27,0],[34,11,27,0,"_interopNamespace"],[34,29,27,0,"e"],[34,30,27,0],[35,4,27,0],[35,8,27,0,"e"],[35,9,27,0],[35,13,27,0,"e"],[35,14,27,0],[35,15,27,0,"__esModule"],[35,25,27,0],[35,34,27,0,"e"],[35,35,27,0],[36,4,27,0],[36,8,27,0,"n"],[36,9,27,0],[37,4,27,0],[37,8,27,0,"e"],[37,9,27,0],[37,11,27,0,"Object"],[37,17,27,0],[37,18,27,0,"keys"],[37,22,27,0],[37,23,27,0,"e"],[37,24,27,0],[37,26,27,0,"forEach"],[37,33,27,0],[37,44,27,0,"k"],[37,45,27,0],[38,6,27,0],[38,10,27,0,"d"],[38,11,27,0],[38,14,27,0,"Object"],[38,20,27,0],[38,21,27,0,"getOwnPropertyDescriptor"],[38,45,27,0],[38,46,27,0,"e"],[38,47,27,0],[38,49,27,0,"k"],[38,50,27,0],[39,6,27,0,"Object"],[39,12,27,0],[39,13,27,0,"defineProperty"],[39,27,27,0],[39,28,27,0,"n"],[39,29,27,0],[39,31,27,0,"k"],[39,32,27,0],[39,34,27,0,"d"],[39,35,27,0],[39,36,27,0,"get"],[39,39,27,0],[39,42,27,0,"d"],[39,43,27,0],[40,8,27,0,"enumerable"],[40,18,27,0],[41,8,27,0,"get"],[41,11,27,0],[41,22,27,0,"get"],[41,23,27,0],[42,10,27,0],[42,17,27,0,"e"],[42,18,27,0],[42,19,27,0,"k"],[42,20,27,0],[43,8,27,0],[44,6,27,0],[45,4,27,0],[46,4,27,0,"n"],[46,5,27,0],[46,6,27,0,"default"],[46,13,27,0],[46,16,27,0,"e"],[46,17,27,0],[47,4,27,0],[47,11,27,0,"n"],[47,12,27,0],[48,2,27,0],[49,2,94,0,"exports"],[49,9,94,0],[49,10,94,0,"createComponentForStaticNavigation"],[49,44,94,0],[49,47,94,0,"createComponentForStaticNavigation"],[49,81,94,0],[50,2,168,0,"exports"],[50,9,168,0],[50,10,168,0,"createPathConfigForStaticNavigation"],[50,45,168,0],[50,48,168,0,"createPathConfigForStaticNavigation"],[50,83,168,0],[51,2,254,1],[51,6,254,1,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[51,54,254,1],[51,57,254,1,"require"],[51,64,254,1],[51,65,254,1,"_dependencyMap"],[51,79,254,1],[52,2,254,1],[52,6,254,1,"_objectWithoutPropertiesLoose"],[52,35,254,1],[52,38,254,1,"_interopDefault"],[52,53,254,1],[52,54,254,1,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[52,102,254,1],[53,2,3,0],[53,6,3,0,"_react"],[53,12,3,0],[53,15,3,0,"require"],[53,22,3,0],[53,23,3,0,"_dependencyMap"],[53,37,3,0],[54,2,3,0],[54,6,3,0,"React"],[54,11,3,0],[54,14,3,0,"_interopNamespace"],[54,31,3,0],[54,32,3,0,"_react"],[54,38,3,0],[55,2,4,0],[55,6,4,0,"_reactIs"],[55,14,4,0],[55,17,4,0,"require"],[55,24,4,0],[55,25,4,0,"_dependencyMap"],[55,39,4,0],[56,2,5,0],[56,6,5,0,"_useRouteJs"],[56,17,5,0],[56,20,5,0,"require"],[56,27,5,0],[56,28,5,0,"_dependencyMap"],[56,42,5,0],[57,2,30,0],[57,6,30,0,"_reactJsxRuntime"],[57,22,30,0],[57,25,30,0,"require"],[57,32,30,0],[57,33,30,0,"_dependencyMap"],[57,47,30,0],[58,2,31,0],[58,8,31,6,"MemoizedScreen"],[58,22,31,20],[58,25,31,23],[58,38,31,36,"React"],[58,43,31,41],[58,44,31,42,"memo"],[58,48,31,46],[58,49,31,47],[58,50,31,48],[59,4,32,2,"component"],[60,2,33,0],[60,3,33,1],[60,8,33,6],[61,4,34,2],[61,10,34,8,"route"],[61,15,34,13],[61,18,34,16],[61,22,34,16,"useRoute"],[61,33,34,24],[61,34,34,24,"useRoute"],[61,42,34,24],[61,44,34,25],[61,45,34,26],[62,4,35,2],[62,10,35,8,"children"],[62,18,35,16],[62,21,35,19],[62,34,35,32,"React"],[62,39,35,37],[62,40,35,38,"createElement"],[62,53,35,51],[62,54,35,52,"component"],[62,63,35,61],[62,65,35,63],[63,6,36,4,"route"],[64,4,37,2],[64,5,37,3],[64,6,37,4],[65,4,38,2],[65,11,38,9,"children"],[65,19,38,17],[66,2,39,0],[66,3,39,1],[66,4,39,2],[67,2,40,0,"MemoizedScreen"],[67,16,40,14],[67,17,40,15,"displayName"],[67,28,40,26],[67,31,40,29],[67,45,40,43],[68,2,41,0],[68,8,41,6,"getItemsFromScreens"],[68,27,41,25],[68,30,41,28,"getItemsFromScreens"],[68,31,41,29,"Screen"],[68,37,41,35],[68,39,41,37,"screens"],[68,46,41,44],[68,51,41,49],[69,4,42,2],[69,11,42,9,"Object"],[69,17,42,15],[69,18,42,16,"entries"],[69,25,42,23],[69,26,42,24,"screens"],[69,33,42,31],[69,34,42,32],[69,35,42,33,"map"],[69,38,42,36],[69,39,42,37],[69,40,42,38],[69,41,42,39,"name"],[69,45,42,43],[69,47,42,45,"item"],[69,51,42,49],[69,52,42,50],[69,57,42,55],[70,6,43,4],[70,10,43,8,"component"],[70,19,43,17],[71,6,44,4],[71,10,44,8,"props"],[71,15,44,13],[71,18,44,16],[71,19,44,17],[71,20,44,18],[72,6,45,4],[72,10,45,8,"useIf"],[72,15,45,13],[73,6,46,4],[73,10,46,8,"isNavigator"],[73,21,46,19],[73,24,46,22],[73,29,46,27],[74,6,47,4],[74,10,47,8],[74,18,47,16],[74,22,47,20,"item"],[74,26,47,24],[74,28,47,26],[75,8,48,6],[75,14,48,12],[76,12,49,8,"screen"],[76,18,49,14],[77,12,50,8,"if"],[77,14,50,10],[77,16,50,12,"_if"],[78,10,52,6],[78,11,52,7],[78,14,52,10,"item"],[78,18,52,14],[79,10,51,11,"rest"],[79,14,51,15],[79,21,51,15,"_objectWithoutPropertiesLoose"],[79,50,51,15],[79,51,51,15,"default"],[79,58,51,15],[79,60,52,10,"item"],[79,64,52,14],[79,66,52,14,"_excluded"],[79,75,52,14],[80,8,53,6,"useIf"],[80,13,53,11],[80,16,53,14,"_if"],[80,19,53,17],[81,8,54,6,"props"],[81,13,54,11],[81,16,54,14,"rest"],[81,20,54,18],[82,8,55,6],[82,12,55,10],[82,16,55,10,"isValidElementType"],[82,24,55,28],[82,25,55,28,"isValidElementType"],[82,43,55,28],[82,45,55,29,"screen"],[82,51,55,35],[82,52,55,36],[82,54,55,38],[83,10,56,8,"component"],[83,19,56,17],[83,22,56,20,"screen"],[83,28,56,26],[84,8,57,6],[84,9,57,7],[84,15,57,13],[84,19,57,17],[84,27,57,25],[84,31,57,29,"screen"],[84,37,57,35],[84,39,57,37],[85,10,58,8,"isNavigator"],[85,21,58,19],[85,24,58,22],[85,28,58,26],[86,10,59,8,"component"],[86,19,59,17],[86,22,59,20,"createComponentForStaticNavigation"],[86,56,59,54],[86,57,59,55,"screen"],[86,63,59,61],[86,65,59,63],[86,68,59,66,"name"],[86,72,59,70],[86,83,59,81],[86,84,59,82],[87,8,60,6],[88,6,61,4],[88,7,61,5],[88,13,61,11],[88,17,61,15],[88,21,61,15,"isValidElementType"],[88,29,61,33],[88,30,61,33,"isValidElementType"],[88,48,61,33],[88,50,61,34,"item"],[88,54,61,38],[88,55,61,39],[88,57,61,41],[89,8,62,6,"component"],[89,17,62,15],[89,20,62,18,"item"],[89,24,62,22],[90,6,63,4],[90,7,63,5],[90,13,63,11],[90,17,63,15],[90,25,63,23],[90,29,63,27,"item"],[90,33,63,31],[90,35,63,33],[91,8,64,6,"isNavigator"],[91,19,64,17],[91,22,64,20],[91,26,64,24],[92,8,65,6,"component"],[92,17,65,15],[92,20,65,18,"createComponentForStaticNavigation"],[92,54,65,52],[92,55,65,53,"item"],[92,59,65,57],[92,61,65,59],[92,64,65,62,"name"],[92,68,65,66],[92,79,65,77],[92,80,65,78],[93,6,66,4],[94,6,67,4],[94,10,67,8,"component"],[94,19,67,17],[94,23,67,21],[94,27,67,25],[94,29,67,27],[95,8,68,6],[95,14,68,12],[95,18,68,16,"Error"],[95,23,68,21],[95,24,68,22],[95,77,68,75,"name"],[95,81,68,79],[95,262,68,260],[95,263,68,261],[96,6,69,4],[97,6,70,4],[97,12,70,10,"element"],[97,19,70,17],[97,22,70,20,"isNavigator"],[97,33,70,31],[97,37,70,35],[97,50,70,48,"React"],[97,55,70,53],[97,56,70,54,"createElement"],[97,69,70,67],[97,70,70,68,"component"],[97,79,70,77],[97,81,70,79],[97,82,70,80],[97,83,70,81],[97,84,70,82],[97,88,70,86],[97,101,70,99],[97,105,70,99,"_jsx"],[97,121,70,103],[97,122,70,103,"jsx"],[97,125,70,103],[97,127,70,104,"MemoizedScreen"],[97,141,70,118],[97,143,70,120],[98,8,71,6,"component"],[98,17,71,15],[98,19,71,17,"component"],[99,6,72,4],[99,7,72,5],[99,8,72,6],[100,6,73,4],[100,13,73,11],[100,19,73,17],[101,8,74,6],[101,14,74,12,"shouldRender"],[101,26,74,24],[101,29,74,27,"useIf"],[101,34,74,32],[101,38,74,36],[101,42,74,40],[101,46,74,44,"useIf"],[101,51,74,49],[101,52,74,50],[101,53,74,51],[102,8,75,6],[102,12,75,10],[102,13,75,11,"shouldRender"],[102,25,75,23],[102,27,75,25],[103,10,76,8],[103,17,76,15],[103,21,76,19],[104,8,77,6],[105,8,78,6],[105,15,78,13],[105,28,78,26],[105,32,78,26,"_jsx"],[105,48,78,30],[105,49,78,30,"jsx"],[105,52,78,30],[105,54,78,31,"Screen"],[105,60,78,37],[105,62,78,37,"Object"],[105,68,78,37],[105,69,78,37,"assign"],[105,75,78,37],[106,10,79,8,"name"],[106,14,79,12],[106,16,79,14,"name"],[107,8,79,18],[107,11,80,11,"props"],[107,16,80,16],[108,10,81,8,"children"],[108,18,81,16],[108,20,81,18,"children"],[108,21,81,18],[108,26,81,24,"element"],[109,8,81,31],[109,12,82,9,"name"],[109,16,82,13],[109,17,82,14],[110,6,83,4],[110,7,83,5],[111,4,84,2],[111,5,84,3],[111,6,84,4],[112,2,85,0],[112,3,85,1],[114,2,87,0],[115,0,88,0],[116,0,89,0],[117,0,90,0],[118,0,91,0],[119,0,92,0],[120,0,93,0],[121,2,94,7],[121,11,94,16,"createComponentForStaticNavigation"],[121,45,94,50,"createComponentForStaticNavigation"],[121,46,94,51,"tree"],[121,50,94,55],[121,52,94,57,"displayName"],[121,63,94,68],[121,65,94,70],[122,4,95,2],[122,10,95,8],[123,6,96,4,"Navigator"],[123,15,96,13],[124,6,97,4,"Group"],[124,11,97,9],[125,6,98,4,"Screen"],[125,12,98,10],[126,6,99,4,"config"],[127,4,100,2],[127,5,100,3],[127,8,100,6,"tree"],[127,12,100,10],[128,4,101,2],[128,10,101,8],[129,8,102,4,"screens"],[129,15,102,11],[130,8,103,4,"groups"],[131,6,105,2],[131,7,105,3],[131,10,105,6,"config"],[131,16,105,12],[132,6,104,7,"rest"],[132,10,104,11],[132,17,104,11,"_objectWithoutPropertiesLoose"],[132,46,104,11],[132,47,104,11,"default"],[132,54,104,11],[132,56,105,6,"config"],[132,62,105,12],[132,64,105,12,"_excluded2"],[132,74,105,12],[133,4,106,2],[133,8,106,6,"screens"],[133,15,106,13],[133,19,106,17],[133,23,106,21],[133,27,106,25,"groups"],[133,33,106,31],[133,37,106,35],[133,41,106,39],[133,43,106,41],[134,6,107,4],[134,12,107,10],[134,16,107,14,"Error"],[134,21,107,19],[134,22,107,20],[134,153,107,151],[134,154,107,152],[135,4,108,2],[136,4,109,2],[136,10,109,8,"items"],[136,15,109,13],[136,18,109,16],[136,20,109,18],[138,4,111,2],[139,4,112,2],[140,4,113,2],[140,9,113,7],[140,15,113,13,"key"],[140,18,113,16],[140,22,113,20,"config"],[140,28,113,26],[140,30,113,28],[141,6,114,4],[141,10,114,8,"key"],[141,13,114,11],[141,18,114,16],[141,27,114,25],[141,31,114,29,"screens"],[141,38,114,36],[141,40,114,38],[142,8,115,6,"items"],[142,13,115,11],[142,14,115,12,"push"],[142,18,115,16],[142,19,115,17],[142,22,115,20,"getItemsFromScreens"],[142,41,115,39],[142,42,115,40,"Screen"],[142,48,115,46],[142,50,115,48,"screens"],[142,57,115,55],[142,58,115,56],[142,59,115,57],[143,6,116,4],[144,6,117,4],[144,10,117,8,"key"],[144,13,117,11],[144,18,117,16],[144,26,117,24],[144,30,117,28,"groups"],[144,36,117,34],[144,38,117,36],[145,8,118,6,"items"],[145,13,118,11],[145,14,118,12,"push"],[145,18,118,16],[145,19,118,17],[145,22,118,20,"Object"],[145,28,118,26],[145,29,118,27,"entries"],[145,36,118,34],[145,37,118,35,"groups"],[145,43,118,41],[145,44,118,42],[145,45,118,43,"map"],[145,48,118,46],[145,49,118,47],[145,50,118,48],[145,51,118,49,"key"],[145,54,118,52],[145,56,118,52,"_ref"],[145,60,118,52],[145,61,121,8],[145,66,121,13],[146,10,121,13],[146,14,118,54],[147,14,119,8,"if"],[147,16,119,10],[147,18,119,12,"useIf"],[148,12,121,6],[148,13,121,7],[148,16,121,7,"_ref"],[148,20,121,7],[149,12,120,11,"group"],[149,17,120,16],[149,24,120,16,"_objectWithoutPropertiesLoose"],[149,53,120,16],[149,54,120,16,"default"],[149,61,120,16],[149,63,120,16,"_ref"],[149,67,120,16],[149,69,120,16,"_excluded3"],[149,79,120,16],[150,10,122,8],[150,16,122,14,"groupItems"],[150,26,122,24],[150,29,122,27,"getItemsFromScreens"],[150,48,122,46],[150,49,122,47,"Screen"],[150,55,122,53],[150,57,122,55,"group"],[150,62,122,60],[150,63,122,61,"screens"],[150,70,122,68],[150,71,122,69],[151,10,123,8],[151,17,123,15],[151,23,123,21],[152,12,124,10],[153,12,125,10],[153,18,125,16,"children"],[153,26,125,24],[153,29,125,27,"groupItems"],[153,39,125,37],[153,40,125,38,"map"],[153,43,125,41],[153,44,125,42,"item"],[153,48,125,46],[153,52,125,50,"item"],[153,56,125,54],[153,57,125,55],[153,58,125,56],[153,59,125,57],[154,12,126,10],[154,18,126,16,"shouldRender"],[154,30,126,28],[154,33,126,31,"useIf"],[154,38,126,36],[154,42,126,40],[154,46,126,44],[154,50,126,48,"useIf"],[154,55,126,53],[154,56,126,54],[154,57,126,55],[155,12,127,10],[155,16,127,14],[155,17,127,15,"shouldRender"],[155,29,127,27],[155,31,127,29],[156,14,128,12],[156,21,128,19],[156,25,128,23],[157,12,129,10],[158,12,130,10],[158,19,130,17],[158,32,130,30],[158,36,130,30,"_jsx"],[158,52,130,34],[158,53,130,34,"jsx"],[158,56,130,34],[158,58,130,35,"Group"],[158,63,130,40],[158,65,130,40,"Object"],[158,71,130,40],[158,72,130,40,"assign"],[158,78,130,40],[159,14,131,12,"navigationKey"],[159,27,131,25],[159,29,131,27,"key"],[160,12,131,30],[160,15,132,15,"group"],[160,20,132,20],[161,14,133,12,"children"],[161,22,133,20],[161,24,133,22,"children"],[162,12,133,30],[162,16,134,13,"key"],[162,19,134,16],[162,20,134,17],[163,10,135,8],[163,11,135,9],[164,8,136,6],[164,9,136,7],[164,10,136,8],[164,11,136,9],[165,6,137,4],[166,4,138,2],[167,4,139,2],[167,10,139,8,"NavigatorComponent"],[167,28,139,26],[167,31,139,29,"NavigatorComponent"],[167,32,139,29],[167,37,139,35],[168,6,140,4],[168,12,140,10,"children"],[168,20,140,18],[168,23,140,21,"items"],[168,28,140,26],[168,29,140,27,"map"],[168,32,140,30],[168,33,140,31,"item"],[168,37,140,35],[168,41,140,39,"item"],[168,45,140,43],[168,46,140,44],[168,47,140,45],[168,48,140,46],[169,6,141,4],[169,13,141,11],[169,26,141,24],[169,30,141,24,"_jsx"],[169,46,141,28],[169,47,141,28,"jsx"],[169,50,141,28],[169,52,141,29,"Navigator"],[169,61,141,38],[169,63,141,38,"Object"],[169,69,141,38],[169,70,141,38,"assign"],[169,76,141,38],[169,81,142,9,"rest"],[169,85,142,13],[170,8,143,6,"children"],[170,16,143,14],[170,18,143,16,"children"],[171,6,143,24],[171,8,144,5],[171,9,144,6],[172,4,145,2],[172,5,145,3],[173,4,146,2,"NavigatorComponent"],[173,22,146,20],[173,23,146,21,"displayName"],[173,34,146,32],[173,37,146,35,"displayName"],[173,48,146,46],[174,4,147,2],[174,11,147,9,"NavigatorComponent"],[174,29,147,27],[175,2,148,0],[176,2,149,0],[177,0,150,0],[178,0,151,0],[179,0,152,0],[180,0,153,0],[181,0,154,0],[182,0,155,0],[183,0,156,0],[184,0,157,0],[185,0,158,0],[186,0,159,0],[187,0,160,0],[188,0,161,0],[189,0,162,0],[190,0,163,0],[191,0,164,0],[192,0,165,0],[193,0,166,0],[194,0,167,0],[195,2,168,7],[195,11,168,16,"createPathConfigForStaticNavigation"],[195,46,168,51,"createPathConfigForStaticNavigation"],[195,47,168,52,"tree"],[195,51,168,56],[195,53,168,58,"options"],[195,60,168,65],[195,62,168,67,"auto"],[195,66,168,71],[195,68,168,73],[196,4,169,2],[196,8,169,6,"initialScreenHasPath"],[196,28,169,26],[196,31,169,29],[196,36,169,34],[197,4,170,2],[197,8,170,6,"initialScreenConfig"],[197,27,170,25],[198,4,171,2],[198,10,171,8,"createPathConfigForTree"],[198,33,171,31],[198,36,171,34,"createPathConfigForTree"],[198,37,171,35,"t"],[198,38,171,36],[198,40,171,38,"o"],[198,41,171,39],[198,43,171,41,"skipInitialDetection"],[198,63,171,61],[198,68,171,66],[199,6,172,4],[199,12,172,10,"createPathConfigForScreens"],[199,38,172,36],[199,41,172,39,"createPathConfigForScreens"],[199,42,172,40,"screens"],[199,49,172,47],[199,51,172,49,"initialRouteName"],[199,67,172,65],[199,72,172,70],[200,8,173,6],[200,15,173,13,"Object"],[200,21,173,19],[200,22,173,20,"fromEntries"],[200,33,173,31],[200,34,173,32,"Object"],[200,40,173,38],[200,41,173,39,"entries"],[200,48,173,46],[200,49,173,47,"screens"],[200,56,173,54],[201,8,174,6],[202,8,175,6],[203,8,175,6],[203,9,176,7,"sort"],[203,13,176,11],[203,14,176,12],[203,15,176,13],[203,16,176,14,"a"],[203,17,176,15],[203,18,176,16],[203,20,176,18],[203,21,176,19,"b"],[203,22,176,20],[203,23,176,21],[203,28,176,26],[204,10,177,8],[204,14,177,12,"a"],[204,15,177,13],[204,20,177,18,"initialRouteName"],[204,36,177,34],[204,38,177,36],[205,12,178,10],[205,19,178,17],[205,20,178,18],[205,21,178,19],[206,10,179,8],[207,10,180,8],[207,14,180,12,"b"],[207,15,180,13],[207,20,180,18,"initialRouteName"],[207,36,180,34],[207,38,180,36],[208,12,181,10],[208,19,181,17],[208,20,181,18],[209,10,182,8],[210,10,183,8],[210,17,183,15],[210,18,183,16],[211,8,184,6],[211,9,184,7],[211,10,184,8],[211,11,184,9,"map"],[211,14,184,12],[211,15,184,13],[211,16,184,14],[211,17,184,15,"key"],[211,20,184,18],[211,22,184,20,"item"],[211,26,184,24],[211,27,184,25],[211,32,184,30],[212,10,185,8],[212,16,185,14,"screenConfig"],[212,28,185,26],[212,31,185,29],[212,32,185,30],[212,33,185,31],[213,10,186,8],[213,14,186,12],[213,23,186,21],[213,27,186,25,"item"],[213,31,186,29],[213,33,186,31],[214,12,187,10],[214,16,187,14],[214,23,187,21,"item"],[214,27,187,25],[214,28,187,26,"linking"],[214,35,187,33],[214,40,187,38],[214,48,187,46],[214,50,187,48],[215,14,188,12,"screenConfig"],[215,26,188,24],[215,27,188,25,"path"],[215,31,188,29],[215,34,188,32,"item"],[215,38,188,36],[215,39,188,37,"linking"],[215,46,188,44],[216,12,189,10],[216,13,189,11],[216,19,189,17],[217,14,190,12,"Object"],[217,20,190,18],[217,21,190,19,"assign"],[217,27,190,25],[217,28,190,26,"screenConfig"],[217,40,190,38],[217,42,190,40,"item"],[217,46,190,44],[217,47,190,45,"linking"],[217,54,190,52],[217,55,190,53],[218,12,191,10],[219,12,192,10],[219,16,192,14],[219,23,192,21,"screenConfig"],[219,35,192,33],[219,36,192,34,"path"],[219,40,192,38],[219,45,192,43],[219,53,192,51],[219,55,192,53],[220,14,193,12,"screenConfig"],[220,26,193,24],[220,27,193,25,"path"],[220,31,193,29],[220,34,193,32,"screenConfig"],[220,46,193,44],[220,47,193,45,"path"],[220,51,193,49],[220,52,193,50,"replace"],[220,59,193,57],[220,60,193,58],[220,65,193,63],[220,67,193,65],[220,69,193,67],[220,70,193,68],[220,71,193,69],[221,14,193,69],[221,15,194,13,"replace"],[221,22,194,20],[221,23,194,21],[221,28,194,26],[221,30,194,28],[221,32,194,30],[221,33,194,31],[221,34,194,32],[221,35,194,33],[222,12,195,10],[223,10,196,8],[224,10,197,8],[224,14,197,12,"screens"],[224,21,197,19],[225,10,198,8],[225,16,198,14,"skipInitialDetectionInChild"],[225,43,198,41],[225,46,198,44,"skipInitialDetection"],[225,66,198,64],[225,70,198,68,"screenConfig"],[225,82,198,80],[225,83,198,81,"path"],[225,87,198,85],[225,91,198,89],[225,95,198,93],[225,99,198,97,"screenConfig"],[225,111,198,109],[225,112,198,110,"path"],[225,116,198,114],[225,121,198,119],[225,123,198,121],[226,10,199,8],[226,14,199,12],[226,22,199,20],[226,26,199,24,"item"],[226,30,199,28],[226,32,199,30],[227,12,200,10,"screens"],[227,19,200,17],[227,22,200,20,"createPathConfigForTree"],[227,45,200,43],[227,46,200,44,"item"],[227,50,200,48],[227,52,200,50,"undefined"],[227,61,200,59],[227,63,200,61,"skipInitialDetectionInChild"],[227,90,200,88],[227,91,200,89],[228,10,201,8],[228,11,201,9],[228,17,201,15],[228,21,201,19],[228,29,201,27],[228,33,201,31,"item"],[228,37,201,35],[228,41,201,39],[228,49,201,47],[228,53,201,51,"item"],[228,57,201,55],[228,58,201,56,"screen"],[228,64,201,62],[228,69,201,67,"item"],[228,73,201,71],[228,74,201,72,"screen"],[228,80,201,78],[228,81,201,79,"config"],[228,87,201,85],[228,88,201,86,"screens"],[228,95,201,93],[228,99,201,97,"item"],[228,103,201,101],[228,104,201,102,"screen"],[228,110,201,108],[228,111,201,109,"config"],[228,117,201,115],[228,118,201,116,"groups"],[228,124,201,122],[228,125,201,123],[228,127,201,125],[229,12,202,10,"screens"],[229,19,202,17],[229,22,202,20,"createPathConfigForTree"],[229,45,202,43],[229,46,202,44,"item"],[229,50,202,48],[229,51,202,49,"screen"],[229,57,202,55],[229,59,202,57,"undefined"],[229,68,202,66],[229,70,202,68,"skipInitialDetectionInChild"],[229,97,202,95],[229,98,202,96],[230,10,203,8],[231,10,204,8],[231,14,204,12,"screens"],[231,21,204,19],[231,23,204,21],[232,12,205,10,"screenConfig"],[232,24,205,22],[232,25,205,23,"screens"],[232,32,205,30],[232,35,205,33,"screens"],[232,42,205,40],[233,10,206,8],[234,10,207,8],[234,14,207,12,"auto"],[234,18,207,16],[234,22,207,20],[234,23,207,21,"screenConfig"],[234,35,207,33],[234,36,207,34,"screens"],[234,43,207,41],[235,10,208,8],[236,10,209,8],[236,12,209,10],[236,21,209,19],[236,25,209,23,"item"],[236,29,209,27],[236,33,209,31,"item"],[236,37,209,35],[236,38,209,36,"linking"],[236,45,209,43],[236,49,209,47],[236,53,209,51],[236,54,209,52],[236,56,209,54],[237,12,210,10],[237,16,210,14,"screenConfig"],[237,28,210,26],[237,29,210,27,"path"],[237,33,210,31],[237,37,210,35],[237,41,210,39],[237,43,210,41],[238,14,211,12],[238,18,211,16],[238,19,211,17,"skipInitialDetection"],[238,39,211,37],[238,41,211,39],[239,16,212,14],[239,20,212,18,"key"],[239,23,212,21],[239,28,212,26,"initialRouteName"],[239,44,212,42],[239,48,212,46,"screenConfig"],[239,60,212,58],[239,61,212,59,"path"],[239,65,212,63],[239,69,212,67],[239,73,212,71],[239,75,212,73],[240,18,213,16,"initialScreenHasPath"],[240,38,213,36],[240,41,213,39],[240,45,213,43],[241,16,214,14],[241,17,214,15],[241,23,214,21],[241,27,214,25,"screenConfig"],[241,39,214,37],[241,40,214,38,"path"],[241,44,214,42],[241,49,214,47],[241,51,214,49],[241,53,214,51],[242,18,215,16],[243,18,216,16],[244,18,217,16,"initialScreenConfig"],[244,37,217,35],[244,40,217,38,"undefined"],[244,49,217,47],[245,16,218,14],[246,14,219,12],[247,12,220,10],[247,13,220,11],[247,19,220,17],[248,14,221,12],[248,18,221,16],[248,19,221,17,"skipInitialDetection"],[248,39,221,37],[248,43,221,41,"initialScreenConfig"],[248,62,221,60],[248,66,221,64],[248,70,221,68],[248,72,221,70],[249,16,222,14,"initialScreenConfig"],[249,35,222,33],[249,38,222,36,"screenConfig"],[249,50,222,48],[250,14,223,12],[251,14,224,12,"screenConfig"],[251,26,224,24],[251,27,224,25,"path"],[251,31,224,29],[251,34,224,32,"key"],[251,37,224,35],[251,38,224,36,"replace"],[251,45,224,43],[251,46,224,44],[251,57,224,55],[251,59,224,57],[251,64,224,62],[251,65,224,63],[251,66,224,64,"replace"],[251,73,224,71],[251,74,224,72],[251,78,224,76],[251,80,224,78],[251,82,224,80],[251,83,224,81],[251,84,224,82,"toLowerCase"],[251,95,224,93],[251,96,224,94],[251,97,224,95],[252,12,225,10],[253,10,226,8],[254,10,227,8],[254,17,227,15],[254,18,227,16,"key"],[254,21,227,19],[254,23,227,21,"screenConfig"],[254,35,227,33],[254,36,227,34],[255,8,228,6],[255,9,228,7],[255,10,228,8],[255,11,228,9,"filter"],[255,17,228,15],[255,18,228,16],[255,19,228,17],[255,22,228,20,"screen"],[255,28,228,26],[255,29,228,27],[255,34,228,32,"Object"],[255,40,228,38],[255,41,228,39,"keys"],[255,45,228,43],[255,46,228,44,"screen"],[255,52,228,50],[255,53,228,51],[255,54,228,52,"length"],[255,60,228,58],[255,63,228,61],[255,64,228,62],[255,65,228,63],[255,66,228,64],[256,6,229,4],[256,7,229,5],[257,6,230,4],[257,12,230,10,"screens"],[257,19,230,17],[257,22,230,20],[257,23,230,21],[257,24,230,22],[259,6,232,4],[260,6,233,4],[261,6,234,4],[261,11,234,9],[261,17,234,15,"key"],[261,20,234,18],[261,24,234,22,"t"],[261,25,234,23],[261,26,234,24,"config"],[261,32,234,30],[261,34,234,32],[262,8,235,6],[262,12,235,10,"key"],[262,15,235,13],[262,20,235,18],[262,29,235,27],[262,33,235,31,"t"],[262,34,235,32],[262,35,235,33,"config"],[262,41,235,39],[262,42,235,40,"screens"],[262,49,235,47],[262,51,235,49],[263,10,236,8,"Object"],[263,16,236,14],[263,17,236,15,"assign"],[263,23,236,21],[263,24,236,22,"screens"],[263,31,236,29],[263,33,236,31,"createPathConfigForScreens"],[263,59,236,57],[263,60,236,58,"t"],[263,61,236,59],[263,62,236,60,"config"],[263,68,236,66],[263,69,236,67,"screens"],[263,76,236,74],[263,78,236,76,"o"],[263,79,236,77],[263,81,236,79,"initialRouteName"],[263,97,236,95],[263,101,236,99,"t"],[263,102,236,100],[263,103,236,101,"config"],[263,109,236,107],[263,110,236,108,"initialRouteName"],[263,126,236,124],[263,127,236,125],[263,128,236,126],[264,8,237,6],[265,8,238,6],[265,12,238,10,"key"],[265,15,238,13],[265,20,238,18],[265,28,238,26],[265,32,238,30,"t"],[265,33,238,31],[265,34,238,32,"config"],[265,40,238,38],[265,41,238,39,"groups"],[265,47,238,45],[265,49,238,47],[266,10,239,8,"Object"],[266,16,239,14],[266,17,239,15,"entries"],[266,24,239,22],[266,25,239,23,"t"],[266,26,239,24],[266,27,239,25,"config"],[266,33,239,31],[266,34,239,32,"groups"],[266,40,239,38],[266,41,239,39],[266,42,239,40,"forEach"],[266,49,239,47],[266,50,239,48],[266,51,239,49],[266,54,239,52,"group"],[266,59,239,57],[266,60,239,58],[266,65,239,63],[267,12,240,10,"Object"],[267,18,240,16],[267,19,240,17,"assign"],[267,25,240,23],[267,26,240,24,"screens"],[267,33,240,31],[267,35,240,33,"createPathConfigForScreens"],[267,61,240,59],[267,62,240,60,"group"],[267,67,240,65],[267,68,240,66,"screens"],[267,75,240,73],[267,77,240,75,"o"],[267,78,240,76],[267,80,240,78,"initialRouteName"],[267,96,240,94],[267,100,240,98,"t"],[267,101,240,99],[267,102,240,100,"config"],[267,108,240,106],[267,109,240,107,"initialRouteName"],[267,125,240,123],[267,126,240,124],[267,127,240,125],[268,10,241,8],[268,11,241,9],[268,12,241,10],[269,8,242,6],[270,6,243,4],[271,6,244,4],[271,10,244,8,"Object"],[271,16,244,14],[271,17,244,15,"keys"],[271,21,244,19],[271,22,244,20,"screens"],[271,29,244,27],[271,30,244,28],[271,31,244,29,"length"],[271,37,244,35],[271,42,244,40],[271,43,244,41],[271,45,244,43],[272,8,245,6],[272,15,245,13,"undefined"],[272,24,245,22],[273,6,246,4],[274,6,247,4],[274,13,247,11,"screens"],[274,20,247,18],[275,4,248,2],[275,5,248,3],[276,4,249,2],[276,10,249,8,"screens"],[276,17,249,15],[276,20,249,18,"createPathConfigForTree"],[276,43,249,41],[276,44,249,42,"tree"],[276,48,249,46],[276,50,249,48,"options"],[276,57,249,55],[276,59,249,57],[276,64,249,62],[276,65,249,63],[277,4,250,2],[277,8,250,6,"auto"],[277,12,250,10],[277,16,250,14,"initialScreenConfig"],[277,35,250,33],[277,39,250,37],[277,40,250,38,"initialScreenHasPath"],[277,60,250,58],[277,62,250,60],[278,6,251,4,"initialScreenConfig"],[278,25,251,23],[278,26,251,24,"path"],[278,30,251,28],[278,33,251,31],[278,35,251,33],[279,4,252,2],[280,4,253,2],[280,11,253,9,"screens"],[280,18,253,16],[281,2,254,0],[282,0,254,1],[282,3]],"functionMap":{"names":["<global>","React.memo$argument_0","getItemsFromScreens","Object.entries.map$argument_0","<anonymous>","_jsx$argument_1.children","createComponentForStaticNavigation","groupItems.map$argument_0","NavigatorComponent","items.map$argument_0","createPathConfigForStaticNavigation","createPathConfigForTree","createPathConfigForScreens","Object.entries.sort$argument_0","Object.entries.sort.map$argument_0","Object.entries.sort.map.filter$argument_0","Object.entries.forEach$argument_0"],"mappings":"AAA;+CC8B;CDQ;4BEE;qCCC;WC+B;kBCQ,aD;KDE;GDC;CFC;OMS;+CHwB;eCK;0CGE,cH;SDU;OGC;6BEG;+BCC,cD;GFK;CNG;OUoB;kCCG;uCCC;YCI;ODQ,ME;OF4C,SG,8CH;KDC;gDKU;SLE;GDO;CVM"},"hasCjsExports":false},"type":"js/module"}]}