{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./ExpoLocation","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":46},"end":{"line":2,"column":42,"index":88}}],"key":"n9eQB3huKj/lRnIsgaXRKPJKjaY=","exportNames":["*"],"imports":1}},{"name":"./Location.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":89},"end":{"line":3,"column":52,"index":141}}],"key":"QoIrjHWCWA2K0AZhEI/d0eITBhA=","exportNames":["*"],"imports":1}},{"name":"./LocationSubscribers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":142},"end":{"line":4,"column":59,"index":201}}],"key":"ECD2ecHoQ4d6PxMbJzhCjCmKfZg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.installWebGeolocationPolyfill = installWebGeolocationPolyfill;\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  var _ExpoLocation = require(_dependencyMap[1], \"./ExpoLocation\");\n  var ExpoLocation = _interopDefault(_ExpoLocation);\n  var _LocationTypes = require(_dependencyMap[2], \"./Location.types\");\n  var _LocationSubscribers = require(_dependencyMap[3], \"./LocationSubscribers\");\n  // @needsAudit\n  /**\n   * Polyfills `navigator.geolocation` for interop with the core React Native and Web API approach to geolocation.\n   */\n  function installWebGeolocationPolyfill() {\n    if (_expoModulesCore.Platform.OS !== 'web') {\n      // Make sure `window.navigator` is defined in the global scope.\n      if (!('window' in global)) {\n        global.window = global;\n      }\n      if (!('navigator' in global.window)) {\n        global.window.navigator = {};\n      }\n      // @ts-ignore\n      window.navigator.geolocation = {\n        getCurrentPosition,\n        watchPosition,\n        clearWatch\n      };\n    }\n  }\n  function convertGeolocationOptions(options) {\n    return {\n      accuracy: options.enableHighAccuracy ? _LocationTypes.LocationAccuracy.High : _LocationTypes.LocationAccuracy.Balanced\n    };\n  }\n  function getCurrentPosition(success, error = () => {}, options = {}) {\n    _getCurrentPositionAsyncWrapper(success, error, options);\n  }\n  // This function exists to let us continue to return undefined from getCurrentPosition, while still\n  // using async/await for the internal implementation of it\n  async function _getCurrentPositionAsyncWrapper(success, error, options) {\n    try {\n      await ExpoLocation.default.requestPermissionsAsync();\n      const result = await ExpoLocation.default.getCurrentPositionAsync(convertGeolocationOptions(options));\n      success(result);\n    } catch (e) {\n      error(e);\n    }\n  }\n  // Polyfill: navigator.geolocation.watchPosition\n  function watchPosition(success, error, options) {\n    const watchId = _LocationSubscribers.LocationSubscriber.registerCallback(success);\n    ExpoLocation.default.watchPositionImplAsync(watchId, options).catch(err => {\n      _LocationSubscribers.LocationSubscriber.unregisterCallback(watchId);\n      error({\n        watchId,\n        message: err.message,\n        code: err.code\n      });\n    });\n    return watchId;\n  }\n  // Polyfill: navigator.geolocation.clearWatch\n  function clearWatch(watchId) {\n    _LocationSubscribers.LocationSubscriber.unregisterCallback(watchId);\n  }\n});","lineCount":75,"map":[[12,2,9,0,"exports"],[12,9,9,0],[12,10,9,0,"installWebGeolocationPolyfill"],[12,39,9,0],[12,42,9,0,"installWebGeolocationPolyfill"],[12,71,9,0],[13,2,1,0],[13,6,1,0,"_expoModulesCore"],[13,22,1,0],[13,25,1,0,"require"],[13,32,1,0],[13,33,1,0,"_dependencyMap"],[13,47,1,0],[14,2,2,0],[14,6,2,0,"_ExpoLocation"],[14,19,2,0],[14,22,2,0,"require"],[14,29,2,0],[14,30,2,0,"_dependencyMap"],[14,44,2,0],[15,2,2,0],[15,6,2,0,"ExpoLocation"],[15,18,2,0],[15,21,2,0,"_interopDefault"],[15,36,2,0],[15,37,2,0,"_ExpoLocation"],[15,50,2,0],[16,2,3,0],[16,6,3,0,"_LocationTypes"],[16,20,3,0],[16,23,3,0,"require"],[16,30,3,0],[16,31,3,0,"_dependencyMap"],[16,45,3,0],[17,2,4,0],[17,6,4,0,"_LocationSubscribers"],[17,26,4,0],[17,29,4,0,"require"],[17,36,4,0],[17,37,4,0,"_dependencyMap"],[17,51,4,0],[18,2,5,0],[19,2,6,0],[20,0,7,0],[21,0,8,0],[22,2,9,7],[22,11,9,16,"installWebGeolocationPolyfill"],[22,40,9,45,"installWebGeolocationPolyfill"],[22,41,9,45],[22,43,9,48],[23,4,10,4],[23,8,10,8,"Platform"],[23,24,10,16],[23,25,10,16,"Platform"],[23,33,10,16],[23,34,10,17,"OS"],[23,36,10,19],[23,41,10,24],[23,46,10,29],[23,48,10,31],[24,6,11,8],[25,6,12,8],[25,10,12,12],[25,12,12,14],[25,20,12,22],[25,24,12,26,"global"],[25,30,12,32],[25,31,12,33],[25,33,12,35],[26,8,13,12,"global"],[26,14,13,18],[26,15,13,19,"window"],[26,21,13,25],[26,24,13,28,"global"],[26,30,13,34],[27,6,14,8],[28,6,15,8],[28,10,15,12],[28,12,15,14],[28,23,15,25],[28,27,15,29,"global"],[28,33,15,35],[28,34,15,36,"window"],[28,40,15,42],[28,41,15,43],[28,43,15,45],[29,8,16,12,"global"],[29,14,16,18],[29,15,16,19,"window"],[29,21,16,25],[29,22,16,26,"navigator"],[29,31,16,35],[29,34,16,38],[29,35,16,39],[29,36,16,40],[30,6,17,8],[31,6,18,8],[32,6,19,8,"window"],[32,12,19,14],[32,13,19,15,"navigator"],[32,22,19,24],[32,23,19,25,"geolocation"],[32,34,19,36],[32,37,19,39],[33,8,20,12,"getCurrentPosition"],[33,26,20,30],[34,8,21,12,"watchPosition"],[34,21,21,25],[35,8,22,12,"clearWatch"],[36,6,23,8],[36,7,23,9],[37,4,24,4],[38,2,25,0],[39,2,26,0],[39,11,26,9,"convertGeolocationOptions"],[39,36,26,34,"convertGeolocationOptions"],[39,37,26,35,"options"],[39,44,26,42],[39,46,26,44],[40,4,27,4],[40,11,27,11],[41,6,28,8,"accuracy"],[41,14,28,16],[41,16,28,18,"options"],[41,23,28,25],[41,24,28,26,"enableHighAccuracy"],[41,42,28,44],[41,45,28,47,"LocationAccuracy"],[41,59,28,63],[41,60,28,63,"LocationAccuracy"],[41,76,28,63],[41,77,28,64,"High"],[41,81,28,68],[41,84,28,71,"LocationAccuracy"],[41,98,28,87],[41,99,28,87,"LocationAccuracy"],[41,115,28,87],[41,116,28,88,"Balanced"],[42,4,29,4],[42,5,29,5],[43,2,30,0],[44,2,31,0],[44,11,31,9,"getCurrentPosition"],[44,29,31,27,"getCurrentPosition"],[44,30,31,28,"success"],[44,37,31,35],[44,39,31,37,"error"],[44,44,31,42],[44,47,31,45,"error"],[44,48,31,45],[44,53,31,51],[44,54,31,53],[44,55,31,54],[44,57,31,56,"options"],[44,64,31,63],[44,67,31,66],[44,68,31,67],[44,69,31,68],[44,71,31,70],[45,4,32,4,"_getCurrentPositionAsyncWrapper"],[45,35,32,35],[45,36,32,36,"success"],[45,43,32,43],[45,45,32,45,"error"],[45,50,32,50],[45,52,32,52,"options"],[45,59,32,59],[45,60,32,60],[46,2,33,0],[47,2,34,0],[48,2,35,0],[49,2,36,0],[49,17,36,15,"_getCurrentPositionAsyncWrapper"],[49,48,36,46,"_getCurrentPositionAsyncWrapper"],[49,49,36,47,"success"],[49,56,36,54],[49,58,36,56,"error"],[49,63,36,61],[49,65,36,63,"options"],[49,72,36,70],[49,74,36,72],[50,4,37,4],[50,8,37,8],[51,6,38,8],[51,12,38,14,"ExpoLocation"],[51,24,38,26],[51,25,38,26,"default"],[51,32,38,26],[51,33,38,27,"requestPermissionsAsync"],[51,56,38,50],[51,57,38,51],[51,58,38,52],[52,6,39,8],[52,12,39,14,"result"],[52,18,39,20],[52,21,39,23],[52,27,39,29,"ExpoLocation"],[52,39,39,41],[52,40,39,41,"default"],[52,47,39,41],[52,48,39,42,"getCurrentPositionAsync"],[52,71,39,65],[52,72,39,66,"convertGeolocationOptions"],[52,97,39,91],[52,98,39,92,"options"],[52,105,39,99],[52,106,39,100],[52,107,39,101],[53,6,40,8,"success"],[53,13,40,15],[53,14,40,16,"result"],[53,20,40,22],[53,21,40,23],[54,4,41,4],[54,5,41,5],[54,6,42,4],[54,13,42,11,"e"],[54,14,42,12],[54,16,42,14],[55,6,43,8,"error"],[55,11,43,13],[55,12,43,14,"e"],[55,13,43,15],[55,14,43,16],[56,4,44,4],[57,2,45,0],[58,2,46,0],[59,2,47,0],[59,11,47,9,"watchPosition"],[59,24,47,22,"watchPosition"],[59,25,47,23,"success"],[59,32,47,30],[59,34,47,32,"error"],[59,39,47,37],[59,41,47,39,"options"],[59,48,47,46],[59,50,47,48],[60,4,48,4],[60,10,48,10,"watchId"],[60,17,48,17],[60,20,48,20,"LocationSubscriber"],[60,40,48,38],[60,41,48,38,"LocationSubscriber"],[60,59,48,38],[60,60,48,39,"registerCallback"],[60,76,48,55],[60,77,48,56,"success"],[60,84,48,63],[60,85,48,64],[61,4,49,4,"ExpoLocation"],[61,16,49,16],[61,17,49,16,"default"],[61,24,49,16],[61,25,49,17,"watchPositionImplAsync"],[61,47,49,39],[61,48,49,40,"watchId"],[61,55,49,47],[61,57,49,49,"options"],[61,64,49,56],[61,65,49,57],[61,66,49,58,"catch"],[61,71,49,63],[61,72,49,65,"err"],[61,75,49,68],[61,79,49,73],[62,6,50,8,"LocationSubscriber"],[62,26,50,26],[62,27,50,26,"LocationSubscriber"],[62,45,50,26],[62,46,50,27,"unregisterCallback"],[62,64,50,45],[62,65,50,46,"watchId"],[62,72,50,53],[62,73,50,54],[63,6,51,8,"error"],[63,11,51,13],[63,12,51,14],[64,8,51,16,"watchId"],[64,15,51,23],[65,8,51,25,"message"],[65,15,51,32],[65,17,51,34,"err"],[65,20,51,37],[65,21,51,38,"message"],[65,28,51,45],[66,8,51,47,"code"],[66,12,51,51],[66,14,51,53,"err"],[66,17,51,56],[66,18,51,57,"code"],[67,6,51,62],[67,7,51,63],[67,8,51,64],[68,4,52,4],[68,5,52,5],[68,6,52,6],[69,4,53,4],[69,11,53,11,"watchId"],[69,18,53,18],[70,2,54,0],[71,2,55,0],[72,2,56,0],[72,11,56,9,"clearWatch"],[72,21,56,19,"clearWatch"],[72,22,56,20,"watchId"],[72,29,56,27],[72,31,56,29],[73,4,57,4,"LocationSubscriber"],[73,24,57,22],[73,25,57,22,"LocationSubscriber"],[73,43,57,22],[73,44,57,23,"unregisterCallback"],[73,62,57,41],[73,63,57,42,"watchId"],[73,70,57,49],[73,71,57,50],[74,2,58,0],[75,0,58,1],[75,3]],"functionMap":{"names":["<global>","installWebGeolocationPolyfill","convertGeolocationOptions","getCurrentPosition","<anonymous>","_getCurrentPositionAsyncWrapper","watchPosition","ExpoLocation.watchPositionImplAsync._catch$argument_0","clearWatch"],"mappings":"AAA;OCQ;CDgB;AEC;CFI;AGC,6CC,SD;CHE;AKG;CLS;AME;gECE;KDG;CNE;AQE;CRE"},"hasCjsExports":false},"type":"js/module"}]}