{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":63,"index":63}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./ImagePicker.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":64},"end":{"line":2,"column":50,"index":114}}],"key":"/jNv85Cqy9zQGnbpL3adxFcCtH4=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":115},"end":{"line":3,"column":42,"index":157}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  var _ImagePickerTypes = require(_dependencyMap[1], \"./ImagePicker.types\");\n  var _utils = require(_dependencyMap[2], \"./utils\");\n  const MediaTypeInput = {\n    images: 'image/*',\n    videos: 'video/mp4,video/quicktime,video/x-m4v,video/*',\n    livePhotos: ''\n  };\n  var _default = {\n    async launchImageLibraryAsync({\n      mediaTypes = ['images'],\n      allowsMultipleSelection = false,\n      base64 = false\n    }) {\n      // SSR guard\n      if (!_expoModulesCore.Platform.isDOMAvailable) {\n        return {\n          canceled: true,\n          assets: null\n        };\n      }\n      return await openFileBrowserAsync({\n        mediaTypes,\n        allowsMultipleSelection,\n        base64\n      });\n    },\n    async launchCameraAsync({\n      mediaTypes = ['images'],\n      allowsMultipleSelection = false,\n      base64 = false,\n      cameraType\n    }) {\n      // SSR guard\n      if (!_expoModulesCore.Platform.isDOMAvailable) {\n        return {\n          canceled: true,\n          assets: null\n        };\n      }\n      return await openFileBrowserAsync({\n        mediaTypes,\n        allowsMultipleSelection,\n        capture: cameraType ?? true,\n        base64\n      });\n    },\n    /*\n     * Delegate to expo-permissions to request camera permissions\n     */\n    async getCameraPermissionsAsync() {\n      return permissionGrantedResponse();\n    },\n    async requestCameraPermissionsAsync() {\n      return permissionGrantedResponse();\n    },\n    /*\n     * Camera roll permissions don't need to be requested on web, so we always\n     * respond with granted.\n     */\n    async getMediaLibraryPermissionsAsync(_writeOnly) {\n      return permissionGrantedResponse();\n    },\n    async requestMediaLibraryPermissionsAsync(_writeOnly) {\n      return permissionGrantedResponse();\n    }\n  };\n  function permissionGrantedResponse() {\n    return {\n      status: _expoModulesCore.PermissionStatus.GRANTED,\n      expires: 'never',\n      granted: true,\n      canAskAgain: true\n    };\n  }\n  /**\n   * Opens a file browser dialog or camera on supported platforms and returns the selected files.\n   * Handles both single and multiple file selection.\n   */\n  function openFileBrowserAsync({\n    mediaTypes,\n    capture = false,\n    allowsMultipleSelection = false,\n    base64\n  }) {\n    const parsedMediaTypes = (0, _utils.parseMediaTypes)(mediaTypes);\n    const mediaTypeFormat = createMediaTypeFormat(parsedMediaTypes);\n    const input = document.createElement('input');\n    input.style.display = 'none';\n    input.setAttribute('type', 'file');\n    input.setAttribute('accept', mediaTypeFormat);\n    input.setAttribute('id', String(Math.random()));\n    input.setAttribute('data-testid', 'file-input');\n    if (allowsMultipleSelection) {\n      input.setAttribute('multiple', 'multiple');\n    }\n    if (capture) {\n      switch (capture) {\n        case true:\n          input.setAttribute('capture', 'camera');\n          break;\n        case _ImagePickerTypes.CameraType.front:\n          input.setAttribute('capture', 'user');\n          break;\n        case _ImagePickerTypes.CameraType.back:\n          input.setAttribute('capture', 'environment');\n      }\n    }\n    document.body.appendChild(input);\n    return new Promise(resolve => {\n      input.addEventListener('change', async () => {\n        if (input.files?.length) {\n          const files = allowsMultipleSelection ? input.files : [input.files[0]];\n          const assets = await Promise.all(Array.from(files).map(file => readFile(file, {\n            base64\n          })));\n          resolve({\n            canceled: false,\n            assets\n          });\n        } else {\n          resolve({\n            canceled: true,\n            assets: null\n          });\n        }\n        document.body.removeChild(input);\n      });\n      input.addEventListener('cancel', () => {\n        input.dispatchEvent(new Event('change'));\n      });\n      const event = new MouseEvent('click');\n      input.dispatchEvent(event);\n    });\n  }\n  /**\n   * Gets metadata for an image file using a blob URL\n   * TODO (Hirbod): add exif support for feature parity with native\n   */\n  async function getImageMetadata(blobUrl) {\n    return new Promise(resolve => {\n      const image = new Image();\n      image.onload = () => {\n        resolve({\n          width: image.naturalWidth ?? image.width,\n          height: image.naturalHeight ?? image.height\n        });\n      };\n      image.onerror = () => resolve({\n        width: 0,\n        height: 0\n      });\n      image.src = blobUrl;\n    });\n  }\n  /**\n   * Gets metadata for a video file using a blob URL\n   */\n  async function getVideoMetadata(blobUrl) {\n    return new Promise(resolve => {\n      const video = document.createElement('video');\n      video.preload = 'metadata';\n      video.onloadedmetadata = () => {\n        resolve({\n          width: video.videoWidth,\n          height: video.videoHeight,\n          duration: video.duration\n        });\n      };\n      video.onerror = () => resolve({\n        width: 0,\n        height: 0,\n        duration: 0\n      });\n      video.src = blobUrl;\n    });\n  }\n  /**\n   * Reads a file as base64\n   */\n  async function readFileAsBase64(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onerror = () => {\n        reject(new Error('Failed to read the selected media because the operation failed.'));\n      };\n      reader.onload = event => {\n        const result = event.target?.result;\n        if (typeof result !== 'string') {\n          reject(new Error('Failed to read file as base64'));\n          return;\n        }\n        // Remove the data URL prefix to get just the base64 data\n        resolve(result.split(',')[1]);\n      };\n      reader.readAsDataURL(file);\n    });\n  }\n  /**\n   * Reads a file and returns its data as an ImagePickerAsset.\n   * Handles both base64 and blob URL modes, and extracts metadata for images and videos.\n   */\n  async function readFile(targetFile, options) {\n    const mimeType = targetFile.type;\n    const baseUri = URL.createObjectURL(targetFile);\n    try {\n      let metadata;\n      let base64;\n      if (mimeType.startsWith('image/')) {\n        metadata = await getImageMetadata(baseUri);\n      } else if (mimeType.startsWith('video/')) {\n        metadata = await getVideoMetadata(baseUri);\n      } else {\n        throw new Error(`Unsupported file type: ${mimeType}. Only images and videos are supported.`);\n      }\n      if (options.base64) {\n        base64 = await readFileAsBase64(targetFile);\n      }\n      return Object.assign({\n        uri: baseUri,\n        width: metadata.width,\n        height: metadata.height,\n        type: mimeType.startsWith('image/') ? 'image' : 'video',\n        mimeType,\n        fileName: targetFile.name,\n        fileSize: targetFile.size,\n        file: targetFile\n      }, metadata.duration !== undefined && {\n        duration: metadata.duration\n      }, base64 && {\n        base64\n      });\n    } catch (error) {\n      throw error;\n    }\n  }\n  /**\n   * Creates the accept attribute value for the file input based on the requested media types.\n   * Filters out livePhotos as they're not supported on web.\n   */\n  function createMediaTypeFormat(mediaTypes) {\n    const filteredMediaTypes = mediaTypes.filter(mediaType => mediaType !== 'livePhotos');\n    if (filteredMediaTypes.length === 0) {\n      return 'image/*';\n    }\n    let result = '';\n    for (const mediaType of filteredMediaTypes) {\n      // Make sure the types don't repeat\n      if (!result.includes(MediaTypeInput[mediaType])) {\n        result = result.concat(',', MediaTypeInput[mediaType]);\n      }\n    }\n    return result;\n  }\n});","lineCount":267,"map":[[7,2,9,0,"Object"],[7,8,9,0],[7,9,9,0,"defineProperty"],[7,23,9,0],[7,24,9,0,"exports"],[7,31,9,0],[8,4,9,0,"enumerable"],[8,14,9,0],[9,4,9,0,"get"],[9,7,9,0],[9,18,9,0,"get"],[9,19,9,0],[10,6,9,0],[10,13,9,0,"_default"],[10,21,9,0],[11,4,9,0],[12,2,9,0],[13,2,1,0],[13,6,1,0,"_expoModulesCore"],[13,22,1,0],[13,25,1,0,"require"],[13,32,1,0],[13,33,1,0,"_dependencyMap"],[13,47,1,0],[14,2,2,0],[14,6,2,0,"_ImagePickerTypes"],[14,23,2,0],[14,26,2,0,"require"],[14,33,2,0],[14,34,2,0,"_dependencyMap"],[14,48,2,0],[15,2,3,0],[15,6,3,0,"_utils"],[15,12,3,0],[15,15,3,0,"require"],[15,22,3,0],[15,23,3,0,"_dependencyMap"],[15,37,3,0],[16,2,4,0],[16,8,4,6,"MediaTypeInput"],[16,22,4,20],[16,25,4,23],[17,4,5,4,"images"],[17,10,5,10],[17,12,5,12],[17,21,5,21],[18,4,6,4,"videos"],[18,10,6,10],[18,12,6,12],[18,59,6,59],[19,4,7,4,"livePhotos"],[19,14,7,14],[19,16,7,16],[20,2,8,0],[20,3,8,1],[21,2,9,0],[21,6,9,0,"_default"],[21,14,9,0],[21,17,9,15],[22,4,10,4],[22,10,10,10,"launchImageLibraryAsync"],[22,33,10,33,"launchImageLibraryAsync"],[22,34,10,34],[23,6,10,36,"mediaTypes"],[23,16,10,46],[23,19,10,49],[23,20,10,50],[23,28,10,58],[23,29,10,59],[24,6,10,61,"allowsMultipleSelection"],[24,29,10,84],[24,32,10,87],[24,37,10,92],[25,6,10,94,"base64"],[25,12,10,100],[25,15,10,103],[26,4,10,110],[26,5,10,111],[26,7,10,113],[27,6,11,8],[28,6,12,8],[28,10,12,12],[28,11,12,13,"Platform"],[28,27,12,21],[28,28,12,21,"Platform"],[28,36,12,21],[28,37,12,22,"isDOMAvailable"],[28,51,12,36],[28,53,12,38],[29,8,13,12],[29,15,13,19],[30,10,13,21,"canceled"],[30,18,13,29],[30,20,13,31],[30,24,13,35],[31,10,13,37,"assets"],[31,16,13,43],[31,18,13,45],[32,8,13,50],[32,9,13,51],[33,6,14,8],[34,6,15,8],[34,13,15,15],[34,19,15,21,"openFileBrowserAsync"],[34,39,15,41],[34,40,15,42],[35,8,16,12,"mediaTypes"],[35,18,16,22],[36,8,17,12,"allowsMultipleSelection"],[36,31,17,35],[37,8,18,12,"base64"],[38,6,19,8],[38,7,19,9],[38,8,19,10],[39,4,20,4],[39,5,20,5],[40,4,21,4],[40,10,21,10,"launchCameraAsync"],[40,27,21,27,"launchCameraAsync"],[40,28,21,28],[41,6,21,30,"mediaTypes"],[41,16,21,40],[41,19,21,43],[41,20,21,44],[41,28,21,52],[41,29,21,53],[42,6,21,55,"allowsMultipleSelection"],[42,29,21,78],[42,32,21,81],[42,37,21,86],[43,6,21,88,"base64"],[43,12,21,94],[43,15,21,97],[43,20,21,102],[44,6,21,104,"cameraType"],[45,4,21,116],[45,5,21,117],[45,7,21,119],[46,6,22,8],[47,6,23,8],[47,10,23,12],[47,11,23,13,"Platform"],[47,27,23,21],[47,28,23,21,"Platform"],[47,36,23,21],[47,37,23,22,"isDOMAvailable"],[47,51,23,36],[47,53,23,38],[48,8,24,12],[48,15,24,19],[49,10,24,21,"canceled"],[49,18,24,29],[49,20,24,31],[49,24,24,35],[50,10,24,37,"assets"],[50,16,24,43],[50,18,24,45],[51,8,24,50],[51,9,24,51],[52,6,25,8],[53,6,26,8],[53,13,26,15],[53,19,26,21,"openFileBrowserAsync"],[53,39,26,41],[53,40,26,42],[54,8,27,12,"mediaTypes"],[54,18,27,22],[55,8,28,12,"allowsMultipleSelection"],[55,31,28,35],[56,8,29,12,"capture"],[56,15,29,19],[56,17,29,21,"cameraType"],[56,27,29,31],[56,31,29,35],[56,35,29,39],[57,8,30,12,"base64"],[58,6,31,8],[58,7,31,9],[58,8,31,10],[59,4,32,4],[59,5,32,5],[60,4,33,4],[61,0,34,0],[62,0,35,0],[63,4,36,4],[63,10,36,10,"getCameraPermissionsAsync"],[63,35,36,35,"getCameraPermissionsAsync"],[63,36,36,35],[63,38,36,38],[64,6,37,8],[64,13,37,15,"permissionGrantedResponse"],[64,38,37,40],[64,39,37,41],[64,40,37,42],[65,4,38,4],[65,5,38,5],[66,4,39,4],[66,10,39,10,"requestCameraPermissionsAsync"],[66,39,39,39,"requestCameraPermissionsAsync"],[66,40,39,39],[66,42,39,42],[67,6,40,8],[67,13,40,15,"permissionGrantedResponse"],[67,38,40,40],[67,39,40,41],[67,40,40,42],[68,4,41,4],[68,5,41,5],[69,4,42,4],[70,0,43,0],[71,0,44,0],[72,0,45,0],[73,4,46,4],[73,10,46,10,"getMediaLibraryPermissionsAsync"],[73,41,46,41,"getMediaLibraryPermissionsAsync"],[73,42,46,42,"_writeOnly"],[73,52,46,52],[73,54,46,54],[74,6,47,8],[74,13,47,15,"permissionGrantedResponse"],[74,38,47,40],[74,39,47,41],[74,40,47,42],[75,4,48,4],[75,5,48,5],[76,4,49,4],[76,10,49,10,"requestMediaLibraryPermissionsAsync"],[76,45,49,45,"requestMediaLibraryPermissionsAsync"],[76,46,49,46,"_writeOnly"],[76,56,49,56],[76,58,49,58],[77,6,50,8],[77,13,50,15,"permissionGrantedResponse"],[77,38,50,40],[77,39,50,41],[77,40,50,42],[78,4,51,4],[79,2,52,0],[79,3,52,1],[80,2,53,0],[80,11,53,9,"permissionGrantedResponse"],[80,36,53,34,"permissionGrantedResponse"],[80,37,53,34],[80,39,53,37],[81,4,54,4],[81,11,54,11],[82,6,55,8,"status"],[82,12,55,14],[82,14,55,16,"PermissionStatus"],[82,30,55,32],[82,31,55,32,"PermissionStatus"],[82,47,55,32],[82,48,55,33,"GRANTED"],[82,55,55,40],[83,6,56,8,"expires"],[83,13,56,15],[83,15,56,17],[83,22,56,24],[84,6,57,8,"granted"],[84,13,57,15],[84,15,57,17],[84,19,57,21],[85,6,58,8,"canAskAgain"],[85,17,58,19],[85,19,58,21],[86,4,59,4],[86,5,59,5],[87,2,60,0],[88,2,61,0],[89,0,62,0],[90,0,63,0],[91,0,64,0],[92,2,65,0],[92,11,65,9,"openFileBrowserAsync"],[92,31,65,29,"openFileBrowserAsync"],[92,32,65,30],[93,4,65,32,"mediaTypes"],[93,14,65,42],[94,4,65,44,"capture"],[94,11,65,51],[94,14,65,54],[94,19,65,59],[95,4,65,61,"allowsMultipleSelection"],[95,27,65,84],[95,30,65,87],[95,35,65,92],[96,4,65,94,"base64"],[97,2,65,102],[97,3,65,103],[97,5,65,105],[98,4,66,4],[98,10,66,10,"parsedMediaTypes"],[98,26,66,26],[98,29,66,29],[98,33,66,29,"parseMediaTypes"],[98,39,66,44],[98,40,66,44,"parseMediaTypes"],[98,55,66,44],[98,57,66,45,"mediaTypes"],[98,67,66,55],[98,68,66,56],[99,4,67,4],[99,10,67,10,"mediaTypeFormat"],[99,25,67,25],[99,28,67,28,"createMediaTypeFormat"],[99,49,67,49],[99,50,67,50,"parsedMediaTypes"],[99,66,67,66],[99,67,67,67],[100,4,68,4],[100,10,68,10,"input"],[100,15,68,15],[100,18,68,18,"document"],[100,26,68,26],[100,27,68,27,"createElement"],[100,40,68,40],[100,41,68,41],[100,48,68,48],[100,49,68,49],[101,4,69,4,"input"],[101,9,69,9],[101,10,69,10,"style"],[101,15,69,15],[101,16,69,16,"display"],[101,23,69,23],[101,26,69,26],[101,32,69,32],[102,4,70,4,"input"],[102,9,70,9],[102,10,70,10,"setAttribute"],[102,22,70,22],[102,23,70,23],[102,29,70,29],[102,31,70,31],[102,37,70,37],[102,38,70,38],[103,4,71,4,"input"],[103,9,71,9],[103,10,71,10,"setAttribute"],[103,22,71,22],[103,23,71,23],[103,31,71,31],[103,33,71,33,"mediaTypeFormat"],[103,48,71,48],[103,49,71,49],[104,4,72,4,"input"],[104,9,72,9],[104,10,72,10,"setAttribute"],[104,22,72,22],[104,23,72,23],[104,27,72,27],[104,29,72,29,"String"],[104,35,72,35],[104,36,72,36,"Math"],[104,40,72,40],[104,41,72,41,"random"],[104,47,72,47],[104,48,72,48],[104,49,72,49],[104,50,72,50],[104,51,72,51],[105,4,73,4,"input"],[105,9,73,9],[105,10,73,10,"setAttribute"],[105,22,73,22],[105,23,73,23],[105,36,73,36],[105,38,73,38],[105,50,73,50],[105,51,73,51],[106,4,74,4],[106,8,74,8,"allowsMultipleSelection"],[106,31,74,31],[106,33,74,33],[107,6,75,8,"input"],[107,11,75,13],[107,12,75,14,"setAttribute"],[107,24,75,26],[107,25,75,27],[107,35,75,37],[107,37,75,39],[107,47,75,49],[107,48,75,50],[108,4,76,4],[109,4,77,4],[109,8,77,8,"capture"],[109,15,77,15],[109,17,77,17],[110,6,78,8],[110,14,78,16,"capture"],[110,21,78,23],[111,8,79,12],[111,13,79,17],[111,17,79,21],[112,10,80,16,"input"],[112,15,80,21],[112,16,80,22,"setAttribute"],[112,28,80,34],[112,29,80,35],[112,38,80,44],[112,40,80,46],[112,48,80,54],[112,49,80,55],[113,10,81,16],[114,8,82,12],[114,13,82,17,"CameraType"],[114,30,82,27],[114,31,82,27,"CameraType"],[114,41,82,27],[114,42,82,28,"front"],[114,47,82,33],[115,10,83,16,"input"],[115,15,83,21],[115,16,83,22,"setAttribute"],[115,28,83,34],[115,29,83,35],[115,38,83,44],[115,40,83,46],[115,46,83,52],[115,47,83,53],[116,10,84,16],[117,8,85,12],[117,13,85,17,"CameraType"],[117,30,85,27],[117,31,85,27,"CameraType"],[117,41,85,27],[117,42,85,28,"back"],[117,46,85,32],[118,10,86,16,"input"],[118,15,86,21],[118,16,86,22,"setAttribute"],[118,28,86,34],[118,29,86,35],[118,38,86,44],[118,40,86,46],[118,53,86,59],[118,54,86,60],[119,6,87,8],[120,4,88,4],[121,4,89,4,"document"],[121,12,89,12],[121,13,89,13,"body"],[121,17,89,17],[121,18,89,18,"appendChild"],[121,29,89,29],[121,30,89,30,"input"],[121,35,89,35],[121,36,89,36],[122,4,90,4],[122,11,90,11],[122,15,90,15,"Promise"],[122,22,90,22],[122,23,90,24,"resolve"],[122,30,90,31],[122,34,90,36],[123,6,91,8,"input"],[123,11,91,13],[123,12,91,14,"addEventListener"],[123,28,91,30],[123,29,91,31],[123,37,91,39],[123,39,91,41],[123,51,91,53],[124,8,92,12],[124,12,92,16,"input"],[124,17,92,21],[124,18,92,22,"files"],[124,23,92,27],[124,25,92,29,"length"],[124,31,92,35],[124,33,92,37],[125,10,93,16],[125,16,93,22,"files"],[125,21,93,27],[125,24,93,30,"allowsMultipleSelection"],[125,47,93,53],[125,50,93,56,"input"],[125,55,93,61],[125,56,93,62,"files"],[125,61,93,67],[125,64,93,70],[125,65,93,71,"input"],[125,70,93,76],[125,71,93,77,"files"],[125,76,93,82],[125,77,93,83],[125,78,93,84],[125,79,93,85],[125,80,93,86],[126,10,94,16],[126,16,94,22,"assets"],[126,22,94,28],[126,25,94,31],[126,31,94,37,"Promise"],[126,38,94,44],[126,39,94,45,"all"],[126,42,94,48],[126,43,94,49,"Array"],[126,48,94,54],[126,49,94,55,"from"],[126,53,94,59],[126,54,94,60,"files"],[126,59,94,65],[126,60,94,66],[126,61,94,67,"map"],[126,64,94,70],[126,65,94,72,"file"],[126,69,94,76],[126,73,94,81,"readFile"],[126,81,94,89],[126,82,94,90,"file"],[126,86,94,94],[126,88,94,96],[127,12,94,98,"base64"],[128,10,94,105],[128,11,94,106],[128,12,94,107],[128,13,94,108],[128,14,94,109],[129,10,95,16,"resolve"],[129,17,95,23],[129,18,95,24],[130,12,95,26,"canceled"],[130,20,95,34],[130,22,95,36],[130,27,95,41],[131,12,95,43,"assets"],[132,10,95,50],[132,11,95,51],[132,12,95,52],[133,8,96,12],[133,9,96,13],[133,15,97,17],[134,10,98,16,"resolve"],[134,17,98,23],[134,18,98,24],[135,12,98,26,"canceled"],[135,20,98,34],[135,22,98,36],[135,26,98,40],[136,12,98,42,"assets"],[136,18,98,48],[136,20,98,50],[137,10,98,55],[137,11,98,56],[137,12,98,57],[138,8,99,12],[139,8,100,12,"document"],[139,16,100,20],[139,17,100,21,"body"],[139,21,100,25],[139,22,100,26,"removeChild"],[139,33,100,37],[139,34,100,38,"input"],[139,39,100,43],[139,40,100,44],[140,6,101,8],[140,7,101,9],[140,8,101,10],[141,6,102,8,"input"],[141,11,102,13],[141,12,102,14,"addEventListener"],[141,28,102,30],[141,29,102,31],[141,37,102,39],[141,39,102,41],[141,45,102,47],[142,8,103,12,"input"],[142,13,103,17],[142,14,103,18,"dispatchEvent"],[142,27,103,31],[142,28,103,32],[142,32,103,36,"Event"],[142,37,103,41],[142,38,103,42],[142,46,103,50],[142,47,103,51],[142,48,103,52],[143,6,104,8],[143,7,104,9],[143,8,104,10],[144,6,105,8],[144,12,105,14,"event"],[144,17,105,19],[144,20,105,22],[144,24,105,26,"MouseEvent"],[144,34,105,36],[144,35,105,37],[144,42,105,44],[144,43,105,45],[145,6,106,8,"input"],[145,11,106,13],[145,12,106,14,"dispatchEvent"],[145,25,106,27],[145,26,106,28,"event"],[145,31,106,33],[145,32,106,34],[146,4,107,4],[146,5,107,5],[146,6,107,6],[147,2,108,0],[148,2,109,0],[149,0,110,0],[150,0,111,0],[151,0,112,0],[152,2,113,0],[152,17,113,15,"getImageMetadata"],[152,33,113,31,"getImageMetadata"],[152,34,113,32,"blobUrl"],[152,41,113,39],[152,43,113,41],[153,4,114,4],[153,11,114,11],[153,15,114,15,"Promise"],[153,22,114,22],[153,23,114,24,"resolve"],[153,30,114,31],[153,34,114,36],[154,6,115,8],[154,12,115,14,"image"],[154,17,115,19],[154,20,115,22],[154,24,115,26,"Image"],[154,29,115,31],[154,30,115,32],[154,31,115,33],[155,6,116,8,"image"],[155,11,116,13],[155,12,116,14,"onload"],[155,18,116,20],[155,21,116,23],[155,27,116,29],[156,8,117,12,"resolve"],[156,15,117,19],[156,16,117,20],[157,10,118,16,"width"],[157,15,118,21],[157,17,118,23,"image"],[157,22,118,28],[157,23,118,29,"naturalWidth"],[157,35,118,41],[157,39,118,45,"image"],[157,44,118,50],[157,45,118,51,"width"],[157,50,118,56],[158,10,119,16,"height"],[158,16,119,22],[158,18,119,24,"image"],[158,23,119,29],[158,24,119,30,"naturalHeight"],[158,37,119,43],[158,41,119,47,"image"],[158,46,119,52],[158,47,119,53,"height"],[159,8,120,12],[159,9,120,13],[159,10,120,14],[160,6,121,8],[160,7,121,9],[161,6,122,8,"image"],[161,11,122,13],[161,12,122,14,"onerror"],[161,19,122,21],[161,22,122,24],[161,28,122,30,"resolve"],[161,35,122,37],[161,36,122,38],[162,8,122,40,"width"],[162,13,122,45],[162,15,122,47],[162,16,122,48],[163,8,122,50,"height"],[163,14,122,56],[163,16,122,58],[164,6,122,60],[164,7,122,61],[164,8,122,62],[165,6,123,8,"image"],[165,11,123,13],[165,12,123,14,"src"],[165,15,123,17],[165,18,123,20,"blobUrl"],[165,25,123,27],[166,4,124,4],[166,5,124,5],[166,6,124,6],[167,2,125,0],[168,2,126,0],[169,0,127,0],[170,0,128,0],[171,2,129,0],[171,17,129,15,"getVideoMetadata"],[171,33,129,31,"getVideoMetadata"],[171,34,129,32,"blobUrl"],[171,41,129,39],[171,43,129,41],[172,4,130,4],[172,11,130,11],[172,15,130,15,"Promise"],[172,22,130,22],[172,23,130,24,"resolve"],[172,30,130,31],[172,34,130,36],[173,6,131,8],[173,12,131,14,"video"],[173,17,131,19],[173,20,131,22,"document"],[173,28,131,30],[173,29,131,31,"createElement"],[173,42,131,44],[173,43,131,45],[173,50,131,52],[173,51,131,53],[174,6,132,8,"video"],[174,11,132,13],[174,12,132,14,"preload"],[174,19,132,21],[174,22,132,24],[174,32,132,34],[175,6,133,8,"video"],[175,11,133,13],[175,12,133,14,"onloadedmetadata"],[175,28,133,30],[175,31,133,33],[175,37,133,39],[176,8,134,12,"resolve"],[176,15,134,19],[176,16,134,20],[177,10,135,16,"width"],[177,15,135,21],[177,17,135,23,"video"],[177,22,135,28],[177,23,135,29,"videoWidth"],[177,33,135,39],[178,10,136,16,"height"],[178,16,136,22],[178,18,136,24,"video"],[178,23,136,29],[178,24,136,30,"videoHeight"],[178,35,136,41],[179,10,137,16,"duration"],[179,18,137,24],[179,20,137,26,"video"],[179,25,137,31],[179,26,137,32,"duration"],[180,8,138,12],[180,9,138,13],[180,10,138,14],[181,6,139,8],[181,7,139,9],[182,6,140,8,"video"],[182,11,140,13],[182,12,140,14,"onerror"],[182,19,140,21],[182,22,140,24],[182,28,140,30,"resolve"],[182,35,140,37],[182,36,140,38],[183,8,140,40,"width"],[183,13,140,45],[183,15,140,47],[183,16,140,48],[184,8,140,50,"height"],[184,14,140,56],[184,16,140,58],[184,17,140,59],[185,8,140,61,"duration"],[185,16,140,69],[185,18,140,71],[186,6,140,73],[186,7,140,74],[186,8,140,75],[187,6,141,8,"video"],[187,11,141,13],[187,12,141,14,"src"],[187,15,141,17],[187,18,141,20,"blobUrl"],[187,25,141,27],[188,4,142,4],[188,5,142,5],[188,6,142,6],[189,2,143,0],[190,2,144,0],[191,0,145,0],[192,0,146,0],[193,2,147,0],[193,17,147,15,"readFileAsBase64"],[193,33,147,31,"readFileAsBase64"],[193,34,147,32,"file"],[193,38,147,36],[193,40,147,38],[194,4,148,4],[194,11,148,11],[194,15,148,15,"Promise"],[194,22,148,22],[194,23,148,23],[194,24,148,24,"resolve"],[194,31,148,31],[194,33,148,33,"reject"],[194,39,148,39],[194,44,148,44],[195,6,149,8],[195,12,149,14,"reader"],[195,18,149,20],[195,21,149,23],[195,25,149,27,"FileReader"],[195,35,149,37],[195,36,149,38],[195,37,149,39],[196,6,150,8,"reader"],[196,12,150,14],[196,13,150,15,"onerror"],[196,20,150,22],[196,23,150,25],[196,29,150,31],[197,8,151,12,"reject"],[197,14,151,18],[197,15,151,19],[197,19,151,23,"Error"],[197,24,151,28],[197,25,151,29],[197,90,151,94],[197,91,151,95],[197,92,151,96],[198,6,152,8],[198,7,152,9],[199,6,153,8,"reader"],[199,12,153,14],[199,13,153,15,"onload"],[199,19,153,21],[199,22,153,25,"event"],[199,27,153,30],[199,31,153,35],[200,8,154,12],[200,14,154,18,"result"],[200,20,154,24],[200,23,154,27,"event"],[200,28,154,32],[200,29,154,33,"target"],[200,35,154,39],[200,37,154,41,"result"],[200,43,154,47],[201,8,155,12],[201,12,155,16],[201,19,155,23,"result"],[201,25,155,29],[201,30,155,34],[201,38,155,42],[201,40,155,44],[202,10,156,16,"reject"],[202,16,156,22],[202,17,156,23],[202,21,156,27,"Error"],[202,26,156,32],[202,27,156,33],[202,58,156,64],[202,59,156,65],[202,60,156,66],[203,10,157,16],[204,8,158,12],[205,8,159,12],[206,8,160,12,"resolve"],[206,15,160,19],[206,16,160,20,"result"],[206,22,160,26],[206,23,160,27,"split"],[206,28,160,32],[206,29,160,33],[206,32,160,36],[206,33,160,37],[206,34,160,38],[206,35,160,39],[206,36,160,40],[206,37,160,41],[207,6,161,8],[207,7,161,9],[208,6,162,8,"reader"],[208,12,162,14],[208,13,162,15,"readAsDataURL"],[208,26,162,28],[208,27,162,29,"file"],[208,31,162,33],[208,32,162,34],[209,4,163,4],[209,5,163,5],[209,6,163,6],[210,2,164,0],[211,2,165,0],[212,0,166,0],[213,0,167,0],[214,0,168,0],[215,2,169,0],[215,17,169,15,"readFile"],[215,25,169,23,"readFile"],[215,26,169,24,"targetFile"],[215,36,169,34],[215,38,169,36,"options"],[215,45,169,43],[215,47,169,45],[216,4,170,4],[216,10,170,10,"mimeType"],[216,18,170,18],[216,21,170,21,"targetFile"],[216,31,170,31],[216,32,170,32,"type"],[216,36,170,36],[217,4,171,4],[217,10,171,10,"baseUri"],[217,17,171,17],[217,20,171,20,"URL"],[217,23,171,23],[217,24,171,24,"createObjectURL"],[217,39,171,39],[217,40,171,40,"targetFile"],[217,50,171,50],[217,51,171,51],[218,4,172,4],[218,8,172,8],[219,6,173,8],[219,10,173,12,"metadata"],[219,18,173,20],[220,6,174,8],[220,10,174,12,"base64"],[220,16,174,18],[221,6,175,8],[221,10,175,12,"mimeType"],[221,18,175,20],[221,19,175,21,"startsWith"],[221,29,175,31],[221,30,175,32],[221,38,175,40],[221,39,175,41],[221,41,175,43],[222,8,176,12,"metadata"],[222,16,176,20],[222,19,176,23],[222,25,176,29,"getImageMetadata"],[222,41,176,45],[222,42,176,46,"baseUri"],[222,49,176,53],[222,50,176,54],[223,6,177,8],[223,7,177,9],[223,13,178,13],[223,17,178,17,"mimeType"],[223,25,178,25],[223,26,178,26,"startsWith"],[223,36,178,36],[223,37,178,37],[223,45,178,45],[223,46,178,46],[223,48,178,48],[224,8,179,12,"metadata"],[224,16,179,20],[224,19,179,23],[224,25,179,29,"getVideoMetadata"],[224,41,179,45],[224,42,179,46,"baseUri"],[224,49,179,53],[224,50,179,54],[225,6,180,8],[225,7,180,9],[225,13,181,13],[226,8,182,12],[226,14,182,18],[226,18,182,22,"Error"],[226,23,182,27],[226,24,182,28],[226,50,182,54,"mimeType"],[226,58,182,62],[226,99,182,103],[226,100,182,104],[227,6,183,8],[228,6,184,8],[228,10,184,12,"options"],[228,17,184,19],[228,18,184,20,"base64"],[228,24,184,26],[228,26,184,28],[229,8,185,12,"base64"],[229,14,185,18],[229,17,185,21],[229,23,185,27,"readFileAsBase64"],[229,39,185,43],[229,40,185,44,"targetFile"],[229,50,185,54],[229,51,185,55],[230,6,186,8],[231,6,187,8],[231,13,187,8,"Object"],[231,19,187,8],[231,20,187,8,"assign"],[231,26,187,8],[232,8,188,12,"uri"],[232,11,188,15],[232,13,188,17,"baseUri"],[232,20,188,24],[233,8,189,12,"width"],[233,13,189,17],[233,15,189,19,"metadata"],[233,23,189,27],[233,24,189,28,"width"],[233,29,189,33],[234,8,190,12,"height"],[234,14,190,18],[234,16,190,20,"metadata"],[234,24,190,28],[234,25,190,29,"height"],[234,31,190,35],[235,8,191,12,"type"],[235,12,191,16],[235,14,191,18,"mimeType"],[235,22,191,26],[235,23,191,27,"startsWith"],[235,33,191,37],[235,34,191,38],[235,42,191,46],[235,43,191,47],[235,46,191,50],[235,53,191,57],[235,56,191,60],[235,63,191,67],[236,8,192,12,"mimeType"],[236,16,192,20],[237,8,193,12,"fileName"],[237,16,193,20],[237,18,193,22,"targetFile"],[237,28,193,32],[237,29,193,33,"name"],[237,33,193,37],[238,8,194,12,"fileSize"],[238,16,194,20],[238,18,194,22,"targetFile"],[238,28,194,32],[238,29,194,33,"size"],[238,33,194,37],[239,8,195,12,"file"],[239,12,195,16],[239,14,195,18,"targetFile"],[240,6,195,28],[240,9,196,16,"metadata"],[240,17,196,24],[240,18,196,25,"duration"],[240,26,196,33],[240,31,196,38,"undefined"],[240,40,196,47],[240,44,196,51],[241,8,196,53,"duration"],[241,16,196,61],[241,18,196,63,"metadata"],[241,26,196,71],[241,27,196,72,"duration"],[242,6,196,81],[242,7,196,82],[242,9,197,16,"base64"],[242,15,197,22],[242,19,197,26],[243,8,197,28,"base64"],[244,6,197,35],[244,7,197,36],[245,4,199,4],[245,5,199,5],[245,6,200,4],[245,13,200,11,"error"],[245,18,200,16],[245,20,200,18],[246,6,201,8],[246,12,201,14,"error"],[246,17,201,19],[247,4,202,4],[248,2,203,0],[249,2,204,0],[250,0,205,0],[251,0,206,0],[252,0,207,0],[253,2,208,0],[253,11,208,9,"createMediaTypeFormat"],[253,32,208,30,"createMediaTypeFormat"],[253,33,208,31,"mediaTypes"],[253,43,208,41],[253,45,208,43],[254,4,209,4],[254,10,209,10,"filteredMediaTypes"],[254,28,209,28],[254,31,209,31,"mediaTypes"],[254,41,209,41],[254,42,209,42,"filter"],[254,48,209,48],[254,49,209,50,"mediaType"],[254,58,209,59],[254,62,209,64,"mediaType"],[254,71,209,73],[254,76,209,78],[254,88,209,90],[254,89,209,91],[255,4,210,4],[255,8,210,8,"filteredMediaTypes"],[255,26,210,26],[255,27,210,27,"length"],[255,33,210,33],[255,38,210,38],[255,39,210,39],[255,41,210,41],[256,6,211,8],[256,13,211,15],[256,22,211,24],[257,4,212,4],[258,4,213,4],[258,8,213,8,"result"],[258,14,213,14],[258,17,213,17],[258,19,213,19],[259,4,214,4],[259,9,214,9],[259,15,214,15,"mediaType"],[259,24,214,24],[259,28,214,28,"filteredMediaTypes"],[259,46,214,46],[259,48,214,48],[260,6,215,8],[261,6,216,8],[261,10,216,12],[261,11,216,13,"result"],[261,17,216,19],[261,18,216,20,"includes"],[261,26,216,28],[261,27,216,29,"MediaTypeInput"],[261,41,216,43],[261,42,216,44,"mediaType"],[261,51,216,53],[261,52,216,54],[261,53,216,55],[261,55,216,57],[262,8,217,12,"result"],[262,14,217,18],[262,17,217,21,"result"],[262,23,217,27],[262,24,217,28,"concat"],[262,30,217,34],[262,31,217,35],[262,34,217,38],[262,36,217,40,"MediaTypeInput"],[262,50,217,54],[262,51,217,55,"mediaType"],[262,60,217,64],[262,61,217,65],[262,62,217,66],[263,6,218,8],[264,4,219,4],[265,4,220,4],[265,11,220,11,"result"],[265,17,220,17],[266,2,221,0],[267,0,221,1],[267,3]],"functionMap":{"names":["<global>","default.launchImageLibraryAsync","default.launchCameraAsync","default.getCameraPermissionsAsync","default.requestCameraPermissionsAsync","default.getMediaLibraryPermissionsAsync","default.requestMediaLibraryPermissionsAsync","permissionGrantedResponse","openFileBrowserAsync","Promise$argument_0","input.addEventListener$argument_1","Array.from.map$argument_0","getImageMetadata","image.onload","image.onerror","getVideoMetadata","video.onloadedmetadata","video.onerror","readFileAsBase64","reader.onerror","reader.onload","readFile","createMediaTypeFormat","mediaTypes.filter$argument_0"],"mappings":"AAA;ICS;KDU;IEC;KFW;IGI;KHE;IIC;KJE;IKK;KLE;IMC;KNE;AOE;CPO;AQK;uBCyB;yCCC;uECG,oCD;SDO;yCCC;SDE;KDG;CRC;AYK;uBHC;uBIE;SJK;wBKC,sCL;KGE;CZC;AeI;uBNC;iCOG;SPM;wBQC,mDR;KME;CfC;AkBI;uBTC;yBUE;SVE;wBWC;SXQ;KSE;ClBC;AqBK;CrBkC;AsBK;iDCC,yCD;CtBY"},"hasCjsExports":false},"type":"js/module"}]}