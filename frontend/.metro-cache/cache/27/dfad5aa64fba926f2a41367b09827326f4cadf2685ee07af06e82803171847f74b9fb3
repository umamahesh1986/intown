{"dependencies":[{"name":"./lib/iterate.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":17,"index":17},"end":{"line":1,"column":44,"index":44}}],"key":"+/hE2B2COiY1Pem2bhjU2hYUnR8=","exportNames":["*"],"imports":1}},{"name":"./lib/state.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":17,"index":62},"end":{"line":2,"column":42,"index":87}}],"key":"q+FvpwRza1bNcgP2vurwruTyxww=","exportNames":["*"],"imports":1}},{"name":"./lib/terminator.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":17,"index":105},"end":{"line":3,"column":47,"index":135}}],"key":"EG9AV+UpX7S3UuRyIJjDzaQpJy0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var iterate = require(_dependencyMap[0], \"./lib/iterate.js\"),\n    initState = require(_dependencyMap[1], \"./lib/state.js\"),\n    terminator = require(_dependencyMap[2], \"./lib/terminator.js\");\n\n  // Public API\n  module.exports = serialOrdered;\n  // sorting helpers\n  module.exports.ascending = ascending;\n  module.exports.descending = descending;\n\n  /**\n   * Runs iterator over provided sorted array elements in series\n   *\n   * @param   {array|object} list - array or object (named list) to iterate over\n   * @param   {function} iterator - iterator to run\n   * @param   {function} sortMethod - custom sort function\n   * @param   {function} callback - invoked when all elements processed\n   * @returns {function} - jobs terminator\n   */\n  function serialOrdered(list, iterator, sortMethod, callback) {\n    var state = initState(list, sortMethod);\n    iterate(list, iterator, state, function iteratorHandler(error, result) {\n      if (error) {\n        callback(error, result);\n        return;\n      }\n      state.index++;\n\n      // are we there yet?\n      if (state.index < (state['keyedList'] || list).length) {\n        iterate(list, iterator, state, iteratorHandler);\n        return;\n      }\n\n      // done here\n      callback(null, state.results);\n    });\n    return terminator.bind(state, callback);\n  }\n\n  /*\n   * -- Sort methods\n   */\n\n  /**\n   * sort helper to sort array elements in ascending order\n   *\n   * @param   {mixed} a - an item to compare\n   * @param   {mixed} b - an item to compare\n   * @returns {number} - comparison result\n   */\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }\n\n  /**\n   * sort helper to sort array elements in descending order\n   *\n   * @param   {mixed} a - an item to compare\n   * @param   {mixed} b - an item to compare\n   * @returns {number} - comparison result\n   */\n  function descending(a, b) {\n    return -1 * ascending(a, b);\n  }\n});","lineCount":67,"map":[[2,2,1,0],[2,6,1,4,"iterate"],[2,13,1,11],[2,16,1,17,"require"],[2,23,1,24],[2,24,1,24,"_dependencyMap"],[2,38,1,24],[2,61,1,43],[2,62,1,44],[3,4,2,4,"initState"],[3,13,2,13],[3,16,2,17,"require"],[3,23,2,24],[3,24,2,24,"_dependencyMap"],[3,38,2,24],[3,59,2,41],[3,60,2,42],[4,4,3,4,"terminator"],[4,14,3,14],[4,17,3,17,"require"],[4,24,3,24],[4,25,3,24,"_dependencyMap"],[4,39,3,24],[4,65,3,46],[4,66,3,47],[6,2,6,0],[7,2,7,0,"module"],[7,8,7,6],[7,9,7,7,"exports"],[7,16,7,14],[7,19,7,17,"serialOrdered"],[7,32,7,30],[8,2,8,0],[9,2,9,0,"module"],[9,8,9,6],[9,9,9,7,"exports"],[9,16,9,14],[9,17,9,15,"ascending"],[9,26,9,24],[9,29,9,28,"ascending"],[9,38,9,37],[10,2,10,0,"module"],[10,8,10,6],[10,9,10,7,"exports"],[10,16,10,14],[10,17,10,15,"descending"],[10,27,10,25],[10,30,10,28,"descending"],[10,40,10,38],[12,2,12,0],[13,0,13,0],[14,0,14,0],[15,0,15,0],[16,0,16,0],[17,0,17,0],[18,0,18,0],[19,0,19,0],[20,0,20,0],[21,2,21,0],[21,11,21,9,"serialOrdered"],[21,24,21,22,"serialOrdered"],[21,25,21,23,"list"],[21,29,21,27],[21,31,21,29,"iterator"],[21,39,21,37],[21,41,21,39,"sortMethod"],[21,51,21,49],[21,53,21,51,"callback"],[21,61,21,59],[21,63,22,0],[22,4,23,2],[22,8,23,6,"state"],[22,13,23,11],[22,16,23,14,"initState"],[22,25,23,23],[22,26,23,24,"list"],[22,30,23,28],[22,32,23,30,"sortMethod"],[22,42,23,40],[22,43,23,41],[23,4,25,2,"iterate"],[23,11,25,9],[23,12,25,10,"list"],[23,16,25,14],[23,18,25,16,"iterator"],[23,26,25,24],[23,28,25,26,"state"],[23,33,25,31],[23,35,25,33],[23,44,25,42,"iteratorHandler"],[23,59,25,57,"iteratorHandler"],[23,60,25,58,"error"],[23,65,25,63],[23,67,25,65,"result"],[23,73,25,71],[23,75,26,2],[24,6,27,4],[24,10,27,8,"error"],[24,15,27,13],[24,17,28,4],[25,8,29,6,"callback"],[25,16,29,14],[25,17,29,15,"error"],[25,22,29,20],[25,24,29,22,"result"],[25,30,29,28],[25,31,29,29],[26,8,30,6],[27,6,31,4],[28,6,33,4,"state"],[28,11,33,9],[28,12,33,10,"index"],[28,17,33,15],[28,19,33,17],[30,6,35,4],[31,6,36,4],[31,10,36,8,"state"],[31,15,36,13],[31,16,36,14,"index"],[31,21,36,19],[31,24,36,22],[31,25,36,23,"state"],[31,30,36,28],[31,31,36,29],[31,42,36,40],[31,43,36,41],[31,47,36,45,"list"],[31,51,36,49],[31,53,36,51,"length"],[31,59,36,57],[31,61,37,4],[32,8,38,6,"iterate"],[32,15,38,13],[32,16,38,14,"list"],[32,20,38,18],[32,22,38,20,"iterator"],[32,30,38,28],[32,32,38,30,"state"],[32,37,38,35],[32,39,38,37,"iteratorHandler"],[32,54,38,52],[32,55,38,53],[33,8,39,6],[34,6,40,4],[36,6,42,4],[37,6,43,4,"callback"],[37,14,43,12],[37,15,43,13],[37,19,43,17],[37,21,43,19,"state"],[37,26,43,24],[37,27,43,25,"results"],[37,34,43,32],[37,35,43,33],[38,4,44,2],[38,5,44,3],[38,6,44,4],[39,4,46,2],[39,11,46,9,"terminator"],[39,21,46,19],[39,22,46,20,"bind"],[39,26,46,24],[39,27,46,25,"state"],[39,32,46,30],[39,34,46,32,"callback"],[39,42,46,40],[39,43,46,41],[40,2,47,0],[42,2,49,0],[43,0,50,0],[44,0,51,0],[46,2,53,0],[47,0,54,0],[48,0,55,0],[49,0,56,0],[50,0,57,0],[51,0,58,0],[52,0,59,0],[53,2,60,0],[53,11,60,9,"ascending"],[53,20,60,18,"ascending"],[53,21,60,19,"a"],[53,22,60,20],[53,24,60,22,"b"],[53,25,60,23],[53,27,61,0],[54,4,62,2],[54,11,62,9,"a"],[54,12,62,10],[54,15,62,13,"b"],[54,16,62,14],[54,19,62,17],[54,20,62,18],[54,21,62,19],[54,24,62,22,"a"],[54,25,62,23],[54,28,62,26,"b"],[54,29,62,27],[54,32,62,30],[54,33,62,31],[54,36,62,34],[54,37,62,35],[55,2,63,0],[57,2,65,0],[58,0,66,0],[59,0,67,0],[60,0,68,0],[61,0,69,0],[62,0,70,0],[63,0,71,0],[64,2,72,0],[64,11,72,9,"descending"],[64,21,72,19,"descending"],[64,22,72,20,"a"],[64,23,72,21],[64,25,72,23,"b"],[64,26,72,24],[64,28,73,0],[65,4,74,2],[65,11,74,9],[65,12,74,10],[65,13,74,11],[65,16,74,14,"ascending"],[65,25,74,23],[65,26,74,24,"a"],[65,27,74,25],[65,29,74,27,"b"],[65,30,74,28],[65,31,74,29],[66,2,75,0],[67,0,75,1],[67,3]],"functionMap":{"names":["<global>","serialOrdered","iteratorHandler","ascending","descending"],"mappings":"AAA;ACoB;iCCI;GDmB;CDG;AGa;CHG;AIS;CJG"},"hasCjsExports":true},"type":"js/module"}]}