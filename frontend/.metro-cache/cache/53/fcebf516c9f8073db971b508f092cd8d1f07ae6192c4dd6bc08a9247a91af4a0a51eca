{"dependencies":[{"name":"mime-db","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":9,"index":189},"end":{"line":15,"column":27,"index":207}}],"key":"QPC9xjFFDPma2lJRvlQ24cdfqk4=","exportNames":["*"],"imports":1}},{"name":"path","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":14,"index":222},"end":{"line":16,"column":29,"index":237}}],"key":"sC7uOmzp0ncn/Io61vx77lEWh8A=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /*!\n   * mime-types\n   * Copyright(c) 2014 Jonathan Ong\n   * Copyright(c) 2015 Douglas Christopher Wilson\n   * MIT Licensed\n   */\n\n  'use strict';\n\n  /**\n   * Module dependencies.\n   * @private\n   */\n  var db = require(_dependencyMap[0], \"mime-db\");\n  var extname = require(_dependencyMap[1], \"path\").extname;\n\n  /**\n   * Module variables.\n   * @private\n   */\n\n  var EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/;\n  var TEXT_TYPE_REGEXP = /^text\\//i;\n\n  /**\n   * Module exports.\n   * @public\n   */\n\n  exports.charset = charset;\n  exports.charsets = {\n    lookup: charset\n  };\n  exports.contentType = contentType;\n  exports.extension = extension;\n  exports.extensions = Object.create(null);\n  exports.lookup = lookup;\n  exports.types = Object.create(null);\n\n  // Populate the extensions/types maps\n  populateMaps(exports.extensions, exports.types);\n\n  /**\n   * Get the default charset for a MIME type.\n   *\n   * @param {string} type\n   * @return {boolean|string}\n   */\n\n  function charset(type) {\n    if (!type || typeof type !== 'string') {\n      return false;\n    }\n\n    // TODO: use media-typer\n    var match = EXTRACT_TYPE_REGEXP.exec(type);\n    var mime = match && db[match[1].toLowerCase()];\n    if (mime && mime.charset) {\n      return mime.charset;\n    }\n\n    // default text/* to utf-8\n    if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n      return 'UTF-8';\n    }\n    return false;\n  }\n\n  /**\n   * Create a full Content-Type header given a MIME type or extension.\n   *\n   * @param {string} str\n   * @return {boolean|string}\n   */\n\n  function contentType(str) {\n    // TODO: should this even be in this module?\n    if (!str || typeof str !== 'string') {\n      return false;\n    }\n    var mime = str.indexOf('/') === -1 ? exports.lookup(str) : str;\n    if (!mime) {\n      return false;\n    }\n\n    // TODO: use content-type or other module\n    if (mime.indexOf('charset') === -1) {\n      var charset = exports.charset(mime);\n      if (charset) mime += '; charset=' + charset.toLowerCase();\n    }\n    return mime;\n  }\n\n  /**\n   * Get the default extension for a MIME type.\n   *\n   * @param {string} type\n   * @return {boolean|string}\n   */\n\n  function extension(type) {\n    if (!type || typeof type !== 'string') {\n      return false;\n    }\n\n    // TODO: use media-typer\n    var match = EXTRACT_TYPE_REGEXP.exec(type);\n\n    // get extensions\n    var exts = match && exports.extensions[match[1].toLowerCase()];\n    if (!exts || !exts.length) {\n      return false;\n    }\n    return exts[0];\n  }\n\n  /**\n   * Lookup the MIME type for a file path/extension.\n   *\n   * @param {string} path\n   * @return {boolean|string}\n   */\n\n  function lookup(path) {\n    if (!path || typeof path !== 'string') {\n      return false;\n    }\n\n    // get the extension (\"ext\" or \".ext\" or full path)\n    var extension = extname('x.' + path).toLowerCase().substr(1);\n    if (!extension) {\n      return false;\n    }\n    return exports.types[extension] || false;\n  }\n\n  /**\n   * Populate the extensions and types maps.\n   * @private\n   */\n\n  function populateMaps(extensions, types) {\n    // source preference (least -> most)\n    var preference = ['nginx', 'apache', undefined, 'iana'];\n    Object.keys(db).forEach(function forEachMimeType(type) {\n      var mime = db[type];\n      var exts = mime.extensions;\n      if (!exts || !exts.length) {\n        return;\n      }\n\n      // mime -> extensions\n      extensions[type] = exts;\n\n      // extension -> mime\n      for (var i = 0; i < exts.length; i++) {\n        var extension = exts[i];\n        if (types[extension]) {\n          var from = preference.indexOf(db[types[extension]].source);\n          var to = preference.indexOf(mime.source);\n          if (types[extension] !== 'application/octet-stream' && (from > to || from === to && types[extension].substr(0, 12) === 'application/')) {\n            // skip the remapping\n            continue;\n          }\n        }\n\n        // set the extension -> mime\n        types[extension] = type;\n      }\n    });\n  }\n});","lineCount":173,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[9,2,8,0],[9,14,8,12],[11,2,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,2,15,0],[15,6,15,4,"db"],[15,8,15,6],[15,11,15,9,"require"],[15,18,15,16],[15,19,15,16,"_dependencyMap"],[15,33,15,16],[15,47,15,26],[15,48,15,27],[16,2,16,0],[16,6,16,4,"extname"],[16,13,16,11],[16,16,16,14,"require"],[16,23,16,21],[16,24,16,21,"_dependencyMap"],[16,38,16,21],[16,49,16,28],[16,50,16,29],[16,51,16,30,"extname"],[16,58,16,37],[18,2,18,0],[19,0,19,0],[20,0,20,0],[21,0,21,0],[23,2,23,0],[23,6,23,4,"EXTRACT_TYPE_REGEXP"],[23,25,23,23],[23,28,23,26],[23,53,23,51],[24,2,24,0],[24,6,24,4,"TEXT_TYPE_REGEXP"],[24,22,24,20],[24,25,24,23],[24,35,24,33],[26,2,26,0],[27,0,27,0],[28,0,28,0],[29,0,29,0],[31,2,31,0,"exports"],[31,9,31,7],[31,10,31,8,"charset"],[31,17,31,15],[31,20,31,18,"charset"],[31,27,31,25],[32,2,32,0,"exports"],[32,9,32,7],[32,10,32,8,"charsets"],[32,18,32,16],[32,21,32,19],[33,4,32,21,"lookup"],[33,10,32,27],[33,12,32,29,"charset"],[34,2,32,37],[34,3,32,38],[35,2,33,0,"exports"],[35,9,33,7],[35,10,33,8,"contentType"],[35,21,33,19],[35,24,33,22,"contentType"],[35,35,33,33],[36,2,34,0,"exports"],[36,9,34,7],[36,10,34,8,"extension"],[36,19,34,17],[36,22,34,20,"extension"],[36,31,34,29],[37,2,35,0,"exports"],[37,9,35,7],[37,10,35,8,"extensions"],[37,20,35,18],[37,23,35,21,"Object"],[37,29,35,27],[37,30,35,28,"create"],[37,36,35,34],[37,37,35,35],[37,41,35,39],[37,42,35,40],[38,2,36,0,"exports"],[38,9,36,7],[38,10,36,8,"lookup"],[38,16,36,14],[38,19,36,17,"lookup"],[38,25,36,23],[39,2,37,0,"exports"],[39,9,37,7],[39,10,37,8,"types"],[39,15,37,13],[39,18,37,16,"Object"],[39,24,37,22],[39,25,37,23,"create"],[39,31,37,29],[39,32,37,30],[39,36,37,34],[39,37,37,35],[41,2,39,0],[42,2,40,0,"populateMaps"],[42,14,40,12],[42,15,40,13,"exports"],[42,22,40,20],[42,23,40,21,"extensions"],[42,33,40,31],[42,35,40,33,"exports"],[42,42,40,40],[42,43,40,41,"types"],[42,48,40,46],[42,49,40,47],[44,2,42,0],[45,0,43,0],[46,0,44,0],[47,0,45,0],[48,0,46,0],[49,0,47,0],[51,2,49,0],[51,11,49,9,"charset"],[51,18,49,16,"charset"],[51,19,49,18,"type"],[51,23,49,22],[51,25,49,24],[52,4,50,2],[52,8,50,6],[52,9,50,7,"type"],[52,13,50,11],[52,17,50,15],[52,24,50,22,"type"],[52,28,50,26],[52,33,50,31],[52,41,50,39],[52,43,50,41],[53,6,51,4],[53,13,51,11],[53,18,51,16],[54,4,52,2],[56,4,54,2],[57,4,55,2],[57,8,55,6,"match"],[57,13,55,11],[57,16,55,14,"EXTRACT_TYPE_REGEXP"],[57,35,55,33],[57,36,55,34,"exec"],[57,40,55,38],[57,41,55,39,"type"],[57,45,55,43],[57,46,55,44],[58,4,56,2],[58,8,56,6,"mime"],[58,12,56,10],[58,15,56,13,"match"],[58,20,56,18],[58,24,56,22,"db"],[58,26,56,24],[58,27,56,25,"match"],[58,32,56,30],[58,33,56,31],[58,34,56,32],[58,35,56,33],[58,36,56,34,"toLowerCase"],[58,47,56,45],[58,48,56,46],[58,49,56,47],[58,50,56,48],[59,4,58,2],[59,8,58,6,"mime"],[59,12,58,10],[59,16,58,14,"mime"],[59,20,58,18],[59,21,58,19,"charset"],[59,28,58,26],[59,30,58,28],[60,6,59,4],[60,13,59,11,"mime"],[60,17,59,15],[60,18,59,16,"charset"],[60,25,59,23],[61,4,60,2],[63,4,62,2],[64,4,63,2],[64,8,63,6,"match"],[64,13,63,11],[64,17,63,15,"TEXT_TYPE_REGEXP"],[64,33,63,31],[64,34,63,32,"test"],[64,38,63,36],[64,39,63,37,"match"],[64,44,63,42],[64,45,63,43],[64,46,63,44],[64,47,63,45],[64,48,63,46],[64,50,63,48],[65,6,64,4],[65,13,64,11],[65,20,64,18],[66,4,65,2],[67,4,67,2],[67,11,67,9],[67,16,67,14],[68,2,68,0],[70,2,70,0],[71,0,71,0],[72,0,72,0],[73,0,73,0],[74,0,74,0],[75,0,75,0],[77,2,77,0],[77,11,77,9,"contentType"],[77,22,77,20,"contentType"],[77,23,77,22,"str"],[77,26,77,25],[77,28,77,27],[78,4,78,2],[79,4,79,2],[79,8,79,6],[79,9,79,7,"str"],[79,12,79,10],[79,16,79,14],[79,23,79,21,"str"],[79,26,79,24],[79,31,79,29],[79,39,79,37],[79,41,79,39],[80,6,80,4],[80,13,80,11],[80,18,80,16],[81,4,81,2],[82,4,83,2],[82,8,83,6,"mime"],[82,12,83,10],[82,15,83,13,"str"],[82,18,83,16],[82,19,83,17,"indexOf"],[82,26,83,24],[82,27,83,25],[82,30,83,28],[82,31,83,29],[82,36,83,34],[82,37,83,35],[82,38,83,36],[82,41,84,6,"exports"],[82,48,84,13],[82,49,84,14,"lookup"],[82,55,84,20],[82,56,84,21,"str"],[82,59,84,24],[82,60,84,25],[82,63,85,6,"str"],[82,66,85,9],[83,4,87,2],[83,8,87,6],[83,9,87,7,"mime"],[83,13,87,11],[83,15,87,13],[84,6,88,4],[84,13,88,11],[84,18,88,16],[85,4,89,2],[87,4,91,2],[88,4,92,2],[88,8,92,6,"mime"],[88,12,92,10],[88,13,92,11,"indexOf"],[88,20,92,18],[88,21,92,19],[88,30,92,28],[88,31,92,29],[88,36,92,34],[88,37,92,35],[88,38,92,36],[88,40,92,38],[89,6,93,4],[89,10,93,8,"charset"],[89,17,93,15],[89,20,93,18,"exports"],[89,27,93,25],[89,28,93,26,"charset"],[89,35,93,33],[89,36,93,34,"mime"],[89,40,93,38],[89,41,93,39],[90,6,94,4],[90,10,94,8,"charset"],[90,17,94,15],[90,19,94,17,"mime"],[90,23,94,21],[90,27,94,25],[90,39,94,37],[90,42,94,40,"charset"],[90,49,94,47],[90,50,94,48,"toLowerCase"],[90,61,94,59],[90,62,94,60],[90,63,94,61],[91,4,95,2],[92,4,97,2],[92,11,97,9,"mime"],[92,15,97,13],[93,2,98,0],[95,2,100,0],[96,0,101,0],[97,0,102,0],[98,0,103,0],[99,0,104,0],[100,0,105,0],[102,2,107,0],[102,11,107,9,"extension"],[102,20,107,18,"extension"],[102,21,107,20,"type"],[102,25,107,24],[102,27,107,26],[103,4,108,2],[103,8,108,6],[103,9,108,7,"type"],[103,13,108,11],[103,17,108,15],[103,24,108,22,"type"],[103,28,108,26],[103,33,108,31],[103,41,108,39],[103,43,108,41],[104,6,109,4],[104,13,109,11],[104,18,109,16],[105,4,110,2],[107,4,112,2],[108,4,113,2],[108,8,113,6,"match"],[108,13,113,11],[108,16,113,14,"EXTRACT_TYPE_REGEXP"],[108,35,113,33],[108,36,113,34,"exec"],[108,40,113,38],[108,41,113,39,"type"],[108,45,113,43],[108,46,113,44],[110,4,115,2],[111,4,116,2],[111,8,116,6,"exts"],[111,12,116,10],[111,15,116,13,"match"],[111,20,116,18],[111,24,116,22,"exports"],[111,31,116,29],[111,32,116,30,"extensions"],[111,42,116,40],[111,43,116,41,"match"],[111,48,116,46],[111,49,116,47],[111,50,116,48],[111,51,116,49],[111,52,116,50,"toLowerCase"],[111,63,116,61],[111,64,116,62],[111,65,116,63],[111,66,116,64],[112,4,118,2],[112,8,118,6],[112,9,118,7,"exts"],[112,13,118,11],[112,17,118,15],[112,18,118,16,"exts"],[112,22,118,20],[112,23,118,21,"length"],[112,29,118,27],[112,31,118,29],[113,6,119,4],[113,13,119,11],[113,18,119,16],[114,4,120,2],[115,4,122,2],[115,11,122,9,"exts"],[115,15,122,13],[115,16,122,14],[115,17,122,15],[115,18,122,16],[116,2,123,0],[118,2,125,0],[119,0,126,0],[120,0,127,0],[121,0,128,0],[122,0,129,0],[123,0,130,0],[125,2,132,0],[125,11,132,9,"lookup"],[125,17,132,15,"lookup"],[125,18,132,17,"path"],[125,22,132,21],[125,24,132,23],[126,4,133,2],[126,8,133,6],[126,9,133,7,"path"],[126,13,133,11],[126,17,133,15],[126,24,133,22,"path"],[126,28,133,26],[126,33,133,31],[126,41,133,39],[126,43,133,41],[127,6,134,4],[127,13,134,11],[127,18,134,16],[128,4,135,2],[130,4,137,2],[131,4,138,2],[131,8,138,6,"extension"],[131,17,138,15],[131,20,138,18,"extname"],[131,27,138,25],[131,28,138,26],[131,32,138,30],[131,35,138,33,"path"],[131,39,138,37],[131,40,138,38],[131,41,139,5,"toLowerCase"],[131,52,139,16],[131,53,139,17],[131,54,139,18],[131,55,140,5,"substr"],[131,61,140,11],[131,62,140,12],[131,63,140,13],[131,64,140,14],[132,4,142,2],[132,8,142,6],[132,9,142,7,"extension"],[132,18,142,16],[132,20,142,18],[133,6,143,4],[133,13,143,11],[133,18,143,16],[134,4,144,2],[135,4,146,2],[135,11,146,9,"exports"],[135,18,146,16],[135,19,146,17,"types"],[135,24,146,22],[135,25,146,23,"extension"],[135,34,146,32],[135,35,146,33],[135,39,146,37],[135,44,146,42],[136,2,147,0],[138,2,149,0],[139,0,150,0],[140,0,151,0],[141,0,152,0],[143,2,154,0],[143,11,154,9,"populateMaps"],[143,23,154,21,"populateMaps"],[143,24,154,23,"extensions"],[143,34,154,33],[143,36,154,35,"types"],[143,41,154,40],[143,43,154,42],[144,4,155,2],[145,4,156,2],[145,8,156,6,"preference"],[145,18,156,16],[145,21,156,19],[145,22,156,20],[145,29,156,27],[145,31,156,29],[145,39,156,37],[145,41,156,39,"undefined"],[145,50,156,48],[145,52,156,50],[145,58,156,56],[145,59,156,57],[146,4,158,2,"Object"],[146,10,158,8],[146,11,158,9,"keys"],[146,15,158,13],[146,16,158,14,"db"],[146,18,158,16],[146,19,158,17],[146,20,158,18,"forEach"],[146,27,158,25],[146,28,158,26],[146,37,158,35,"forEachMimeType"],[146,52,158,50,"forEachMimeType"],[146,53,158,52,"type"],[146,57,158,56],[146,59,158,58],[147,6,159,4],[147,10,159,8,"mime"],[147,14,159,12],[147,17,159,15,"db"],[147,19,159,17],[147,20,159,18,"type"],[147,24,159,22],[147,25,159,23],[148,6,160,4],[148,10,160,8,"exts"],[148,14,160,12],[148,17,160,15,"mime"],[148,21,160,19],[148,22,160,20,"extensions"],[148,32,160,30],[149,6,162,4],[149,10,162,8],[149,11,162,9,"exts"],[149,15,162,13],[149,19,162,17],[149,20,162,18,"exts"],[149,24,162,22],[149,25,162,23,"length"],[149,31,162,29],[149,33,162,31],[150,8,163,6],[151,6,164,4],[153,6,166,4],[154,6,167,4,"extensions"],[154,16,167,14],[154,17,167,15,"type"],[154,21,167,19],[154,22,167,20],[154,25,167,23,"exts"],[154,29,167,27],[156,6,169,4],[157,6,170,4],[157,11,170,9],[157,15,170,13,"i"],[157,16,170,14],[157,19,170,17],[157,20,170,18],[157,22,170,20,"i"],[157,23,170,21],[157,26,170,24,"exts"],[157,30,170,28],[157,31,170,29,"length"],[157,37,170,35],[157,39,170,37,"i"],[157,40,170,38],[157,42,170,40],[157,44,170,42],[158,8,171,6],[158,12,171,10,"extension"],[158,21,171,19],[158,24,171,22,"exts"],[158,28,171,26],[158,29,171,27,"i"],[158,30,171,28],[158,31,171,29],[159,8,173,6],[159,12,173,10,"types"],[159,17,173,15],[159,18,173,16,"extension"],[159,27,173,25],[159,28,173,26],[159,30,173,28],[160,10,174,8],[160,14,174,12,"from"],[160,18,174,16],[160,21,174,19,"preference"],[160,31,174,29],[160,32,174,30,"indexOf"],[160,39,174,37],[160,40,174,38,"db"],[160,42,174,40],[160,43,174,41,"types"],[160,48,174,46],[160,49,174,47,"extension"],[160,58,174,56],[160,59,174,57],[160,60,174,58],[160,61,174,59,"source"],[160,67,174,65],[160,68,174,66],[161,10,175,8],[161,14,175,12,"to"],[161,16,175,14],[161,19,175,17,"preference"],[161,29,175,27],[161,30,175,28,"indexOf"],[161,37,175,35],[161,38,175,36,"mime"],[161,42,175,40],[161,43,175,41,"source"],[161,49,175,47],[161,50,175,48],[162,10,177,8],[162,14,177,12,"types"],[162,19,177,17],[162,20,177,18,"extension"],[162,29,177,27],[162,30,177,28],[162,35,177,33],[162,61,177,59],[162,66,178,11,"from"],[162,70,178,15],[162,73,178,18,"to"],[162,75,178,20],[162,79,178,25,"from"],[162,83,178,29],[162,88,178,34,"to"],[162,90,178,36],[162,94,178,40,"types"],[162,99,178,45],[162,100,178,46,"extension"],[162,109,178,55],[162,110,178,56],[162,111,178,57,"substr"],[162,117,178,63],[162,118,178,64],[162,119,178,65],[162,121,178,67],[162,123,178,69],[162,124,178,70],[162,129,178,75],[162,143,178,90],[162,144,178,91],[162,146,178,93],[163,12,179,10],[164,12,180,10],[165,10,181,8],[166,8,182,6],[168,8,184,6],[169,8,185,6,"types"],[169,13,185,11],[169,14,185,12,"extension"],[169,23,185,21],[169,24,185,22],[169,27,185,25,"type"],[169,31,185,29],[170,6,186,4],[171,4,187,2],[171,5,187,3],[171,6,187,4],[172,2,188,0],[173,0,188,1],[173,3]],"functionMap":{"names":["<global>","charset","contentType","extension","lookup","populateMaps","forEachMimeType"],"mappings":"AAA;ACgD;CDmB;AES;CFqB;AGS;CHgB;AIS;CJe;AKO;0BCI;GD6B;CLC"},"hasCjsExports":true},"type":"js/module"}]}